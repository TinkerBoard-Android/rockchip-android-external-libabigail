<abi-corpus architecture='elf-amd-x86_64'>
  <elf-needed>
    <dependency name='build/debug/third_party/boost-1.56.0/libboost_system.so'/>
    <dependency name='libm.so.6'/>
    <dependency name='librt.so.1'/>
    <dependency name='libdl.so.2'/>
    <dependency name='libstdc++.so.6'/>
    <dependency name='libgcc_s.so.1'/>
    <dependency name='libpthread.so.0'/>
    <dependency name='libc.so.6'/>
  </elf-needed>
  <elf-function-symbols>
    <!-- boost::filesystem::is_symlink(boost::filesystem::file_status) -->
    <elf-symbol name='_ZN5boost10filesystem10is_symlinkENS0_11file_statusE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::file_status::file_status(boost::filesystem::file_type, boost::filesystem::perms) -->
    <elf-symbol name='_ZN5boost10filesystem11file_statusC2ENS0_9file_typeENS0_5permsE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::file_status::file_status() -->
    <elf-symbol name='_ZN5boost10filesystem11file_statusC2Ev' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::path_traits::convert(char const*, std::string&, std::codecvt<wchar_t, char, __mbstate_t> const&) -->
    <elf-symbol name='_ZN5boost10filesystem11path_traits7convertEPKcRSsRKSt7codecvtIwc11__mbstate_tE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::path_traits::convert(char const*, char const*, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >&, std::codecvt<wchar_t, char, __mbstate_t> const&) -->
    <elf-symbol name='_ZN5boost10filesystem11path_traits7convertEPKcS3_RSbIwSt11char_traitsIwESaIwEERKSt7codecvtIwc11__mbstate_tE' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::path_traits::convert(char const*, char const*, std::string&, std::codecvt<wchar_t, char, __mbstate_t> const&) -->
    <elf-symbol name='_ZN5boost10filesystem11path_traits7convertEPKcS3_RSsRKSt7codecvtIwc11__mbstate_tE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::path_traits::convert(wchar_t const*, wchar_t const*, std::string&, std::codecvt<wchar_t, char, __mbstate_t> const&) -->
    <elf-symbol name='_ZN5boost10filesystem11path_traits7convertEPKwS3_RSsRKSt7codecvtIwc11__mbstate_tE' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::path_traits::dispatch(boost::filesystem::directory_entry const&, std::string&, std::codecvt<wchar_t, char, __mbstate_t> const&) -->
    <elf-symbol name='_ZN5boost10filesystem11path_traits8dispatchERKNS0_15directory_entryERSsRKSt7codecvtIwc11__mbstate_tE' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- void boost::filesystem::path_traits::dispatch<std::string>(std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&, std::string&, std::codecvt<wchar_t, char, __mbstate_t> const&) -->
    <elf-symbol name='_ZN5boost10filesystem11path_traits8dispatchISsEEvRKSbIwSt11char_traitsIwESaIwEERT_RKSt7codecvtIwc11__mbstate_tE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- void boost::filesystem::path_traits::dispatch<std::string>(std::string const&, std::string&, std::codecvt<wchar_t, char, __mbstate_t> const&) -->
    <elf-symbol name='_ZN5boost10filesystem11path_traits8dispatchISsEEvRKSsRT_RKSt7codecvtIwc11__mbstate_tE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- void boost::filesystem::path_traits::dispatch<char, std::string>(char* const&, std::string&, std::codecvt<wchar_t, char, __mbstate_t> const&) -->
    <elf-symbol name='_ZN5boost10filesystem11path_traits8dispatchIcSsEEvRKPT_RT0_RKSt7codecvtIwc11__mbstate_tE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::copy_symlink(boost::filesystem::path const&, boost::filesystem::path const&, boost::system::error_code&) -->
    <elf-symbol name='_ZN5boost10filesystem12copy_symlinkERKNS0_4pathES3_RNS_6system10error_codeE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::current_path() -->
    <elf-symbol name='_ZN5boost10filesystem12current_pathEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::is_directory(boost::filesystem::file_status) -->
    <elf-symbol name='_ZN5boost10filesystem12is_directoryENS0_11file_statusE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::is_directory(boost::filesystem::path const&) -->
    <elf-symbol name='_ZN5boost10filesystem12is_directoryERKNS0_4pathE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::is_directory(boost::filesystem::path const&, boost::system::error_code&) -->
    <elf-symbol name='_ZN5boost10filesystem12is_directoryERKNS0_4pathERNS_6system10error_codeE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::status_known(boost::filesystem::file_status) -->
    <elf-symbol name='_ZN5boost10filesystem12status_knownENS0_11file_statusE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::type_present(boost::filesystem::file_status) -->
    <elf-symbol name='_ZN5boost10filesystem12type_presentENS0_11file_statusE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::windows_name(std::string const&) -->
    <elf-symbol name='_ZN5boost10filesystem12windows_nameERKSs' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::portable_name(std::string const&) -->
    <elf-symbol name='_ZN5boost10filesystem13portable_nameERKSs' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::copy_directory(boost::filesystem::path const&, boost::filesystem::path const&, boost::system::error_code&) -->
    <elf-symbol name='_ZN5boost10filesystem14copy_directoryERKNS0_4pathES3_RNS_6system10error_codeE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::symlink_status(boost::filesystem::path const&, boost::system::error_code&) -->
    <elf-symbol name='_ZN5boost10filesystem14symlink_statusERKNS0_4pathERNS_6system10error_codeE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::directory_entry::replace_filename(boost::filesystem::path const&, boost::filesystem::file_status, boost::filesystem::file_status) -->
    <elf-symbol name='_ZN5boost10filesystem15directory_entry16replace_filenameERKNS0_4pathENS0_11file_statusES5_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::directory_entry::assign(boost::filesystem::path const&, boost::filesystem::file_status, boost::filesystem::file_status) -->
    <elf-symbol name='_ZN5boost10filesystem15directory_entry6assignERKNS0_4pathENS0_11file_statusES5_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::directory_entry::directory_entry() -->
    <elf-symbol name='_ZN5boost10filesystem15directory_entryC2Ev' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::directory_entry::~directory_entry() -->
    <elf-symbol name='_ZN5boost10filesystem15directory_entryD2Ev' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::is_regular_file(boost::filesystem::file_status) -->
    <elf-symbol name='_ZN5boost10filesystem15is_regular_fileENS0_11file_statusE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::filesystem_error::m_imp::m_imp() -->
    <elf-symbol name='_ZN5boost10filesystem16filesystem_error5m_impC2Ev' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::filesystem_error::m_imp::~m_imp() -->
    <elf-symbol name='_ZN5boost10filesystem16filesystem_error5m_impD2Ev' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::filesystem_error::filesystem_error(std::string const&, boost::system::error_code) -->
    <elf-symbol name='_ZN5boost10filesystem16filesystem_errorC2ERKSsNS_6system10error_codeE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::filesystem_error::filesystem_error(std::string const&, boost::filesystem::path const&, boost::system::error_code) -->
    <elf-symbol name='_ZN5boost10filesystem16filesystem_errorC2ERKSsRKNS0_4pathENS_6system10error_codeE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::filesystem_error::filesystem_error(std::string const&, boost::filesystem::path const&, boost::filesystem::path const&, boost::system::error_code) -->
    <elf-symbol name='_ZN5boost10filesystem16filesystem_errorC2ERKSsRKNS0_4pathES6_NS_6system10error_codeE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::filesystem_error::~filesystem_error() -->
    <elf-symbol name='_ZN5boost10filesystem16filesystem_errorD0Ev' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::filesystem_error::~filesystem_error() -->
    <elf-symbol name='_ZN5boost10filesystem16filesystem_errorD2Ev' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::create_directories(boost::filesystem::path const&, boost::system::error_code&) -->
    <elf-symbol name='_ZN5boost10filesystem18create_directoriesERKNS0_4pathERNS_6system10error_codeE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::directory_iterator::increment(boost::system::error_code&) -->
    <elf-symbol name='_ZN5boost10filesystem18directory_iterator9incrementERNS_6system10error_codeE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::directory_iterator::increment() -->
    <elf-symbol name='_ZN5boost10filesystem18directory_iterator9incrementEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::directory_iterator::directory_iterator(boost::filesystem::path const&) -->
    <elf-symbol name='_ZN5boost10filesystem18directory_iteratorC2ERKNS0_4pathE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::directory_iterator::directory_iterator() -->
    <elf-symbol name='_ZN5boost10filesystem18directory_iteratorC2Ev' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::directory_iterator::~directory_iterator() -->
    <elf-symbol name='_ZN5boost10filesystem18directory_iteratorD2Ev' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::portable_file_name(std::string const&) -->
    <elf-symbol name='_ZN5boost10filesystem18portable_file_nameERKSs' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::permissions_present(boost::filesystem::file_status) -->
    <elf-symbol name='_ZN5boost10filesystem19permissions_presentENS0_11file_statusE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::portable_posix_name(std::string const&) -->
    <elf-symbol name='_ZN5boost10filesystem19portable_posix_nameERKSs' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::codecvt_error_category() -->
    <elf-symbol name='_ZN5boost10filesystem22codecvt_error_categoryEv' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::portable_directory_name(std::string const&) -->
    <elf-symbol name='_ZN5boost10filesystem23portable_directory_nameERKSs' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::m_normalize() -->
    <elf-symbol name='_ZN5boost10filesystem4path11m_normalizeEv' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::remove_filename() -->
    <elf-symbol name='_ZN5boost10filesystem4path15remove_filenameEv' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::replace_extension(boost::filesystem::path const&) -->
    <elf-symbol name='_ZN5boost10filesystem4path17replace_extensionERKS1_' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::m_path_iterator_decrement(boost::filesystem::path::iterator&) -->
    <elf-symbol name='_ZN5boost10filesystem4path25m_path_iterator_decrementERNS1_8iteratorE' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::m_path_iterator_increment(boost::filesystem::path::iterator&) -->
    <elf-symbol name='_ZN5boost10filesystem4path25m_path_iterator_incrementERNS1_8iteratorE' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::m_erase_redundant_separator(unsigned long) -->
    <elf-symbol name='_ZN5boost10filesystem4path27m_erase_redundant_separatorEm' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::m_append_separator_if_needed() -->
    <elf-symbol name='_ZN5boost10filesystem4path28m_append_separator_if_neededEv' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::clear() -->
    <elf-symbol name='_ZN5boost10filesystem4path5clearEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::imbue(std::locale const&) -->
    <elf-symbol name='_ZN5boost10filesystem4path5imbueERKSt6locale' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::path& boost::filesystem::path::assign<char*>(char*, char*) -->
    <elf-symbol name='_ZN5boost10filesystem4path6assignIPcEERS1_T_S5_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::path& boost::filesystem::path::assign<char*>(char*, char*, std::codecvt<wchar_t, char, __mbstate_t> const&) -->
    <elf-symbol name='_ZN5boost10filesystem4path6assignIPcEERS1_T_S5_RKSt7codecvtIwc11__mbstate_tE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::codecvt() -->
    <elf-symbol name='_ZN5boost10filesystem4path7codecvtEv' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::iterator::decrement() -->
    <elf-symbol name='_ZN5boost10filesystem4path8iterator9decrementEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::iterator::increment() -->
    <elf-symbol name='_ZN5boost10filesystem4path8iterator9incrementEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::iterator::iterator(boost::filesystem::path::iterator const&) -->
    <elf-symbol name='_ZN5boost10filesystem4path8iteratorC2ERKS2_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::iterator::iterator() -->
    <elf-symbol name='_ZN5boost10filesystem4path8iteratorC2Ev' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::iterator::~iterator() -->
    <elf-symbol name='_ZN5boost10filesystem4path8iteratorD2Ev' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::path(char const*) -->
    <elf-symbol name='_ZN5boost10filesystem4pathC2EPKc' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::path(boost::filesystem::path const&) -->
    <elf-symbol name='_ZN5boost10filesystem4pathC2ERKS1_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::path(std::string const&) -->
    <elf-symbol name='_ZN5boost10filesystem4pathC2ERKSs' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::path() -->
    <elf-symbol name='_ZN5boost10filesystem4pathC2Ev' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::path<char const*>(char const*, char const*) -->
    <elf-symbol name='_ZN5boost10filesystem4pathC2IPKcEET_S5_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::path<std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > >(std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&, boost::enable_if<boost::filesystem::path_traits::is_pathable<boost::decay<std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > >::type>, void>::type*) -->
    <elf-symbol name='_ZN5boost10filesystem4pathC2ISbIwSt11char_traitsIwESaIwEEEERKT_PNS_9enable_ifINS0_11path_traits11is_pathableINS_5decayIS7_E4typeEEEvE4typeE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::~path() -->
    <elf-symbol name='_ZN5boost10filesystem4pathD2Ev' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::operator=(boost::filesystem::path const&) -->
    <elf-symbol name='_ZN5boost10filesystem4pathaSERKS1_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::enable_if<boost::filesystem::path_traits::is_pathable<boost::decay<char*>::type>, boost::filesystem::path&>::type boost::filesystem::path::operator=<char*>(char* const&) -->
    <elf-symbol name='_ZN5boost10filesystem4pathaSIPcEENS_9enable_ifINS0_11path_traits11is_pathableINS_5decayIT_E4typeEEERS1_E4typeERKS8_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::enable_if<boost::filesystem::path_traits::is_pathable<boost::decay<std::string>::type>, boost::filesystem::path&>::type boost::filesystem::path::operator=<std::string>(std::string const&) -->
    <elf-symbol name='_ZN5boost10filesystem4pathaSISsEENS_9enable_ifINS0_11path_traits11is_pathableINS_5decayIT_E4typeEEERS1_E4typeERKS7_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::operator/=(char const*) -->
    <elf-symbol name='_ZN5boost10filesystem4pathdVEPKc' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::operator/=(boost::filesystem::path const&) -->
    <elf-symbol name='_ZN5boost10filesystem4pathdVERKS1_' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::equivalent(boost::filesystem::path const&, boost::filesystem::path const&, boost::system::error_code*) -->
    <elf-symbol name='_ZN5boost10filesystem6detail10equivalentERKNS0_4pathES4_PNS_6system10error_codeE' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::remove_all(boost::filesystem::path const&, boost::system::error_code*) -->
    <elf-symbol name='_ZN5boost10filesystem6detail10remove_allERKNS0_4pathEPNS_6system10error_codeE' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::dir_itr_imp::dir_itr_imp() -->
    <elf-symbol name='_ZN5boost10filesystem6detail11dir_itr_impC2Ev' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::dir_itr_imp::~dir_itr_imp() -->
    <elf-symbol name='_ZN5boost10filesystem6detail11dir_itr_impD2Ev' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::lex_compare(boost::filesystem::path::iterator, boost::filesystem::path::iterator, boost::filesystem::path::iterator, boost::filesystem::path::iterator) -->
    <elf-symbol name='_ZN5boost10filesystem6detail11lex_compareENS0_4path8iteratorES3_S3_S3_' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::permissions(boost::filesystem::path const&, boost::filesystem::perms, boost::system::error_code*) -->
    <elf-symbol name='_ZN5boost10filesystem6detail11permissionsERKNS0_4pathENS0_5permsEPNS_6system10error_codeE' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::resize_file(boost::filesystem::path const&, unsigned long, boost::system::error_code*) -->
    <elf-symbol name='_ZN5boost10filesystem6detail11resize_fileERKNS0_4pathEmPNS_6system10error_codeE' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::unique_path(boost::filesystem::path const&, boost::system::error_code*) -->
    <elf-symbol name='_ZN5boost10filesystem6detail11unique_pathERKNS0_4pathEPNS_6system10error_codeE' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::copy_symlink(boost::filesystem::path const&, boost::filesystem::path const&, boost::system::error_code*) -->
    <elf-symbol name='_ZN5boost10filesystem6detail12copy_symlinkERKNS0_4pathES4_PNS_6system10error_codeE' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::current_path(boost::system::error_code*) -->
    <elf-symbol name='_ZN5boost10filesystem6detail12current_pathEPNS_6system10error_codeE' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::current_path(boost::filesystem::path const&, boost::system::error_code*) -->
    <elf-symbol name='_ZN5boost10filesystem6detail12current_pathERKNS0_4pathEPNS_6system10error_codeE' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::initial_path(boost::system::error_code*) -->
    <elf-symbol name='_ZN5boost10filesystem6detail12initial_pathEPNS_6system10error_codeE' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::read_symlink(boost::filesystem::path const&, boost::system::error_code*) -->
    <elf-symbol name='_ZN5boost10filesystem6detail12read_symlinkERKNS0_4pathEPNS_6system10error_codeE' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::dir_itr_close(void*&, void*&) -->
    <elf-symbol name='_ZN5boost10filesystem6detail13dir_itr_closeERPvS3_' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::copy_directory(boost::filesystem::path const&, boost::filesystem::path const&, boost::system::error_code*) -->
    <elf-symbol name='_ZN5boost10filesystem6detail14copy_directoryERKNS0_4pathES4_PNS_6system10error_codeE' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::create_symlink(boost::filesystem::path const&, boost::filesystem::path const&, boost::system::error_code*) -->
    <elf-symbol name='_ZN5boost10filesystem6detail14create_symlinkERKNS0_4pathES4_PNS_6system10error_codeE' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::symlink_status(boost::filesystem::path const&, boost::system::error_code*) -->
    <elf-symbol name='_ZN5boost10filesystem6detail14symlink_statusERKNS0_4pathEPNS_6system10error_codeE' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::hard_link_count(boost::filesystem::path const&, boost::system::error_code*) -->
    <elf-symbol name='_ZN5boost10filesystem6detail15hard_link_countERKNS0_4pathEPNS_6system10error_codeE' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::last_write_time(boost::filesystem::path const&, boost::system::error_code*) -->
    <elf-symbol name='_ZN5boost10filesystem6detail15last_write_timeERKNS0_4pathEPNS_6system10error_codeE' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::last_write_time(boost::filesystem::path const&, long, boost::system::error_code*) -->
    <elf-symbol name='_ZN5boost10filesystem6detail15last_write_timeERKNS0_4pathElPNS_6system10error_codeE' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::system_complete(boost::filesystem::path const&, boost::system::error_code*) -->
    <elf-symbol name='_ZN5boost10filesystem6detail15system_completeERKNS0_4pathEPNS_6system10error_codeE' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::create_directory(boost::filesystem::path const&, boost::system::error_code*) -->
    <elf-symbol name='_ZN5boost10filesystem6detail16create_directoryERKNS0_4pathEPNS_6system10error_codeE' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::create_hard_link(boost::filesystem::path const&, boost::filesystem::path const&, boost::system::error_code*) -->
    <elf-symbol name='_ZN5boost10filesystem6detail16create_hard_linkERKNS0_4pathES4_PNS_6system10error_codeE' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::create_directories(boost::filesystem::path const&, boost::system::error_code*) -->
    <elf-symbol name='_ZN5boost10filesystem6detail18create_directoriesERKNS0_4pathEPNS_6system10error_codeE' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::utf8_codecvt_facet::get_octet_count(unsigned char) -->
    <elf-symbol name='_ZN5boost10filesystem6detail18utf8_codecvt_facet15get_octet_countEh' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::utf8_codecvt_facet::get_cont_octet_count(unsigned char) -->
    <elf-symbol name='_ZN5boost10filesystem6detail18utf8_codecvt_facet20get_cont_octet_countEh' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::utf8_codecvt_facet::~utf8_codecvt_facet() -->
    <elf-symbol name='_ZN5boost10filesystem6detail18utf8_codecvt_facetD0Ev' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::utf8_codecvt_facet::~utf8_codecvt_facet() -->
    <elf-symbol name='_ZN5boost10filesystem6detail18utf8_codecvt_facetD2Ev' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::temp_directory_path(boost::system::error_code*) -->
    <elf-symbol name='_ZN5boost10filesystem6detail19temp_directory_pathEPNS_6system10error_codeE' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::create_directory_symlink(boost::filesystem::path const&, boost::filesystem::path const&, boost::system::error_code*) -->
    <elf-symbol name='_ZN5boost10filesystem6detail24create_directory_symlinkERKNS0_4pathES4_PNS_6system10error_codeE' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::directory_iterator_construct(boost::filesystem::directory_iterator&, boost::filesystem::path const&, boost::system::error_code*) -->
    <elf-symbol name='_ZN5boost10filesystem6detail28directory_iterator_constructERNS0_18directory_iteratorERKNS0_4pathEPNS_6system10error_codeE' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::directory_iterator_increment(boost::filesystem::directory_iterator&, boost::system::error_code*) -->
    <elf-symbol name='_ZN5boost10filesystem6detail28directory_iterator_incrementERNS0_18directory_iteratorEPNS_6system10error_codeE' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::possible_large_file_size_support() -->
    <elf-symbol name='_ZN5boost10filesystem6detail32possible_large_file_size_supportEv' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::copy(boost::filesystem::path const&, boost::filesystem::path const&, boost::system::error_code*) -->
    <elf-symbol name='_ZN5boost10filesystem6detail4copyERKNS0_4pathES4_PNS_6system10error_codeE' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::space(boost::filesystem::path const&, boost::system::error_code*) -->
    <elf-symbol name='_ZN5boost10filesystem6detail5spaceERKNS0_4pathEPNS_6system10error_codeE' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::remove(boost::filesystem::path const&, boost::system::error_code*) -->
    <elf-symbol name='_ZN5boost10filesystem6detail6removeERKNS0_4pathEPNS_6system10error_codeE' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::rename(boost::filesystem::path const&, boost::filesystem::path const&, boost::system::error_code*) -->
    <elf-symbol name='_ZN5boost10filesystem6detail6renameERKNS0_4pathES4_PNS_6system10error_codeE' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::status(boost::filesystem::path const&, boost::system::error_code*) -->
    <elf-symbol name='_ZN5boost10filesystem6detail6statusERKNS0_4pathEPNS_6system10error_codeE' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::is_empty(boost::filesystem::path const&, boost::system::error_code*) -->
    <elf-symbol name='_ZN5boost10filesystem6detail8is_emptyERKNS0_4pathEPNS_6system10error_codeE' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::canonical(boost::filesystem::path const&, boost::filesystem::path const&, boost::system::error_code*) -->
    <elf-symbol name='_ZN5boost10filesystem6detail9canonicalERKNS0_4pathES4_PNS_6system10error_codeE' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::copy_file(boost::filesystem::path const&, boost::filesystem::path const&, boost::filesystem::copy_option, boost::system::error_code*) -->
    <elf-symbol name='_ZN5boost10filesystem6detail9copy_fileERKNS0_4pathES4_NS0_11copy_optionEPNS_6system10error_codeE' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::file_size(boost::filesystem::path const&, boost::system::error_code*) -->
    <elf-symbol name='_ZN5boost10filesystem6detail9file_sizeERKNS0_4pathEPNS_6system10error_codeE' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::mode_cast(boost::filesystem::perms) -->
    <elf-symbol name='_ZN5boost10filesystem6detail9mode_castENS0_5permsE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::native(std::string const&) -->
    <elf-symbol name='_ZN5boost10filesystem6nativeERKSs' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::status(boost::filesystem::path const&, boost::system::error_code&) -->
    <elf-symbol name='_ZN5boost10filesystem6statusERKNS0_4pathERNS_6system10error_codeE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::absolute(boost::filesystem::path const&, boost::filesystem::path const&) -->
    <elf-symbol name='_ZN5boost10filesystem8absoluteERKNS0_4pathES3_' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::copy_file(boost::filesystem::path const&, boost::filesystem::path const&, boost::filesystem::copy_option, boost::system::error_code&) -->
    <elf-symbol name='_ZN5boost10filesystem9copy_fileERKNS0_4pathES3_NS0_11copy_optionERNS_6system10error_codeE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::operator&(boost::filesystem::perms, boost::filesystem::perms) -->
    <elf-symbol name='_ZN5boost10filesystemanENS0_5permsES1_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::operator~(boost::filesystem::perms) -->
    <elf-symbol name='_ZN5boost10filesystemcoENS0_5permsE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::operator/(boost::filesystem::path const&, boost::filesystem::path const&) -->
    <elf-symbol name='_ZN5boost10filesystemdvERKNS0_4pathES3_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::operator==(boost::filesystem::path const&, boost::filesystem::path const&) -->
    <elf-symbol name='_ZN5boost10filesystemeqERKNS0_4pathES3_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::operator!=(boost::filesystem::path const&, boost::filesystem::path const&) -->
    <elf-symbol name='_ZN5boost10filesystemneERKNS0_4pathES3_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::operator|=(boost::filesystem::perms&, boost::filesystem::perms) -->
    <elf-symbol name='_ZN5boost10filesystemoRERNS0_5permsES1_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::operator|(boost::filesystem::perms, boost::filesystem::perms) -->
    <elf-symbol name='_ZN5boost10filesystemorENS0_5permsES1_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>::swap(boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>&) -->
    <elf-symbol name='_ZN5boost10shared_ptrINS_10filesystem16filesystem_error5m_impEE4swapERS4_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>::reset() -->
    <elf-symbol name='_ZN5boost10shared_ptrINS_10filesystem16filesystem_error5m_impEE5resetEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- void boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>::reset<boost::filesystem::filesystem_error::m_imp>(boost::filesystem::filesystem_error::m_imp*) -->
    <elf-symbol name='_ZN5boost10shared_ptrINS_10filesystem16filesystem_error5m_impEE5resetIS3_EEvPT_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>::shared_ptr() -->
    <elf-symbol name='_ZN5boost10shared_ptrINS_10filesystem16filesystem_error5m_impEEC2Ev' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>::shared_ptr<boost::filesystem::filesystem_error::m_imp>(boost::filesystem::filesystem_error::m_imp*) -->
    <elf-symbol name='_ZN5boost10shared_ptrINS_10filesystem16filesystem_error5m_impEEC2IS3_EEPT_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>::~shared_ptr() -->
    <elf-symbol name='_ZN5boost10shared_ptrINS_10filesystem16filesystem_error5m_impEED2Ev' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>::swap(boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>&) -->
    <elf-symbol name='_ZN5boost10shared_ptrINS_10filesystem6detail11dir_itr_impEE4swapERS4_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>::reset() -->
    <elf-symbol name='_ZN5boost10shared_ptrINS_10filesystem6detail11dir_itr_impEE5resetEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>::shared_ptr() -->
    <elf-symbol name='_ZN5boost10shared_ptrINS_10filesystem6detail11dir_itr_impEEC2Ev' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>::shared_ptr<boost::filesystem::detail::dir_itr_imp>(boost::filesystem::detail::dir_itr_imp*) -->
    <elf-symbol name='_ZN5boost10shared_ptrINS_10filesystem6detail11dir_itr_impEEC2IS3_EEPT_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>::~shared_ptr() -->
    <elf-symbol name='_ZN5boost10shared_ptrINS_10filesystem6detail11dir_itr_impEED2Ev' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::scoped_array<char>::scoped_array(char*) -->
    <elf-symbol name='_ZN5boost12scoped_arrayIcEC2EPc' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::scoped_array<char>::~scoped_array() -->
    <elf-symbol name='_ZN5boost12scoped_arrayIcED2Ev' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::scoped_array<wchar_t>::scoped_array(wchar_t*) -->
    <elf-symbol name='_ZN5boost12scoped_arrayIwEC2EPw' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::scoped_array<wchar_t>::~scoped_array() -->
    <elf-symbol name='_ZN5boost12scoped_arrayIwED2Ev' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- void boost::checked_delete<boost::filesystem::filesystem_error::m_imp>(boost::filesystem::filesystem_error::m_imp*) -->
    <elf-symbol name='_ZN5boost14checked_deleteINS_10filesystem16filesystem_error5m_impEEEvPT_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- void boost::checked_delete<boost::filesystem::detail::dir_itr_imp>(boost::filesystem::detail::dir_itr_imp*) -->
    <elf-symbol name='_ZN5boost14checked_deleteINS_10filesystem6detail11dir_itr_impEEEvPT_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry&, long>::derived() -->
    <elf-symbol name='_ZN5boost15iterator_facadeINS_10filesystem18directory_iteratorENS1_15directory_entryENS_25single_pass_traversal_tagERS3_lE7derivedEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry&, long>::operator++() -->
    <elf-symbol name='_ZN5boost15iterator_facadeINS_10filesystem18directory_iteratorENS1_15directory_entryENS_25single_pass_traversal_tagERS3_lEppEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::iterator_facade<boost::filesystem::path::iterator, boost::filesystem::path const, boost::bidirectional_traversal_tag, boost::filesystem::path const&, long>::derived() -->
    <elf-symbol name='_ZN5boost15iterator_facadeINS_10filesystem4path8iteratorEKS2_NS_27bidirectional_traversal_tagERS4_lE7derivedEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::iterator_facade<boost::filesystem::path::iterator, boost::filesystem::path const, boost::bidirectional_traversal_tag, boost::filesystem::path const&, long>::operator&#45;&#45;(int) -->
    <elf-symbol name='_ZN5boost15iterator_facadeINS_10filesystem4path8iteratorEKS2_NS_27bidirectional_traversal_tagERS4_lEmmEi' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::iterator_facade<boost::filesystem::path::iterator, boost::filesystem::path const, boost::bidirectional_traversal_tag, boost::filesystem::path const&, long>::operator&#45;&#45;() -->
    <elf-symbol name='_ZN5boost15iterator_facadeINS_10filesystem4path8iteratorEKS2_NS_27bidirectional_traversal_tagERS4_lEmmEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::iterator_facade<boost::filesystem::path::iterator, boost::filesystem::path const, boost::bidirectional_traversal_tag, boost::filesystem::path const&, long>::operator++() -->
    <elf-symbol name='_ZN5boost15iterator_facadeINS_10filesystem4path8iteratorEKS2_NS_27bidirectional_traversal_tagERS4_lEppEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- void boost::checked_array_delete<char>(char*) -->
    <elf-symbol name='_ZN5boost20checked_array_deleteIcEEvPT_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- void boost::checked_array_delete<wchar_t>(wchar_t*) -->
    <elf-symbol name='_ZN5boost20checked_array_deleteIwEEvPT_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::directory_iterator::reference boost::iterator_core_access::dereference<boost::filesystem::directory_iterator>(boost::filesystem::directory_iterator const&) -->
    <elf-symbol name='_ZN5boost20iterator_core_access11dereferenceINS_10filesystem18directory_iteratorEEENT_9referenceERKS4_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::iterator::reference boost::iterator_core_access::dereference<boost::filesystem::path::iterator>(boost::filesystem::path::iterator const&) -->
    <elf-symbol name='_ZN5boost20iterator_core_access11dereferenceINS_10filesystem4path8iteratorEEENT_9referenceERKS5_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- bool boost::iterator_core_access::equal<boost::filesystem::directory_iterator, boost::filesystem::directory_iterator>(boost::filesystem::directory_iterator const&, boost::filesystem::directory_iterator const&, mpl_::bool_<true>) -->
    <elf-symbol name='_ZN5boost20iterator_core_access5equalINS_10filesystem18directory_iteratorES3_EEbRKT_RKT0_N4mpl_5bool_ILb1EEE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- bool boost::iterator_core_access::equal<boost::filesystem::path::iterator, boost::filesystem::path::iterator>(boost::filesystem::path::iterator const&, boost::filesystem::path::iterator const&, mpl_::bool_<true>) -->
    <elf-symbol name='_ZN5boost20iterator_core_access5equalINS_10filesystem4path8iteratorES4_EEbRKT_RKT0_N4mpl_5bool_ILb1EEE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- void boost::iterator_core_access::decrement<boost::filesystem::path::iterator>(boost::filesystem::path::iterator&) -->
    <elf-symbol name='_ZN5boost20iterator_core_access9decrementINS_10filesystem4path8iteratorEEEvRT_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- void boost::iterator_core_access::increment<boost::filesystem::directory_iterator>(boost::filesystem::directory_iterator&) -->
    <elf-symbol name='_ZN5boost20iterator_core_access9incrementINS_10filesystem18directory_iteratorEEEvRT_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- void boost::iterator_core_access::increment<boost::filesystem::path::iterator>(boost::filesystem::path::iterator&) -->
    <elf-symbol name='_ZN5boost20iterator_core_access9incrementINS_10filesystem4path8iteratorEEEvRT_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::detail::shared_count::swap(boost::detail::shared_count&) -->
    <elf-symbol name='_ZN5boost6detail12shared_count4swapERS1_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::detail::shared_count::shared_count() -->
    <elf-symbol name='_ZN5boost6detail12shared_countC2Ev' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::detail::shared_count::shared_count<boost::filesystem::filesystem_error::m_imp>(boost::filesystem::filesystem_error::m_imp*) -->
    <elf-symbol name='_ZN5boost6detail12shared_countC2INS_10filesystem16filesystem_error5m_impEEEPT_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::detail::shared_count::shared_count<boost::filesystem::detail::dir_itr_imp>(boost::filesystem::detail::dir_itr_imp*) -->
    <elf-symbol name='_ZN5boost6detail12shared_countC2INS_10filesystem6detail11dir_itr_impEEEPT_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::detail::shared_count::~shared_count() -->
    <elf-symbol name='_ZN5boost6detail12shared_countD2Ev' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::detail::sp_counted_base::weak_release() -->
    <elf-symbol name='_ZN5boost6detail15sp_counted_base12weak_releaseEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::detail::sp_counted_base::destroy() -->
    <elf-symbol name='_ZN5boost6detail15sp_counted_base7destroyEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::detail::sp_counted_base::release() -->
    <elf-symbol name='_ZN5boost6detail15sp_counted_base7releaseEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::detail::sp_counted_base::sp_counted_base() -->
    <elf-symbol name='_ZN5boost6detail15sp_counted_baseC2Ev' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::detail::sp_counted_base::~sp_counted_base() -->
    <elf-symbol name='_ZN5boost6detail15sp_counted_baseD0Ev' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::detail::sp_counted_base::~sp_counted_base() -->
    <elf-symbol name='_ZN5boost6detail15sp_counted_baseD2Ev' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::detail::sp_counted_impl_p<boost::filesystem::filesystem_error::m_imp>::get_deleter(std::type_info const&) -->
    <elf-symbol name='_ZN5boost6detail17sp_counted_impl_pINS_10filesystem16filesystem_error5m_impEE11get_deleterERKSt9type_info' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::detail::sp_counted_impl_p<boost::filesystem::filesystem_error::m_imp>::get_untyped_deleter() -->
    <elf-symbol name='_ZN5boost6detail17sp_counted_impl_pINS_10filesystem16filesystem_error5m_impEE19get_untyped_deleterEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::detail::sp_counted_impl_p<boost::filesystem::filesystem_error::m_imp>::dispose() -->
    <elf-symbol name='_ZN5boost6detail17sp_counted_impl_pINS_10filesystem16filesystem_error5m_impEE7disposeEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::detail::sp_counted_impl_p<boost::filesystem::filesystem_error::m_imp>::sp_counted_impl_p(boost::filesystem::filesystem_error::m_imp*) -->
    <elf-symbol name='_ZN5boost6detail17sp_counted_impl_pINS_10filesystem16filesystem_error5m_impEEC2EPS4_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::detail::sp_counted_impl_p<boost::filesystem::filesystem_error::m_imp>::~sp_counted_impl_p() -->
    <elf-symbol name='_ZN5boost6detail17sp_counted_impl_pINS_10filesystem16filesystem_error5m_impEED0Ev' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::detail::sp_counted_impl_p<boost::filesystem::filesystem_error::m_imp>::~sp_counted_impl_p() -->
    <elf-symbol name='_ZN5boost6detail17sp_counted_impl_pINS_10filesystem16filesystem_error5m_impEED2Ev' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::detail::sp_counted_impl_p<boost::filesystem::detail::dir_itr_imp>::get_deleter(std::type_info const&) -->
    <elf-symbol name='_ZN5boost6detail17sp_counted_impl_pINS_10filesystem6detail11dir_itr_impEE11get_deleterERKSt9type_info' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::detail::sp_counted_impl_p<boost::filesystem::detail::dir_itr_imp>::get_untyped_deleter() -->
    <elf-symbol name='_ZN5boost6detail17sp_counted_impl_pINS_10filesystem6detail11dir_itr_impEE19get_untyped_deleterEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::detail::sp_counted_impl_p<boost::filesystem::detail::dir_itr_imp>::dispose() -->
    <elf-symbol name='_ZN5boost6detail17sp_counted_impl_pINS_10filesystem6detail11dir_itr_impEE7disposeEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::detail::sp_counted_impl_p<boost::filesystem::detail::dir_itr_imp>::sp_counted_impl_p(boost::filesystem::detail::dir_itr_imp*) -->
    <elf-symbol name='_ZN5boost6detail17sp_counted_impl_pINS_10filesystem6detail11dir_itr_impEEC2EPS4_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::detail::sp_counted_impl_p<boost::filesystem::detail::dir_itr_imp>::~sp_counted_impl_p() -->
    <elf-symbol name='_ZN5boost6detail17sp_counted_impl_pINS_10filesystem6detail11dir_itr_impEED0Ev' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::detail::sp_counted_impl_p<boost::filesystem::detail::dir_itr_imp>::~sp_counted_impl_p() -->
    <elf-symbol name='_ZN5boost6detail17sp_counted_impl_pINS_10filesystem6detail11dir_itr_impEED2Ev' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- void boost::detail::sp_pointer_construct<boost::filesystem::filesystem_error::m_imp, boost::filesystem::filesystem_error::m_imp>(boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>*, boost::filesystem::filesystem_error::m_imp*, boost::detail::shared_count&) -->
    <elf-symbol name='_ZN5boost6detail20sp_pointer_constructINS_10filesystem16filesystem_error5m_impES4_EEvPNS_10shared_ptrIT_EEPT0_RNS0_12shared_countE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- void boost::detail::sp_pointer_construct<boost::filesystem::detail::dir_itr_imp, boost::filesystem::detail::dir_itr_imp>(boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>*, boost::filesystem::detail::dir_itr_imp*, boost::detail::shared_count&) -->
    <elf-symbol name='_ZN5boost6detail20sp_pointer_constructINS_10filesystem6detail11dir_itr_impES4_EEvPNS_10shared_ptrIT_EEPT0_RNS0_12shared_countE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::detail::atomic_exchange_and_add(int*, int) -->
    <elf-symbol name='_ZN5boost6detail23atomic_exchange_and_addEPii' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::detail::operator_arrow_dispatch<boost::filesystem::path const&, boost::filesystem::path const*>::apply(boost::filesystem::path const&) -->
    <elf-symbol name='_ZN5boost6detail23operator_arrow_dispatchIRKNS_10filesystem4pathEPS4_E5applyES5_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::detail::operator_arrow_dispatch<boost::filesystem::directory_entry&, boost::filesystem::directory_entry*>::apply(boost::filesystem::directory_entry&) -->
    <elf-symbol name='_ZN5boost6detail23operator_arrow_dispatchIRNS_10filesystem15directory_entryEPS3_E5applyES4_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::detail::sp_enable_shared_from_this(...) -->
    <elf-symbol name='_ZN5boost6detail26sp_enable_shared_from_thisEz' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::system::error_code::unspecified_bool_true() -->
    <elf-symbol name='_ZN5boost6system10error_code21unspecified_bool_trueEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::system::error_code::clear() -->
    <elf-symbol name='_ZN5boost6system10error_code5clearEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::system::error_code::assign(int, boost::system::error_category const&) -->
    <elf-symbol name='_ZN5boost6system10error_code6assignEiRKNS0_14error_categoryE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::system::error_code::error_code(int, boost::system::error_category const&) -->
    <elf-symbol name='_ZN5boost6system10error_codeC2EiRKNS0_14error_categoryE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::system::error_code::error_code() -->
    <elf-symbol name='_ZN5boost6system10error_codeC2Ev' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::system::system_error::system_error(boost::system::error_code, std::string const&) -->
    <elf-symbol name='_ZN5boost6system12system_errorC2ENS0_10error_codeERKSs' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::system::system_error::system_error(int, boost::system::error_category const&, char const*) -->
    <elf-symbol name='_ZN5boost6system12system_errorC2EiRKNS0_14error_categoryEPKc' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::system::system_error::~system_error() -->
    <elf-symbol name='_ZN5boost6system12system_errorD0Ev' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::system::system_error::~system_error() -->
    <elf-symbol name='_ZN5boost6system12system_errorD2Ev' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::system::error_category::error_category() -->
    <elf-symbol name='_ZN5boost6system14error_categoryC2Ev' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::system::error_category::~error_category() -->
    <elf-symbol name='_ZN5boost6system14error_categoryD0Ev' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::system::error_category::~error_category() -->
    <elf-symbol name='_ZN5boost6system14error_categoryD2Ev' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::system::error_condition::error_condition(int, boost::system::error_category const&) -->
    <elf-symbol name='_ZN5boost6system15error_conditionC2EiRKNS0_14error_categoryE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::system::operator==(boost::system::error_condition const&, boost::system::error_condition const&) -->
    <elf-symbol name='_ZN5boost6systemeqERKNS0_15error_conditionES3_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::detail::enable_if_interoperable<boost::filesystem::directory_iterator, boost::filesystem::directory_iterator, boost::mpl::apply2<boost::detail::always_bool2, boost::filesystem::directory_iterator, boost::filesystem::directory_iterator>::type>::type boost::operator==<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry&, long, boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry&, long>(boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry&, long> const&, boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry&, long> const&) -->
    <elf-symbol name='_ZN5boosteqINS_10filesystem18directory_iteratorENS1_15directory_entryENS_25single_pass_traversal_tagERS3_lS2_S3_S4_S5_lEENS_6detail23enable_if_interoperableIT_T4_NS_3mpl6apply2INS6_12always_bool2ES8_S9_E4typeEE4typeERKNS_15iterator_facadeIS8_T0_T1_T2_T3_EERKNSH_IS9_T5_T6_T7_T8_EE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::detail::enable_if_interoperable<boost::filesystem::path::iterator, boost::filesystem::path::iterator, boost::mpl::apply2<boost::detail::always_bool2, boost::filesystem::path::iterator, boost::filesystem::path::iterator>::type>::type boost::operator==<boost::filesystem::path::iterator, boost::filesystem::path const, boost::bidirectional_traversal_tag, boost::filesystem::path const&, long, boost::filesystem::path::iterator, boost::filesystem::path const, boost::bidirectional_traversal_tag, boost::filesystem::path const&, long>(boost::iterator_facade<boost::filesystem::path::iterator, boost::filesystem::path const, boost::bidirectional_traversal_tag, boost::filesystem::path const&, long> const&, boost::iterator_facade<boost::filesystem::path::iterator, boost::filesystem::path const, boost::bidirectional_traversal_tag, boost::filesystem::path const&, long> const&) -->
    <elf-symbol name='_ZN5boosteqINS_10filesystem4path8iteratorEKS2_NS_27bidirectional_traversal_tagERS4_lS3_S4_S5_S6_lEENS_6detail23enable_if_interoperableIT_T4_NS_3mpl6apply2INS7_12always_bool2ES9_SA_E4typeEE4typeERKNS_15iterator_facadeIS9_T0_T1_T2_T3_EERKNSI_ISA_T5_T6_T7_T8_EE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- bool boost::operator==<boost::filesystem::detail::dir_itr_imp, boost::filesystem::detail::dir_itr_imp>(boost::shared_ptr<boost::filesystem::detail::dir_itr_imp> const&, boost::shared_ptr<boost::filesystem::detail::dir_itr_imp> const&) -->
    <elf-symbol name='_ZN5boosteqINS_10filesystem6detail11dir_itr_impES3_EEbRKNS_10shared_ptrIT_EERKNS4_IT0_EE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::detail::enable_if_interoperable<boost::filesystem::directory_iterator, boost::filesystem::directory_iterator, boost::mpl::apply2<boost::detail::always_bool2, boost::filesystem::directory_iterator, boost::filesystem::directory_iterator>::type>::type boost::operator!=<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry&, long, boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry&, long>(boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry&, long> const&, boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry&, long> const&) -->
    <elf-symbol name='_ZN5boostneINS_10filesystem18directory_iteratorENS1_15directory_entryENS_25single_pass_traversal_tagERS3_lS2_S3_S4_S5_lEENS_6detail23enable_if_interoperableIT_T4_NS_3mpl6apply2INS6_12always_bool2ES8_S9_E4typeEE4typeERKNS_15iterator_facadeIS8_T0_T1_T2_T3_EERKNSH_IS9_T5_T6_T7_T8_EE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::detail::enable_if_interoperable<boost::filesystem::path::iterator, boost::filesystem::path::iterator, boost::mpl::apply2<boost::detail::always_bool2, boost::filesystem::path::iterator, boost::filesystem::path::iterator>::type>::type boost::operator!=<boost::filesystem::path::iterator, boost::filesystem::path const, boost::bidirectional_traversal_tag, boost::filesystem::path const&, long, boost::filesystem::path::iterator, boost::filesystem::path const, boost::bidirectional_traversal_tag, boost::filesystem::path const&, long>(boost::iterator_facade<boost::filesystem::path::iterator, boost::filesystem::path const, boost::bidirectional_traversal_tag, boost::filesystem::path const&, long> const&, boost::iterator_facade<boost::filesystem::path::iterator, boost::filesystem::path const, boost::bidirectional_traversal_tag, boost::filesystem::path const&, long> const&) -->
    <elf-symbol name='_ZN5boostneINS_10filesystem4path8iteratorEKS2_NS_27bidirectional_traversal_tagERS4_lS3_S4_S5_S6_lEENS_6detail23enable_if_interoperableIT_T4_NS_3mpl6apply2INS7_12always_bool2ES9_SA_E4typeEE4typeERKNS_15iterator_facadeIS9_T0_T1_T2_T3_EERKNSI_ISA_T5_T6_T7_T8_EE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- bool __gnu_cxx::__is_null_pointer<char const>(char const*) -->
    <elf-symbol name='_ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- bool __gnu_cxx::__is_null_pointer<char>(char*) -->
    <elf-symbol name='_ZN9__gnu_cxx17__is_null_pointerIcEEbPT_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- __gnu_cxx::__normal_iterator<char const*, std::string>::__normal_iterator(char const* const&) -->
    <elf-symbol name='_ZN9__gnu_cxx17__normal_iteratorIPKcSsEC2ERKS2_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- __gnu_cxx::__normal_iterator<char*, std::string>::__normal_iterator(char* const&) -->
    <elf-symbol name='_ZN9__gnu_cxx17__normal_iteratorIPcSsEC2ERKS1_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::file_status::permissions() const -->
    <elf-symbol name='_ZNK5boost10filesystem11file_status11permissionsEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::file_status::type() const -->
    <elf-symbol name='_ZNK5boost10filesystem11file_status4typeEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::directory_entry::m_get_status(boost::system::error_code*) const -->
    <elf-symbol name='_ZNK5boost10filesystem15directory_entry12m_get_statusEPNS_6system10error_codeE' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::directory_entry::m_get_symlink_status(boost::system::error_code*) const -->
    <elf-symbol name='_ZNK5boost10filesystem15directory_entry20m_get_symlink_statusEPNS_6system10error_codeE' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::directory_entry::path() const -->
    <elf-symbol name='_ZNK5boost10filesystem15directory_entry4pathEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::filesystem_error::what() const -->
    <elf-symbol name='_ZNK5boost10filesystem16filesystem_error4whatEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::directory_iterator::dereference() const -->
    <elf-symbol name='_ZNK5boost10filesystem18directory_iterator11dereferenceEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::directory_iterator::equal(boost::filesystem::directory_iterator const&) const -->
    <elf-symbol name='_ZNK5boost10filesystem18directory_iterator5equalERKS1_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::is_absolute() const -->
    <elf-symbol name='_ZNK5boost10filesystem4path11is_absoluteEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::parent_path() const -->
    <elf-symbol name='_ZNK5boost10filesystem4path11parent_pathEv' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::relative_path() const -->
    <elf-symbol name='_ZNK5boost10filesystem4path13relative_pathEv' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::root_directory() const -->
    <elf-symbol name='_ZNK5boost10filesystem4path14root_directoryEv' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::m_parent_path_end() const -->
    <elf-symbol name='_ZNK5boost10filesystem4path17m_parent_path_endEv' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::has_root_directory() const -->
    <elf-symbol name='_ZNK5boost10filesystem4path18has_root_directoryEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::end() const -->
    <elf-symbol name='_ZNK5boost10filesystem4path3endEv' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::stem() const -->
    <elf-symbol name='_ZNK5boost10filesystem4path4stemEv' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::begin() const -->
    <elf-symbol name='_ZNK5boost10filesystem4path5beginEv' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::c_str() const -->
    <elf-symbol name='_ZNK5boost10filesystem4path5c_strEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::empty() const -->
    <elf-symbol name='_ZNK5boost10filesystem4path5emptyEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::native() const -->
    <elf-symbol name='_ZNK5boost10filesystem4path6nativeEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::string() const -->
    <elf-symbol name='_ZNK5boost10filesystem4path6stringEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::compare(boost::filesystem::path const&) const -->
    <elf-symbol name='_ZNK5boost10filesystem4path7compareERKS1_' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::wstring(std::codecvt<wchar_t, char, __mbstate_t> const&) const -->
    <elf-symbol name='_ZNK5boost10filesystem4path7wstringERKSt7codecvtIwc11__mbstate_tE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::wstring() const -->
    <elf-symbol name='_ZNK5boost10filesystem4path7wstringEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::filename() const -->
    <elf-symbol name='_ZNK5boost10filesystem4path8filenameEv' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::iterator::dereference() const -->
    <elf-symbol name='_ZNK5boost10filesystem4path8iterator11dereferenceEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::iterator::equal(boost::filesystem::path::iterator const&) const -->
    <elf-symbol name='_ZNK5boost10filesystem4path8iterator5equalERKS2_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::extension() const -->
    <elf-symbol name='_ZNK5boost10filesystem4path9extensionEv' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::root_name() const -->
    <elf-symbol name='_ZNK5boost10filesystem4path9root_nameEv' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::path::root_path() const -->
    <elf-symbol name='_ZNK5boost10filesystem4path9root_pathEv' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::utf8_codecvt_facet::do_unshift(__mbstate_t&, char*, char*, char*&) const -->
    <elf-symbol name='_ZNK5boost10filesystem6detail18utf8_codecvt_facet10do_unshiftER11__mbstate_tPcS5_RS5_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::utf8_codecvt_facet::do_encoding() const -->
    <elf-symbol name='_ZNK5boost10filesystem6detail18utf8_codecvt_facet11do_encodingEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::utf8_codecvt_facet::do_max_length() const -->
    <elf-symbol name='_ZNK5boost10filesystem6detail18utf8_codecvt_facet13do_max_lengthEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::utf8_codecvt_facet::do_always_noconv() const -->
    <elf-symbol name='_ZNK5boost10filesystem6detail18utf8_codecvt_facet16do_always_noconvEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::utf8_codecvt_facet::invalid_leading_octet(unsigned char) const -->
    <elf-symbol name='_ZNK5boost10filesystem6detail18utf8_codecvt_facet21invalid_leading_octetEh' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::utf8_codecvt_facet::get_cont_octet_out_count(wchar_t) const -->
    <elf-symbol name='_ZNK5boost10filesystem6detail18utf8_codecvt_facet24get_cont_octet_out_countEw' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::utf8_codecvt_facet::invalid_continuing_octet(unsigned char) const -->
    <elf-symbol name='_ZNK5boost10filesystem6detail18utf8_codecvt_facet24invalid_continuing_octetEh' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::utf8_codecvt_facet::do_in(__mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const -->
    <elf-symbol name='_ZNK5boost10filesystem6detail18utf8_codecvt_facet5do_inER11__mbstate_tPKcS6_RS6_PwS8_RS8_' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::utf8_codecvt_facet::do_out(__mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const -->
    <elf-symbol name='_ZNK5boost10filesystem6detail18utf8_codecvt_facet6do_outER11__mbstate_tPKwS6_RS6_PcS8_RS8_' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::filesystem::detail::utf8_codecvt_facet::do_length(__mbstate_t&, char const*, char const*, unsigned long) const -->
    <elf-symbol name='_ZNK5boost10filesystem6detail18utf8_codecvt_facet9do_lengthER11__mbstate_tPKcS6_m' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>::get() const -->
    <elf-symbol name='_ZNK5boost10shared_ptrINS_10filesystem16filesystem_error5m_impEE3getEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>::operator&#45;>() const -->
    <elf-symbol name='_ZNK5boost10shared_ptrINS_10filesystem16filesystem_error5m_impEEptEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>::get() const -->
    <elf-symbol name='_ZNK5boost10shared_ptrINS_10filesystem6detail11dir_itr_impEE3getEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>::operator&#45;>() const -->
    <elf-symbol name='_ZNK5boost10shared_ptrINS_10filesystem6detail11dir_itr_impEEptEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::scoped_array<char>::get() const -->
    <elf-symbol name='_ZNK5boost12scoped_arrayIcE3getEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::scoped_array<wchar_t>::get() const -->
    <elf-symbol name='_ZNK5boost12scoped_arrayIwE3getEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry&, long>::derived() const -->
    <elf-symbol name='_ZNK5boost15iterator_facadeINS_10filesystem18directory_iteratorENS1_15directory_entryENS_25single_pass_traversal_tagERS3_lE7derivedEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry&, long>::operator*() const -->
    <elf-symbol name='_ZNK5boost15iterator_facadeINS_10filesystem18directory_iteratorENS1_15directory_entryENS_25single_pass_traversal_tagERS3_lEdeEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry&, long>::operator&#45;>() const -->
    <elf-symbol name='_ZNK5boost15iterator_facadeINS_10filesystem18directory_iteratorENS1_15directory_entryENS_25single_pass_traversal_tagERS3_lEptEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::iterator_facade<boost::filesystem::path::iterator, boost::filesystem::path const, boost::bidirectional_traversal_tag, boost::filesystem::path const&, long>::derived() const -->
    <elf-symbol name='_ZNK5boost15iterator_facadeINS_10filesystem4path8iteratorEKS2_NS_27bidirectional_traversal_tagERS4_lE7derivedEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::iterator_facade<boost::filesystem::path::iterator, boost::filesystem::path const, boost::bidirectional_traversal_tag, boost::filesystem::path const&, long>::operator*() const -->
    <elf-symbol name='_ZNK5boost15iterator_facadeINS_10filesystem4path8iteratorEKS2_NS_27bidirectional_traversal_tagERS4_lEdeEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::iterator_facade<boost::filesystem::path::iterator, boost::filesystem::path const, boost::bidirectional_traversal_tag, boost::filesystem::path const&, long>::operator&#45;>() const -->
    <elf-symbol name='_ZNK5boost15iterator_facadeINS_10filesystem4path8iteratorEKS2_NS_27bidirectional_traversal_tagERS4_lEptEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::system::error_code::value() const -->
    <elf-symbol name='_ZNK5boost6system10error_code5valueEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::system::error_code::message() const -->
    <elf-symbol name='_ZNK5boost6system10error_code7messageEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::system::error_code::category() const -->
    <elf-symbol name='_ZNK5boost6system10error_code8categoryEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::system::error_code::operator void (*)()() const -->
    <elf-symbol name='_ZNK5boost6system10error_codecvPFvvEEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::system::system_error::what() const -->
    <elf-symbol name='_ZNK5boost6system12system_error4whatEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::system::error_category::equivalent(boost::system::error_code const&, int) const -->
    <elf-symbol name='_ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::system::error_category::equivalent(int, boost::system::error_condition const&) const -->
    <elf-symbol name='_ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::system::error_category::default_error_condition(int) const -->
    <elf-symbol name='_ZNK5boost6system14error_category23default_error_conditionEi' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- boost::system::error_category::operator==(boost::system::error_category const&) const -->
    <elf-symbol name='_ZNK5boost6system14error_categoryeqERKS1_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- __gnu_cxx::__normal_iterator<char const*, std::string>::operator*() const -->
    <elf-symbol name='_ZNK9__gnu_cxx17__normal_iteratorIPKcSsEdeEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- __gnu_cxx::__normal_iterator<char const*, std::string>::operator&#45;(long) const -->
    <elf-symbol name='_ZNK9__gnu_cxx17__normal_iteratorIPKcSsEmiEl' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- __gnu_cxx::__normal_iterator<wchar_t const*, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > >::operator*() const -->
    <elf-symbol name='_ZNK9__gnu_cxx17__normal_iteratorIPKwSbIwSt11char_traitsIwESaIwEEEdeEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- __gnu_cxx::__normal_iterator<char*, std::string>::operator*() const -->
    <elf-symbol name='_ZNK9__gnu_cxx17__normal_iteratorIPcSsEdeEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- __gnu_cxx::__normal_iterator<char*, std::string>::operator&#45;(long) const -->
    <elf-symbol name='_ZNK9__gnu_cxx17__normal_iteratorIPcSsEmiEl' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::in(__mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const -->
    <elf-symbol name='_ZNKSt23__codecvt_abstract_baseIwc11__mbstate_tE2inERS0_PKcS4_RS4_PwS6_RS6_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::out(__mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const -->
    <elf-symbol name='_ZNKSt23__codecvt_abstract_baseIwc11__mbstate_tE3outERS0_PKwS4_RS4_PcS6_RS6_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >& std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append<wchar_t*>(wchar_t*, wchar_t*) -->
    <elf-symbol name='_ZNSbIwSt11char_traitsIwESaIwEE6appendIPwEERS2_T_S6_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&) -->
    <elf-symbol name='_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) -->
    <elf-symbol name='_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&) -->
    <elf-symbol name='_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) -->
    <elf-symbol name='_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- char* std::string::_S_construct_aux<char const*>(char const*, char const*, std::allocator<char> const&, std::__false_type) -->
    <elf-symbol name='_ZNSs16_S_construct_auxIPKcEEPcT_S3_RKSaIcESt12__false_type' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- char* std::string::_S_construct_aux<char*>(char*, char*, std::allocator<char> const&, std::__false_type) -->
    <elf-symbol name='_ZNSs16_S_construct_auxIPcEES0_T_S1_RKSaIcESt12__false_type' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- std::string& std::string::append<char const*>(char const*, char const*) -->
    <elf-symbol name='_ZNSs6appendIPKcEERSsT_S3_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- std::string& std::string::append<char*>(char*, char*) -->
    <elf-symbol name='_ZNSs6appendIPcEERSsT_S2_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char const*>(char const*, char const*, std::allocator<char> const&) -->
    <elf-symbol name='_ZNSsC2IPKcEET_S2_RKSaIcE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*>(char*, char*, std::allocator<char> const&) -->
    <elf-symbol name='_ZNSsC2IPcEET_S1_RKSaIcE' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- std::char_traits<char>::compare(char const*, char const*, unsigned long) -->
    <elf-symbol name='_ZNSt11char_traitsIcE7compareEPKcS2_m' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- std::numeric_limits<wchar_t>::max() -->
    <elf-symbol name='_ZNSt14numeric_limitsIwE3maxEv' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- std::iterator_traits<char const*>::difference_type std::__distance<char const*>(char const*, char const*, std::random_access_iterator_tag) -->
    <elf-symbol name='_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag) -->
    <elf-symbol name='_ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- std::iterator_traits<char const*>::iterator_category std::__iterator_category<char const*>(char const* const&) -->
    <elf-symbol name='_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&) -->
    <elf-symbol name='_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- std::remove_reference<boost::filesystem::filesystem_error::m_imp*&>::type&& std::move<boost::filesystem::filesystem_error::m_imp*&>(boost::filesystem::filesystem_error::m_imp*&) -->
    <elf-symbol name='_ZSt4moveIRPN5boost10filesystem16filesystem_error5m_impEEONSt16remove_referenceIT_E4typeEOS7_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- std::remove_reference<boost::filesystem::detail::dir_itr_imp*&>::type&& std::move<boost::filesystem::detail::dir_itr_imp*&>(boost::filesystem::detail::dir_itr_imp*&) -->
    <elf-symbol name='_ZSt4moveIRPN5boost10filesystem6detail11dir_itr_impEEONSt16remove_referenceIT_E4typeEOS7_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- void std::swap<boost::filesystem::filesystem_error::m_imp*>(boost::filesystem::filesystem_error::m_imp*&, boost::filesystem::filesystem_error::m_imp*&) -->
    <elf-symbol name='_ZSt4swapIPN5boost10filesystem16filesystem_error5m_impEEvRT_S6_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- void std::swap<boost::filesystem::detail::dir_itr_imp*>(boost::filesystem::detail::dir_itr_imp*&, boost::filesystem::detail::dir_itr_imp*&) -->
    <elf-symbol name='_ZSt4swapIPN5boost10filesystem6detail11dir_itr_impEEvRT_S6_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*) -->
    <elf-symbol name='_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*) -->
    <elf-symbol name='_ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- _ZSteqIcEN9__gnu_cxx11__enable_ifIXsr9__is_charIT_EE7__valueEbE6__typeERKSbIS2_St11char_traitsIS2_ESaIS2_EESA_ -->
    <elf-symbol name='_ZSteqIcEN9__gnu_cxx11__enable_ifIXsr9__is_charIT_EE7__valueEbE6__typeERKSbIS2_St11char_traitsIS2_ESaIS2_EESA_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- bool std::operator==<char>(std::allocator<char> const&, std::allocator<char> const&) -->
    <elf-symbol name='_ZSteqIcEbRKSaIT_ES3_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) -->
    <elf-symbol name='_ZSteqIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_EPKS3_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) -->
    <elf-symbol name='_ZStltIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_ES8_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) -->
    <elf-symbol name='_ZStneIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_EPKS3_' type='func-type' binding='weak-binding' is-defined='yes'/>
    <!-- _fini -->
    <elf-symbol name='_fini' type='func-type' binding='global-binding' is-defined='yes'/>
    <!-- _init -->
    <elf-symbol name='_init' type='func-type' binding='global-binding' is-defined='yes'/>
  </elf-function-symbols>
  <elf-variable-symbols>
    <!-- typeinfo for boost::filesystem::filesystem_error -->
    <elf-symbol name='_ZTIN5boost10filesystem16filesystem_errorE' size='24' type='object-type' binding='weak-binding' is-defined='yes'/>
    <!-- typeinfo for boost::filesystem::detail::utf8_codecvt_facet -->
    <elf-symbol name='_ZTIN5boost10filesystem6detail18utf8_codecvt_facetE' size='24' type='object-type' binding='global-binding' is-defined='yes'/>
    <!-- typeinfo for boost::noncopyable_::noncopyable -->
    <elf-symbol name='_ZTIN5boost12noncopyable_11noncopyableE' size='16' type='object-type' binding='weak-binding' is-defined='yes'/>
    <!-- typeinfo for boost::detail::sp_counted_base -->
    <elf-symbol name='_ZTIN5boost6detail15sp_counted_baseE' size='16' type='object-type' binding='weak-binding' is-defined='yes'/>
    <!-- typeinfo for boost::detail::sp_counted_impl_p<boost::filesystem::filesystem_error::m_imp> -->
    <elf-symbol name='_ZTIN5boost6detail17sp_counted_impl_pINS_10filesystem16filesystem_error5m_impEEE' size='24' type='object-type' binding='weak-binding' is-defined='yes'/>
    <!-- typeinfo for boost::detail::sp_counted_impl_p<boost::filesystem::detail::dir_itr_imp> -->
    <elf-symbol name='_ZTIN5boost6detail17sp_counted_impl_pINS_10filesystem6detail11dir_itr_impEEE' size='24' type='object-type' binding='weak-binding' is-defined='yes'/>
    <!-- typeinfo for boost::system::system_error -->
    <elf-symbol name='_ZTIN5boost6system12system_errorE' size='24' type='object-type' binding='weak-binding' is-defined='yes'/>
    <!-- typeinfo for boost::system::error_category -->
    <elf-symbol name='_ZTIN5boost6system14error_categoryE' size='24' type='object-type' binding='weak-binding' is-defined='yes'/>
    <!-- typeinfo name for boost::filesystem::filesystem_error -->
    <elf-symbol name='_ZTSN5boost10filesystem16filesystem_errorE' size='39' type='object-type' binding='weak-binding' is-defined='yes'/>
    <!-- typeinfo name for boost::filesystem::detail::utf8_codecvt_facet -->
    <elf-symbol name='_ZTSN5boost10filesystem6detail18utf8_codecvt_facetE' size='48' type='object-type' binding='global-binding' is-defined='yes'/>
    <!-- typeinfo name for boost::noncopyable_::noncopyable -->
    <elf-symbol name='_ZTSN5boost12noncopyable_11noncopyableE' size='36' type='object-type' binding='weak-binding' is-defined='yes'/>
    <!-- typeinfo name for boost::detail::sp_counted_base -->
    <elf-symbol name='_ZTSN5boost6detail15sp_counted_baseE' size='33' type='object-type' binding='weak-binding' is-defined='yes'/>
    <!-- typeinfo name for boost::detail::sp_counted_impl_p<boost::filesystem::filesystem_error::m_imp> -->
    <elf-symbol name='_ZTSN5boost6detail17sp_counted_impl_pINS_10filesystem16filesystem_error5m_impEEE' size='77' type='object-type' binding='weak-binding' is-defined='yes'/>
    <!-- typeinfo name for boost::detail::sp_counted_impl_p<boost::filesystem::detail::dir_itr_imp> -->
    <elf-symbol name='_ZTSN5boost6detail17sp_counted_impl_pINS_10filesystem6detail11dir_itr_impEEE' size='73' type='object-type' binding='weak-binding' is-defined='yes'/>
    <!-- typeinfo name for boost::system::system_error -->
    <elf-symbol name='_ZTSN5boost6system12system_errorE' size='30' type='object-type' binding='weak-binding' is-defined='yes'/>
    <!-- typeinfo name for boost::system::error_category -->
    <elf-symbol name='_ZTSN5boost6system14error_categoryE' size='32' type='object-type' binding='weak-binding' is-defined='yes'/>
    <!-- vtable for boost::filesystem::filesystem_error -->
    <elf-symbol name='_ZTVN5boost10filesystem16filesystem_errorE' size='40' type='object-type' binding='weak-binding' is-defined='yes'/>
    <!-- vtable for boost::filesystem::detail::utf8_codecvt_facet -->
    <elf-symbol name='_ZTVN5boost10filesystem6detail18utf8_codecvt_facetE' size='88' type='object-type' binding='global-binding' is-defined='yes'/>
    <!-- vtable for boost::detail::sp_counted_base -->
    <elf-symbol name='_ZTVN5boost6detail15sp_counted_baseE' size='64' type='object-type' binding='weak-binding' is-defined='yes'/>
    <!-- vtable for boost::detail::sp_counted_impl_p<boost::filesystem::filesystem_error::m_imp> -->
    <elf-symbol name='_ZTVN5boost6detail17sp_counted_impl_pINS_10filesystem16filesystem_error5m_impEEE' size='64' type='object-type' binding='weak-binding' is-defined='yes'/>
    <!-- vtable for boost::detail::sp_counted_impl_p<boost::filesystem::detail::dir_itr_imp> -->
    <elf-symbol name='_ZTVN5boost6detail17sp_counted_impl_pINS_10filesystem6detail11dir_itr_impEEE' size='64' type='object-type' binding='weak-binding' is-defined='yes'/>
    <!-- vtable for boost::system::system_error -->
    <elf-symbol name='_ZTVN5boost6system12system_errorE' size='40' type='object-type' binding='weak-binding' is-defined='yes'/>
    <!-- vtable for boost::system::error_category -->
    <elf-symbol name='_ZTVN5boost6system14error_categoryE' size='72' type='object-type' binding='weak-binding' is-defined='yes'/>
  </elf-variable-symbols>
  <abi-instr version='1.0' address-size='64' path='src/third_party/boost-1.56.0/libs/filesystem/src/codecvt_error_category.cpp' language='LANG_C_plus_plus'>
    <!-- namespace boost -->
    <namespace-decl name='boost'>
      <!-- namespace boost::filesystem -->
      <namespace-decl name='filesystem'>
        <!-- const boost::system::error_category& boost::filesystem::codecvt_error_category() -->
        <function-decl name='codecvt_error_category' mangled-name='_ZN5boost10filesystem22codecvt_error_categoryEv' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/codecvt_error_category.cpp' line='77' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem22codecvt_error_categoryEv'>
          <!-- const boost::system::error_category& -->
          <return type-id='type-id-1'/>
        </function-decl>
      </namespace-decl>
      <!-- namespace boost::system -->
      <namespace-decl name='system'>
        <!-- class boost::system::error_condition -->
        <class-decl name='error_condition' size-in-bits='128' visibility='default' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='230' column='1' id='type-id-2'>
          <member-type access='private'>
            <!-- typedef void ()* boost::system::error_condition::unspecified_bool_type -->
            <typedef-decl name='unspecified_bool_type' type-id='type-id-4' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='272' column='1' id='type-id-3'/>
          </member-type>
          <data-member access='private' layout-offset-in-bits='0'>
            <!-- int boost::system::error_condition::m_val -->
            <var-decl name='m_val' type-id='type-id-5' visibility='default' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='304' column='1'/>
          </data-member>
          <data-member access='private' layout-offset-in-bits='64'>
            <!-- const boost::system::error_category* boost::system::error_condition::m_cat -->
            <var-decl name='m_cat' type-id='type-id-6' visibility='default' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='305' column='1'/>
          </data-member>
          <member-function access='public' constructor='yes'>
            <!-- boost::system::error_condition::error_condition() -->
            <function-decl name='error_condition' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='235' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::system::error_condition*' -->
              <parameter type-id='type-id-7' is-artificial='yes'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public' constructor='yes'>
            <!-- boost::system::error_condition::error_condition(int, const boost::system::error_category&) -->
            <function-decl name='error_condition' mangled-name='_ZN5boost6system15error_conditionC2EiRKNS0_14error_categoryE' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='236' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost6system15error_conditionC2EiRKNS0_14error_categoryE'>
              <!-- implicit parameter of type 'boost::system::error_condition*' -->
              <parameter type-id='type-id-7' is-artificial='yes'/>
              <!-- parameter of type 'int' -->
              <parameter type-id='type-id-5'/>
              <!-- parameter of type 'const boost::system::error_category&' -->
              <parameter type-id='type-id-1'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- void boost::system::error_condition::assign(int, const boost::system::error_category&) -->
            <function-decl name='assign' mangled-name='_ZN5boost6system15error_condition6assignEiRKNS0_14error_categoryE' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='247' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::system::error_condition*' -->
              <parameter type-id='type-id-7' is-artificial='yes'/>
              <!-- parameter of type 'int' -->
              <parameter type-id='type-id-5'/>
              <!-- parameter of type 'const boost::system::error_category&' -->
              <parameter type-id='type-id-1'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- void boost::system::error_condition::clear() -->
            <function-decl name='clear' mangled-name='_ZN5boost6system15error_condition5clearEv' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='261' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::system::error_condition*' -->
              <parameter type-id='type-id-7' is-artificial='yes'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- int boost::system::error_condition::value() -->
            <function-decl name='value' mangled-name='_ZNK5boost6system15error_condition5valueEv' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='268' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::system::error_condition*' -->
              <parameter type-id='type-id-9' is-artificial='yes'/>
              <!-- int -->
              <return type-id='type-id-5'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- const boost::system::error_category& boost::system::error_condition::category() -->
            <function-decl name='category' mangled-name='_ZNK5boost6system15error_condition8categoryEv' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='269' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::system::error_condition*' -->
              <parameter type-id='type-id-9' is-artificial='yes'/>
              <!-- const boost::system::error_category& -->
              <return type-id='type-id-1'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- std::string boost::system::error_condition::message() -->
            <function-decl name='message' mangled-name='_ZNK5boost6system15error_condition7messageEv' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='270' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::system::error_condition*' -->
              <parameter type-id='type-id-9' is-artificial='yes'/>
              <!-- typedef std::string -->
              <return type-id='type-id-10'/>
            </function-decl>
          </member-function>
          <member-function access='public' static='yes'>
            <!-- void boost::system::error_condition::unspecified_bool_true() -->
            <function-decl name='unspecified_bool_true' mangled-name='_ZN5boost6system15error_condition21unspecified_bool_trueEv' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='273' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::system::error_condition::unspecified_bool_type boost::system::error_condition::operator void (*)()() -->
            <function-decl name='operator void (*)()' mangled-name='_ZNK5boost6system15error_conditioncvPFvvEEv' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='275' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::system::error_condition*' -->
              <parameter type-id='type-id-9' is-artificial='yes'/>
              <!-- typedef boost::system::error_condition::unspecified_bool_type -->
              <return type-id='type-id-3'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- bool boost::system::error_condition::operator!() -->
            <function-decl name='operator!' mangled-name='_ZNK5boost6system15error_conditionntEv' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='280' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::system::error_condition*' -->
              <parameter type-id='type-id-9' is-artificial='yes'/>
              <!-- bool -->
              <return type-id='type-id-11'/>
            </function-decl>
          </member-function>
        </class-decl>
        <!-- class boost::system::error_category -->
        <class-decl name='error_category' size-in-bits='64' visibility='default' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='185' column='1' id='type-id-12'>
        <!-- class boost::noncopyable_::noncopyable -->
          <base-class access='public' layout-offset-in-bits='0' type-id='type-id-13'/>
          <member-function access='public'>
            <!-- bool boost::system::error_category::operator==(const boost::system::error_category&) -->
            <function-decl name='operator==' mangled-name='_ZNK5boost6system14error_categoryeqERKS1_' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='198' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost6system14error_categoryeqERKS1_'>
              <!-- implicit parameter of type 'const boost::system::error_category*' -->
              <parameter type-id='type-id-6' is-artificial='yes'/>
              <!-- parameter of type 'const boost::system::error_category&' -->
              <parameter type-id='type-id-1'/>
              <!-- bool -->
              <return type-id='type-id-11'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- bool boost::system::error_category::operator!=(const boost::system::error_category&) -->
            <function-decl name='operator!=' mangled-name='_ZNK5boost6system14error_categoryneERKS1_' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='199' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::system::error_category*' -->
              <parameter type-id='type-id-6' is-artificial='yes'/>
              <!-- parameter of type 'const boost::system::error_category&' -->
              <parameter type-id='type-id-1'/>
              <!-- bool -->
              <return type-id='type-id-11'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- bool boost::system::error_category::operator<(const boost::system::error_category&) -->
            <function-decl name='operator&lt;' mangled-name='_ZNK5boost6system14error_categoryltERKS1_' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='200' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::system::error_category*' -->
              <parameter type-id='type-id-6' is-artificial='yes'/>
              <!-- parameter of type 'const boost::system::error_category&' -->
              <parameter type-id='type-id-1'/>
              <!-- bool -->
              <return type-id='type-id-11'/>
            </function-decl>
          </member-function>
          <member-function access='public' destructor='yes' vtable-offset='0'>
            <!-- boost::system::error_category::~error_category() -->
            <function-decl name='~error_category' mangled-name='_ZN5boost6system14error_categoryD0Ev' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='188' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost6system14error_categoryD2Ev'>
              <!-- implicit parameter of type 'boost::system::error_category*' -->
              <parameter type-id='type-id-14' is-artificial='yes'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public' vtable-offset='2'>
            <!-- const char* boost::system::error_category::name() -->
            <function-decl name='name' mangled-name='_ZNK5boost6system14error_category4nameEv' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='190' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::system::error_category*' -->
              <parameter type-id='type-id-6' is-artificial='yes'/>
              <!-- const char* -->
              <return type-id='type-id-15'/>
            </function-decl>
          </member-function>
          <member-function access='public' vtable-offset='3'>
            <!-- std::string boost::system::error_category::message(int) -->
            <function-decl name='message' mangled-name='_ZNK5boost6system14error_category7messageEi' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='191' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::system::error_category*' -->
              <parameter type-id='type-id-6' is-artificial='yes'/>
              <!-- parameter of type 'int' -->
              <parameter type-id='type-id-5'/>
              <!-- typedef std::string -->
              <return type-id='type-id-10'/>
            </function-decl>
          </member-function>
          <member-function access='public' vtable-offset='4'>
            <!-- boost::system::error_condition boost::system::error_category::default_error_condition(int) -->
            <function-decl name='default_error_condition' mangled-name='_ZNK5boost6system14error_category23default_error_conditionEi' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='192' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost6system14error_category23default_error_conditionEi'>
              <!-- implicit parameter of type 'const boost::system::error_category*' -->
              <parameter type-id='type-id-6' is-artificial='yes'/>
              <!-- parameter of type 'int' -->
              <parameter type-id='type-id-5'/>
              <!-- class boost::system::error_condition -->
              <return type-id='type-id-2'/>
            </function-decl>
          </member-function>
          <member-function access='public' vtable-offset='5'>
            <!-- bool boost::system::error_category::equivalent(int, const boost::system::error_condition&) -->
            <function-decl name='equivalent' mangled-name='_ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='193' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE'>
              <!-- implicit parameter of type 'const boost::system::error_category*' -->
              <parameter type-id='type-id-6' is-artificial='yes'/>
              <!-- parameter of type 'int' -->
              <parameter type-id='type-id-5'/>
              <!-- parameter of type 'const boost::system::error_condition&' -->
              <parameter type-id='type-id-16'/>
              <!-- bool -->
              <return type-id='type-id-11'/>
            </function-decl>
          </member-function>
          <member-function access='public' vtable-offset='6'>
            <!-- bool boost::system::error_category::equivalent(const boost::system::error_code&, int) -->
            <function-decl name='equivalent' mangled-name='_ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='195' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi'>
              <!-- implicit parameter of type 'const boost::system::error_category*' -->
              <parameter type-id='type-id-6' is-artificial='yes'/>
              <!-- parameter of type 'const boost::system::error_code&' -->
              <parameter type-id='type-id-17'/>
              <!-- parameter of type 'int' -->
              <parameter type-id='type-id-5'/>
              <!-- bool -->
              <return type-id='type-id-11'/>
            </function-decl>
          </member-function>
        </class-decl>
        <!-- class boost::system::error_code -->
        <class-decl name='error_code' size-in-bits='128' visibility='default' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='317' column='1' id='type-id-18'>
          <member-type access='private'>
            <!-- typedef void ()* boost::system::error_code::unspecified_bool_type -->
            <typedef-decl name='unspecified_bool_type' type-id='type-id-4' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='359' column='1' id='type-id-19'/>
          </member-type>
          <data-member access='private' layout-offset-in-bits='0'>
            <!-- int boost::system::error_code::m_val -->
            <var-decl name='m_val' type-id='type-id-5' visibility='default' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='391' column='1'/>
          </data-member>
          <data-member access='private' layout-offset-in-bits='64'>
            <!-- const boost::system::error_category* boost::system::error_code::m_cat -->
            <var-decl name='m_cat' type-id='type-id-6' visibility='default' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='392' column='1'/>
          </data-member>
          <member-function access='public' constructor='yes'>
            <!-- boost::system::error_code::error_code() -->
            <function-decl name='error_code' mangled-name='_ZN5boost6system10error_codeC2Ev' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='322' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost6system10error_codeC2Ev'>
              <!-- implicit parameter of type 'boost::system::error_code*' -->
              <parameter type-id='type-id-20' is-artificial='yes'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public' constructor='yes'>
            <!-- boost::system::error_code::error_code(int, const boost::system::error_category&) -->
            <function-decl name='error_code' mangled-name='_ZN5boost6system10error_codeC2EiRKNS0_14error_categoryE' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='323' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost6system10error_codeC2EiRKNS0_14error_categoryE'>
              <!-- implicit parameter of type 'boost::system::error_code*' -->
              <parameter type-id='type-id-20' is-artificial='yes'/>
              <!-- parameter of type 'int' -->
              <parameter type-id='type-id-5'/>
              <!-- parameter of type 'const boost::system::error_category&' -->
              <parameter type-id='type-id-1'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- void boost::system::error_code::assign(int, const boost::system::error_category&) -->
            <function-decl name='assign' mangled-name='_ZN5boost6system10error_code6assignEiRKNS0_14error_categoryE' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='333' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost6system10error_code6assignEiRKNS0_14error_categoryE'>
              <!-- implicit parameter of type 'boost::system::error_code*' -->
              <parameter type-id='type-id-20' is-artificial='yes'/>
              <!-- parameter of type 'int' -->
              <parameter type-id='type-id-5'/>
              <!-- parameter of type 'const boost::system::error_category&' -->
              <parameter type-id='type-id-1'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- void boost::system::error_code::clear() -->
            <function-decl name='clear' mangled-name='_ZN5boost6system10error_code5clearEv' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='347' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost6system10error_code5clearEv'>
              <!-- implicit parameter of type 'boost::system::error_code*' -->
              <parameter type-id='type-id-20' is-artificial='yes'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- int boost::system::error_code::value() -->
            <function-decl name='value' mangled-name='_ZNK5boost6system10error_code5valueEv' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='354' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost6system10error_code5valueEv'>
              <!-- implicit parameter of type 'const boost::system::error_code*' -->
              <parameter type-id='type-id-21' is-artificial='yes'/>
              <!-- int -->
              <return type-id='type-id-5'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- const boost::system::error_category& boost::system::error_code::category() -->
            <function-decl name='category' mangled-name='_ZNK5boost6system10error_code8categoryEv' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='355' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost6system10error_code8categoryEv'>
              <!-- implicit parameter of type 'const boost::system::error_code*' -->
              <parameter type-id='type-id-21' is-artificial='yes'/>
              <!-- const boost::system::error_category& -->
              <return type-id='type-id-1'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::system::error_condition boost::system::error_code::default_error_condition() -->
            <function-decl name='default_error_condition' mangled-name='_ZNK5boost6system10error_code23default_error_conditionEv' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='356' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::system::error_code*' -->
              <parameter type-id='type-id-21' is-artificial='yes'/>
              <!-- class boost::system::error_condition -->
              <return type-id='type-id-2'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- std::string boost::system::error_code::message() -->
            <function-decl name='message' mangled-name='_ZNK5boost6system10error_code7messageEv' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='357' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost6system10error_code7messageEv'>
              <!-- implicit parameter of type 'const boost::system::error_code*' -->
              <parameter type-id='type-id-21' is-artificial='yes'/>
              <!-- typedef std::string -->
              <return type-id='type-id-10'/>
            </function-decl>
          </member-function>
          <member-function access='public' static='yes'>
            <!-- void boost::system::error_code::unspecified_bool_true() -->
            <function-decl name='unspecified_bool_true' mangled-name='_ZN5boost6system10error_code21unspecified_bool_trueEv' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='360' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost6system10error_code21unspecified_bool_trueEv'>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::system::error_code::unspecified_bool_type boost::system::error_code::operator void (*)()() -->
            <function-decl name='operator void (*)()' mangled-name='_ZNK5boost6system10error_codecvPFvvEEv' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='362' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost6system10error_codecvPFvvEEv'>
              <!-- implicit parameter of type 'const boost::system::error_code*' -->
              <parameter type-id='type-id-21' is-artificial='yes'/>
              <!-- typedef boost::system::error_code::unspecified_bool_type -->
              <return type-id='type-id-19'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- bool boost::system::error_code::operator!() -->
            <function-decl name='operator!' mangled-name='_ZNK5boost6system10error_codentEv' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='367' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::system::error_code*' -->
              <parameter type-id='type-id-21' is-artificial='yes'/>
              <!-- bool -->
              <return type-id='type-id-11'/>
            </function-decl>
          </member-function>
        </class-decl>
        <!-- bool boost::system::operator==(const boost::system::error_condition&, const boost::system::error_condition&) -->
        <function-decl name='operator==' mangled-name='_ZN5boost6systemeqERKNS0_15error_conditionES3_' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='288' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost6systemeqERKNS0_15error_conditionES3_'>
          <!-- parameter of type 'const boost::system::error_condition&' -->
          <parameter type-id='type-id-16' name='lhs' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='288' column='1'/>
          <!-- parameter of type 'const boost::system::error_condition&' -->
          <parameter type-id='type-id-16' name='rhs' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='289' column='1'/>
          <!-- bool -->
          <return type-id='type-id-11'/>
        </function-decl>
      </namespace-decl>
      <!-- namespace boost::noncopyable_ -->
      <namespace-decl name='noncopyable_'>
        <!-- class boost::noncopyable_::noncopyable -->
        <class-decl name='noncopyable' size-in-bits='8' visibility='default' filepath='src/third_party/boost-1.56.0/boost/core/noncopyable.hpp' line='23' column='1' id='type-id-13'>
          <member-function access='protected' constructor='yes'>
            <!-- boost::noncopyable_::noncopyable::noncopyable() -->
            <function-decl name='noncopyable' filepath='src/third_party/boost-1.56.0/boost/core/noncopyable.hpp' line='27' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::noncopyable_::noncopyable*' -->
              <parameter type-id='type-id-22' is-artificial='yes'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='protected' destructor='yes'>
            <!-- boost::noncopyable_::noncopyable::~noncopyable() -->
            <function-decl name='~noncopyable' filepath='src/third_party/boost-1.56.0/boost/core/noncopyable.hpp' line='28' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::noncopyable_::noncopyable*' -->
              <parameter type-id='type-id-22' is-artificial='yes'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='protected' constructor='yes'>
            <!-- boost::noncopyable_::noncopyable::noncopyable(const boost::noncopyable_::noncopyable&) -->
            <function-decl name='noncopyable' filepath='src/third_party/boost-1.56.0/boost/core/noncopyable.hpp' line='34' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::noncopyable_::noncopyable*' -->
              <parameter type-id='type-id-22' is-artificial='yes'/>
              <!-- parameter of type 'const boost::noncopyable_::noncopyable&' -->
              <parameter type-id='type-id-23'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='protected'>
            <!-- boost::noncopyable_::noncopyable& boost::noncopyable_::noncopyable::operator=(const boost::noncopyable_::noncopyable&) -->
            <function-decl name='operator=' mangled-name='_ZN5boost12noncopyable_11noncopyableaSERKS1_' filepath='src/third_party/boost-1.56.0/boost/core/noncopyable.hpp' line='35' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::noncopyable_::noncopyable*' -->
              <parameter type-id='type-id-22' is-artificial='yes'/>
              <!-- parameter of type 'const boost::noncopyable_::noncopyable&' -->
              <parameter type-id='type-id-23'/>
              <!-- boost::noncopyable_::noncopyable& -->
              <return type-id='type-id-24'/>
            </function-decl>
          </member-function>
        </class-decl>
      </namespace-decl>
      <!-- typedef boost::noncopyable_::noncopyable boost::noncopyable -->
      <typedef-decl name='noncopyable' type-id='type-id-13' filepath='src/third_party/boost-1.56.0/boost/core/noncopyable.hpp' line='44' column='1' id='type-id-25'/>

    </namespace-decl>
    <!-- bool -->
    <type-decl name='bool' size-in-bits='8' id='type-id-11'/>
    <!-- int -->
    <type-decl name='int' size-in-bits='32' id='type-id-5'/>
    <!-- void -->
    <type-decl name='void' id='type-id-8'/>
    <!-- boost::noncopyable_::noncopyable* -->
    <pointer-type-def type-id='type-id-13' size-in-bits='64' id='type-id-22'/>
    <!-- const boost::noncopyable_::noncopyable -->
    <qualified-type-def type-id='type-id-13' const='yes' id='type-id-26'/>
    <!-- const boost::noncopyable_::noncopyable& -->
    <reference-type-def kind='lvalue' type-id='type-id-26' size-in-bits='64' id='type-id-23'/>
    <!-- boost::noncopyable_::noncopyable& -->
    <reference-type-def kind='lvalue' type-id='type-id-13' size-in-bits='64' id='type-id-24'/>
    <!-- boost::system::error_category* -->
    <pointer-type-def type-id='type-id-12' size-in-bits='64' id='type-id-14'/>
    <!-- char -->
    <type-decl name='char' size-in-bits='8' id='type-id-27'/>
    <!-- const char -->
    <qualified-type-def type-id='type-id-27' const='yes' id='type-id-28'/>
    <!-- const char* -->
    <pointer-type-def type-id='type-id-28' size-in-bits='64' id='type-id-15'/>
    <!-- const boost::system::error_category -->
    <qualified-type-def type-id='type-id-12' const='yes' id='type-id-29'/>
    <!-- const boost::system::error_category* -->
    <pointer-type-def type-id='type-id-29' size-in-bits='64' id='type-id-6'/>
    <!-- namespace std -->
    <namespace-decl name='std'>


      <!-- class std::basic_string<char, std::char_traits<char>, std::allocator<char> > -->
      <class-decl name='basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;' visibility='default' is-declaration-only='yes' id='type-id-30'>
        <member-type access='private'>
          <!-- typedef std::allocator<char>::size_type std::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type -->
          <typedef-decl name='size_type' type-id='type-id-32' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='121' column='1' id='type-id-31'/>
        </member-type>
        <member-type access='private'>
          <!-- struct std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep -->
          <class-decl name='_Rep' size-in-bits='192' is-struct='yes' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='155' column='1' id='type-id-33'>
          <!-- struct std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep_base -->
            <base-class access='public' layout-offset-in-bits='0' type-id='type-id-34'/>
            <data-member access='public' static='yes'>
              <!-- static const std::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep::_S_max_size -->
              <var-decl name='_S_max_size' type-id='type-id-35' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='173' column='1'/>
            </data-member>
            <data-member access='public' static='yes'>
              <!-- static const char std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep::_S_terminal -->
              <var-decl name='_S_terminal' type-id='type-id-28' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='174' column='1'/>
            </data-member>
            <data-member access='public' static='yes'>
              <!-- static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep::_S_empty_rep_storage[] -->
              <var-decl name='_S_empty_rep_storage' type-id='type-id-36' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='178' column='1'/>
            </data-member>
            <member-function access='public' static='yes'>
              <!-- std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep& std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep::_S_empty_rep() -->
              <function-decl name='_S_empty_rep' mangled-name='_ZNSs4_Rep12_S_empty_repEv' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='181' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep& -->
                <return type-id='type-id-37'/>
              </function-decl>
            </member-function>
            <member-function access='public'>
              <!-- bool std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep::_M_is_leaked() -->
              <function-decl name='_M_is_leaked' mangled-name='_ZNKSs4_Rep12_M_is_leakedEv' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='191' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'const std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep*' -->
                <parameter type-id='type-id-38' is-artificial='yes'/>
                <!-- bool -->
                <return type-id='type-id-11'/>
              </function-decl>
            </member-function>
            <member-function access='public'>
              <!-- bool std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep::_M_is_shared() -->
              <function-decl name='_M_is_shared' mangled-name='_ZNKSs4_Rep12_M_is_sharedEv' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='195' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'const std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep*' -->
                <parameter type-id='type-id-38' is-artificial='yes'/>
                <!-- bool -->
                <return type-id='type-id-11'/>
              </function-decl>
            </member-function>
            <member-function access='public'>
              <!-- void std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep::_M_set_leaked() -->
              <function-decl name='_M_set_leaked' mangled-name='_ZNSs4_Rep13_M_set_leakedEv' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='199' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep*' -->
                <parameter type-id='type-id-39' is-artificial='yes'/>
                <!-- void -->
                <return type-id='type-id-8'/>
              </function-decl>
            </member-function>
            <member-function access='public'>
              <!-- void std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep::_M_set_sharable() -->
              <function-decl name='_M_set_sharable' mangled-name='_ZNSs4_Rep15_M_set_sharableEv' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='203' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep*' -->
                <parameter type-id='type-id-39' is-artificial='yes'/>
                <!-- void -->
                <return type-id='type-id-8'/>
              </function-decl>
            </member-function>
            <member-function access='public'>
              <!-- void std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep::_M_set_length_and_sharable(std::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type) -->
              <function-decl name='_M_set_length_and_sharable' mangled-name='_ZNSs4_Rep26_M_set_length_and_sharableEm' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='207' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep*' -->
                <parameter type-id='type-id-39' is-artificial='yes'/>
                <!-- parameter of type 'typedef std::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type' -->
                <parameter type-id='type-id-31'/>
                <!-- void -->
                <return type-id='type-id-8'/>
              </function-decl>
            </member-function>
            <member-function access='public'>
              <!-- char* std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep::_M_refdata() -->
              <function-decl name='_M_refdata' mangled-name='_ZNSs4_Rep10_M_refdataEv' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='222' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep*' -->
                <parameter type-id='type-id-39' is-artificial='yes'/>
                <!-- char* -->
                <return type-id='type-id-40'/>
              </function-decl>
            </member-function>
            <member-function access='public'>
              <!-- char* std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep::_M_grab(const std::allocator<char>&, const std::allocator<char>&) -->
              <function-decl name='_M_grab' mangled-name='_ZNSs4_Rep7_M_grabERKSaIcES2_' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='226' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep*' -->
                <parameter type-id='type-id-39' is-artificial='yes'/>
                <!-- parameter of type 'const std::allocator<char>&' -->
                <parameter type-id='type-id-41'/>
                <!-- parameter of type 'const std::allocator<char>&' -->
                <parameter type-id='type-id-41'/>
                <!-- char* -->
                <return type-id='type-id-40'/>
              </function-decl>
            </member-function>
            <member-function access='public' static='yes'>
              <!-- std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep* std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep::_S_create(std::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type, const std::allocator<char>&) -->
              <function-decl name='_S_create' mangled-name='_ZNSs4_Rep9_S_createEmmRKSaIcE' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='234' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- parameter of type 'typedef std::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type' -->
                <parameter type-id='type-id-31'/>
                <!-- parameter of type 'typedef std::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type' -->
                <parameter type-id='type-id-31'/>
                <!-- parameter of type 'const std::allocator<char>&' -->
                <parameter type-id='type-id-41'/>
                <!-- std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep* -->
                <return type-id='type-id-39'/>
              </function-decl>
            </member-function>
            <member-function access='public'>
              <!-- void std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep::_M_dispose(const std::allocator<char>&) -->
              <function-decl name='_M_dispose' mangled-name='_ZNSs4_Rep10_M_disposeERKSaIcE' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='237' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep*' -->
                <parameter type-id='type-id-39' is-artificial='yes'/>
                <!-- parameter of type 'const std::allocator<char>&' -->
                <parameter type-id='type-id-41'/>
                <!-- void -->
                <return type-id='type-id-8'/>
              </function-decl>
            </member-function>
            <member-function access='public'>
              <!-- void std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep::_M_destroy(const std::allocator<char>&) -->
              <function-decl name='_M_destroy' mangled-name='_ZNSs4_Rep10_M_destroyERKSaIcE' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='255' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep*' -->
                <parameter type-id='type-id-39' is-artificial='yes'/>
                <!-- parameter of type 'const std::allocator<char>&' -->
                <parameter type-id='type-id-41'/>
                <!-- void -->
                <return type-id='type-id-8'/>
              </function-decl>
            </member-function>
            <member-function access='public'>
              <!-- char* std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep::_M_refcopy() -->
              <function-decl name='_M_refcopy' mangled-name='_ZNSs4_Rep10_M_refcopyEv' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='258' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep*' -->
                <parameter type-id='type-id-39' is-artificial='yes'/>
                <!-- char* -->
                <return type-id='type-id-40'/>
              </function-decl>
            </member-function>
            <member-function access='public'>
              <!-- char* std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep::_M_clone(const std::allocator<char>&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type) -->
              <function-decl name='_M_clone' mangled-name='_ZNSs4_Rep8_M_cloneERKSaIcEm' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='268' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep*' -->
                <parameter type-id='type-id-39' is-artificial='yes'/>
                <!-- parameter of type 'const std::allocator<char>&' -->
                <parameter type-id='type-id-41'/>
                <!-- parameter of type 'typedef std::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type' -->
                <parameter type-id='type-id-31'/>
                <!-- char* -->
                <return type-id='type-id-40'/>
              </function-decl>
            </member-function>
          </class-decl>
        </member-type>
        <member-type access='private'>
          <!-- struct std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep_base -->
          <class-decl name='_Rep_base' size-in-bits='192' is-struct='yes' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='148' column='1' id='type-id-34'>
            <data-member access='public' layout-offset-in-bits='0'>
              <!-- std::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep_base::_M_length -->
              <var-decl name='_M_length' type-id='type-id-31' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='150' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='64'>
              <!-- std::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep_base::_M_capacity -->
              <var-decl name='_M_capacity' type-id='type-id-31' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='151' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='128'>
              <!-- _Atomic_word std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep_base::_M_refcount -->
              <var-decl name='_M_refcount' type-id='type-id-42' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='152' column='1'/>
            </data-member>
          </class-decl>
        </member-type>
        <member-function access='public'>
          <!-- void std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char *>(char*, char*, const std::allocator<char>&) -->
          <function-decl name='basic_string&lt;char *&gt;' mangled-name='_ZNSsC2IPcEET_S1_RKSaIcE' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='540' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNSsC2IPcEET_S1_RKSaIcE'>
            <!-- implicit parameter of type 'std::basic_string<char, std::char_traits<char>, std::allocator<char> >*' -->
            <parameter type-id='type-id-43' is-artificial='yes'/>
            <!-- parameter of type 'char*' -->
            <parameter type-id='type-id-40'/>
            <!-- parameter of type 'char*' -->
            <parameter type-id='type-id-40'/>
            <!-- parameter of type 'const std::allocator<char>&' -->
            <parameter type-id='type-id-41'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- std::basic_string<char, std::char_traits<char>, std::allocator<char> >& std::basic_string<char, std::char_traits<char>, std::allocator<char> >::append<const char *>(const char*, const char*) -->
          <function-decl name='append&lt;const char *&gt;' mangled-name='_ZNSs6appendIPKcEERSsT_S3_' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='1061' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNSs6appendIPKcEERSsT_S3_'>
            <!-- implicit parameter of type 'std::basic_string<char, std::char_traits<char>, std::allocator<char> >*' -->
            <parameter type-id='type-id-43' is-artificial='yes'/>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='type-id-15'/>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='type-id-15'/>
            <!-- std::basic_string<char, std::char_traits<char>, std::allocator<char> >& -->
            <return type-id='type-id-44'/>
          </function-decl>
        </member-function>
        <member-function access='private' static='yes'>
          <!-- char* std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_construct<char *>(char*, const std::allocator<char>&) -->
          <function-decl name='_S_construct&lt;char *&gt;' mangled-name='_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcE' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='1761' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcE'>
            <!-- parameter of type 'char*' -->
            <parameter type-id='type-id-40'/>
            <!-- parameter of type 'char*' -->
            <parameter type-id='type-id-40'/>
            <!-- parameter of type 'const std::allocator<char>&' -->
            <parameter type-id='type-id-41'/>
            <!-- char* -->
            <return type-id='type-id-40'/>
          </function-decl>
        </member-function>
        <member-function access='private' static='yes'>
          <!-- char* std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_construct_aux<char *>(char*, const std::allocator<char>&, std::__false_type) -->
          <function-decl name='_S_construct_aux&lt;char *&gt;' mangled-name='_ZNSs16_S_construct_auxIPcEES0_T_S1_RKSaIcESt12__false_type' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='1739' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNSs16_S_construct_auxIPcEES0_T_S1_RKSaIcESt12__false_type'>
            <!-- parameter of type 'char*' -->
            <parameter type-id='type-id-40'/>
            <!-- parameter of type 'char*' -->
            <parameter type-id='type-id-40'/>
            <!-- parameter of type 'const std::allocator<char>&' -->
            <parameter type-id='type-id-41'/>
            <!-- parameter of type 'struct std::__false_type' -->
            <parameter type-id='type-id-45'/>
            <!-- char* -->
            <return type-id='type-id-40'/>
          </function-decl>
        </member-function>
        <member-function access='private' static='yes'>
          <!-- char* std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_construct<char *>(char*, const std::allocator<char>&, std::forward_iterator_tag) -->
          <function-decl name='_S_construct&lt;char *&gt;' mangled-name='_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='1777' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag'>
            <!-- parameter of type 'char*' -->
            <parameter type-id='type-id-40'/>
            <!-- parameter of type 'char*' -->
            <parameter type-id='type-id-40'/>
            <!-- parameter of type 'const std::allocator<char>&' -->
            <parameter type-id='type-id-41'/>
            <!-- parameter of type 'struct std::forward_iterator_tag' -->
            <parameter type-id='type-id-46'/>
            <!-- char* -->
            <return type-id='type-id-40'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<const char *>(const char*, const char*, const std::allocator<char>&) -->
          <function-decl name='basic_string&lt;const char *&gt;' mangled-name='_ZNSsC2IPKcEET_S2_RKSaIcE' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='540' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNSsC2IPKcEET_S2_RKSaIcE'>
            <!-- implicit parameter of type 'std::basic_string<char, std::char_traits<char>, std::allocator<char> >*' -->
            <parameter type-id='type-id-43' is-artificial='yes'/>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='type-id-15'/>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='type-id-15'/>
            <!-- parameter of type 'const std::allocator<char>&' -->
            <parameter type-id='type-id-41'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='private' static='yes'>
          <!-- char* std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_construct<const char *>(const char*, const std::allocator<char>&) -->
          <function-decl name='_S_construct&lt;const char *&gt;' mangled-name='_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcE' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='1761' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcE'>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='type-id-15'/>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='type-id-15'/>
            <!-- parameter of type 'const std::allocator<char>&' -->
            <parameter type-id='type-id-41'/>
            <!-- char* -->
            <return type-id='type-id-40'/>
          </function-decl>
        </member-function>
        <member-function access='private' static='yes'>
          <!-- char* std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_construct_aux<const char *>(const char*, const std::allocator<char>&, std::__false_type) -->
          <function-decl name='_S_construct_aux&lt;const char *&gt;' mangled-name='_ZNSs16_S_construct_auxIPKcEEPcT_S3_RKSaIcESt12__false_type' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='1739' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNSs16_S_construct_auxIPKcEEPcT_S3_RKSaIcESt12__false_type'>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='type-id-15'/>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='type-id-15'/>
            <!-- parameter of type 'const std::allocator<char>&' -->
            <parameter type-id='type-id-41'/>
            <!-- parameter of type 'struct std::__false_type' -->
            <parameter type-id='type-id-45'/>
            <!-- char* -->
            <return type-id='type-id-40'/>
          </function-decl>
        </member-function>
        <member-function access='private' static='yes'>
          <!-- char* std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_construct<const char *>(const char*, const std::allocator<char>&, std::forward_iterator_tag) -->
          <function-decl name='_S_construct&lt;const char *&gt;' mangled-name='_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='1777' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag'>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='type-id-15'/>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='type-id-15'/>
            <!-- parameter of type 'const std::allocator<char>&' -->
            <parameter type-id='type-id-41'/>
            <!-- parameter of type 'struct std::forward_iterator_tag' -->
            <parameter type-id='type-id-46'/>
            <!-- char* -->
            <return type-id='type-id-40'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- std::basic_string<char, std::char_traits<char>, std::allocator<char> >& std::basic_string<char, std::char_traits<char>, std::allocator<char> >::append<char *>(char*, char*) -->
          <function-decl name='append&lt;char *&gt;' mangled-name='_ZNSs6appendIPcEERSsT_S2_' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='1061' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNSs6appendIPcEERSsT_S2_'>
            <!-- implicit parameter of type 'std::basic_string<char, std::char_traits<char>, std::allocator<char> >*' -->
            <parameter type-id='type-id-43' is-artificial='yes'/>
            <!-- parameter of type 'char*' -->
            <parameter type-id='type-id-40'/>
            <!-- parameter of type 'char*' -->
            <parameter type-id='type-id-40'/>
            <!-- std::basic_string<char, std::char_traits<char>, std::allocator<char> >& -->
            <return type-id='type-id-44'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- typedef std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::string -->
      <typedef-decl name='string' type-id='type-id-30' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stringfwd.h' line='62' column='1' id='type-id-10'/>
    </namespace-decl>
    <!-- const boost::system::error_condition -->
    <qualified-type-def type-id='type-id-2' const='yes' id='type-id-47'/>
    <!-- const boost::system::error_condition& -->
    <reference-type-def kind='lvalue' type-id='type-id-47' size-in-bits='64' id='type-id-16'/>
    <!-- boost::system::error_code* -->
    <pointer-type-def type-id='type-id-18' size-in-bits='64' id='type-id-20'/>
    <!-- const boost::system::error_category& -->
    <reference-type-def kind='lvalue' type-id='type-id-29' size-in-bits='64' id='type-id-1'/>
    <!-- const boost::system::error_code -->
    <qualified-type-def type-id='type-id-18' const='yes' id='type-id-48'/>
    <!-- const boost::system::error_code* -->
    <pointer-type-def type-id='type-id-48' size-in-bits='64' id='type-id-21'/>
    <!-- void ()* -->
    <pointer-type-def type-id='type-id-49' size-in-bits='64' id='type-id-4'/>
    <!-- const boost::system::error_code& -->
    <reference-type-def kind='lvalue' type-id='type-id-48' size-in-bits='64' id='type-id-17'/>
    <!-- boost::system::error_condition* -->
    <pointer-type-def type-id='type-id-2' size-in-bits='64' id='type-id-7'/>
    <!-- const boost::system::error_condition* -->
    <pointer-type-def type-id='type-id-47' size-in-bits='64' id='type-id-9'/>
    <!-- namespace  -->
    <namespace-decl name=''>
      <!-- class codecvt_error_cat -->
      <class-decl name='codecvt_error_cat' size-in-bits='64' visibility='default' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/codecvt_error_category.cpp' line='34' column='1' id='type-id-50'>
      <!-- class boost::system::error_category -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-12'/>
        <member-function access='public' constructor='yes'>
          <!-- codecvt_error_cat::codecvt_error_cat() -->
          <function-decl name='codecvt_error_cat' mangled-name='_ZN12_GLOBAL__N_117codecvt_error_catC2Ev' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/codecvt_error_category.cpp' line='37' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'codecvt_error_cat*' -->
            <parameter type-id='type-id-51' is-artificial='yes'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='public' vtable-offset='2'>
          <!-- const char* codecvt_error_cat::name() -->
          <function-decl name='name' mangled-name='_ZNK12_GLOBAL__N_117codecvt_error_cat4nameEv' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/codecvt_error_category.cpp' line='38' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const codecvt_error_cat*' -->
            <parameter type-id='type-id-52' is-artificial='yes'/>
            <!-- const char* -->
            <return type-id='type-id-15'/>
          </function-decl>
        </member-function>
        <member-function access='public' vtable-offset='3'>
          <!-- std::string codecvt_error_cat::message(int) -->
          <function-decl name='message' mangled-name='_ZNK12_GLOBAL__N_117codecvt_error_cat7messageEi' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/codecvt_error_category.cpp' line='39' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const codecvt_error_cat*' -->
            <parameter type-id='type-id-52' is-artificial='yes'/>
            <!-- parameter of type 'int' -->
            <parameter type-id='type-id-5'/>
            <!-- typedef std::string -->
            <return type-id='type-id-10'/>
          </function-decl>
        </member-function>
      </class-decl>
    </namespace-decl>

    <!-- void abort() -->
    <function-decl name='abort' filepath='/usr/include/stdlib.h' line='515' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int abs(int) -->
    <function-decl name='abs' filepath='/usr/include/stdlib.h' line='774' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int atexit(void ()*) -->
    <function-decl name='atexit' filepath='/usr/include/stdlib.h' line='519' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void ()*' -->
      <parameter type-id='type-id-4'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int at_quick_exit(void ()*) -->
    <function-decl name='at_quick_exit' filepath='/usr/include/stdlib.h' line='524' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void ()*' -->
      <parameter type-id='type-id-4'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- double -->
    <type-decl name='double' size-in-bits='64' id='type-id-53'/>
    <!-- double atof(const char*) -->
    <function-decl name='atof' filepath='/usr/include/stdlib.h' line='144' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- int atoi(const char*) -->
    <function-decl name='atoi' filepath='/usr/include/stdlib.h' line='147' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- long int -->
    <type-decl name='long int' size-in-bits='64' id='type-id-54'/>
    <!-- long int atol(const char*) -->
    <function-decl name='atol' filepath='/usr/include/stdlib.h' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- void* -->
    <pointer-type-def type-id='type-id-8' size-in-bits='64' id='type-id-55'/>
    <!-- unsigned long int -->
    <type-decl name='unsigned long int' size-in-bits='64' id='type-id-56'/>
    <!-- typedef unsigned long int size_t -->
    <typedef-decl name='size_t' type-id='type-id-56' filepath='/usr/lib/llvm-3.6/bin/../lib/clang/3.6.0/include/stddef.h' line='62' column='1' id='type-id-57'/>
    <!-- int (void*, void*)* -->
    <pointer-type-def type-id='type-id-58' size-in-bits='64' id='type-id-59'/>
    <!-- typedef int (void*, void*)* __compar_fn_t -->
    <typedef-decl name='__compar_fn_t' type-id='type-id-59' filepath='/usr/include/stdlib.h' line='741' column='1' id='type-id-60'/>
    <!-- void* bsearch(void*, void*, size_t, size_t, __compar_fn_t) -->
    <function-decl name='bsearch' filepath='/usr/include/stdlib.h' line='754' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef __compar_fn_t' -->
      <parameter type-id='type-id-60'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- void* calloc(size_t, size_t) -->
    <function-decl name='calloc' filepath='/usr/include/stdlib.h' line='468' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- struct __anonymous_struct__ -->
    <class-decl name='__anonymous_struct__' is-struct='yes' is-anonymous='yes' naming-typedef-id='type-id-61' visibility='default' is-declaration-only='yes' id='type-id-62'/>
    <!-- typedef __anonymous_struct__ div_t -->
    <typedef-decl name='div_t' type-id='type-id-62' filepath='/usr/include/stdlib.h' line='101' column='1' id='type-id-61'/>
    <!-- div_t div(int, int) -->
    <function-decl name='div' filepath='/usr/include/stdlib.h' line='788' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- typedef div_t -->
      <return type-id='type-id-61'/>
    </function-decl>
    <!-- void exit(int) -->
    <function-decl name='exit' filepath='/usr/include/stdlib.h' line='543' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- void free(void*) -->
    <function-decl name='free' filepath='/usr/include/stdlib.h' line='483' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- char* -->
    <pointer-type-def type-id='type-id-27' size-in-bits='64' id='type-id-40'/>
    <!-- char* getenv(const char*) -->
    <function-decl name='getenv' filepath='/usr/include/stdlib.h' line='564' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- long int labs(long int) -->
    <function-decl name='labs' filepath='/usr/include/stdlib.h' line='775' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- struct __anonymous_struct__ -->
    <class-decl name='__anonymous_struct__' size-in-bits='128' is-struct='yes' is-anonymous='yes' naming-typedef-id='type-id-63' visibility='default' filepath='/usr/include/stdlib.h' line='105' column='1' id='type-id-64'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- long int __anonymous_struct__::quot -->
        <var-decl name='quot' type-id='type-id-54' visibility='default' filepath='/usr/include/stdlib.h' line='107' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- long int __anonymous_struct__::rem -->
        <var-decl name='rem' type-id='type-id-54' visibility='default' filepath='/usr/include/stdlib.h' line='108' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef __anonymous_struct__ ldiv_t -->
    <typedef-decl name='ldiv_t' type-id='type-id-64' filepath='/usr/include/stdlib.h' line='109' column='1' id='type-id-63'/>
    <!-- ldiv_t ldiv(long int, long int) -->
    <function-decl name='ldiv' filepath='/usr/include/stdlib.h' line='790' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- typedef ldiv_t -->
      <return type-id='type-id-63'/>
    </function-decl>
    <!-- void* malloc(size_t) -->
    <function-decl name='malloc' filepath='/usr/include/stdlib.h' line='466' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- int mblen(const char*, size_t) -->
    <function-decl name='mblen' filepath='/usr/include/stdlib.h' line='862' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wchar_t -->
    <type-decl name='wchar_t' size-in-bits='32' id='type-id-65'/>
    <!-- wchar_t* -->
    <pointer-type-def type-id='type-id-65' size-in-bits='64' id='type-id-66'/>
    <!-- wchar_t* restrict -->
    <qualified-type-def type-id='type-id-66' restrict='yes' id='type-id-67'/>
    <!-- const char* restrict -->
    <qualified-type-def type-id='type-id-15' restrict='yes' id='type-id-68'/>
    <!-- size_t mbstowcs(wchar_t* restrict, const char* restrict, size_t) -->
    <function-decl name='mbstowcs' filepath='/usr/include/stdlib.h' line='873' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- int mbtowc(wchar_t* restrict, const char* restrict, size_t) -->
    <function-decl name='mbtowc' filepath='/usr/include/stdlib.h' line='865' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void qsort(void*, size_t, size_t, __compar_fn_t) -->
    <function-decl name='qsort' filepath='/usr/include/stdlib.h' line='764' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef __compar_fn_t' -->
      <parameter type-id='type-id-60'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- void quick_exit(int) -->
    <function-decl name='quick_exit' filepath='/usr/include/stdlib.h' line='549' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int rand() -->
    <function-decl name='rand' filepath='/usr/include/stdlib.h' line='374' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void* realloc(void*, size_t) -->
    <function-decl name='realloc' filepath='/usr/include/stdlib.h' line='480' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- unsigned int -->
    <type-decl name='unsigned int' size-in-bits='32' id='type-id-69'/>
    <!-- void srand(unsigned int) -->
    <function-decl name='srand' filepath='/usr/include/stdlib.h' line='376' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-69'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- char** -->
    <pointer-type-def type-id='type-id-40' size-in-bits='64' id='type-id-70'/>
    <!-- char** restrict -->
    <qualified-type-def type-id='type-id-70' restrict='yes' id='type-id-71'/>
    <!-- double strtod(const char* restrict, char** restrict) -->
    <function-decl name='strtod' filepath='/usr/include/stdlib.h' line='164' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- long int strtol(const char* restrict, char** restrict, int) -->
    <function-decl name='strtol' filepath='/usr/include/stdlib.h' line='183' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- unsigned long int strtoul(const char* restrict, char** restrict, int) -->
    <function-decl name='strtoul' filepath='/usr/include/stdlib.h' line='187' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- unsigned long int -->
      <return type-id='type-id-56'/>
    </function-decl>
    <!-- int system(const char*) -->
    <function-decl name='system' filepath='/usr/include/stdlib.h' line='716' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- char* restrict -->
    <qualified-type-def type-id='type-id-40' restrict='yes' id='type-id-72'/>
    <!-- const wchar_t -->
    <qualified-type-def type-id='type-id-65' const='yes' id='type-id-73'/>
    <!-- const wchar_t* -->
    <pointer-type-def type-id='type-id-73' size-in-bits='64' id='type-id-74'/>
    <!-- const wchar_t* restrict -->
    <qualified-type-def type-id='type-id-74' restrict='yes' id='type-id-75'/>
    <!-- size_t wcstombs(char* restrict, const wchar_t* restrict, size_t) -->
    <function-decl name='wcstombs' filepath='/usr/include/stdlib.h' line='876' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- int wctomb(char*, wchar_t) -->
    <function-decl name='wctomb' filepath='/usr/include/stdlib.h' line='869' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-40'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- namespace __gnu_cxx -->
    <namespace-decl name='__gnu_cxx'>
      <!-- lldiv_t __gnu_cxx::div(long long int, long long int) -->
      <function-decl name='div' mangled-name='_ZN9__gnu_cxx3divExx' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/cstdlib' line='214' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'long long int' -->
        <parameter type-id='type-id-76'/>
        <!-- parameter of type 'long long int' -->
        <parameter type-id='type-id-76'/>
        <!-- typedef lldiv_t -->
        <return type-id='type-id-77'/>
      </function-decl>
    </namespace-decl>
    <!-- struct __anonymous_struct__ -->
    <class-decl name='__anonymous_struct__' size-in-bits='128' is-struct='yes' is-anonymous='yes' naming-typedef-id='type-id-77' visibility='default' filepath='/usr/include/stdlib.h' line='117' column='1' id='type-id-78'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- long long int __anonymous_struct__::quot -->
        <var-decl name='quot' type-id='type-id-76' visibility='default' filepath='/usr/include/stdlib.h' line='119' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- long long int __anonymous_struct__::rem -->
        <var-decl name='rem' type-id='type-id-76' visibility='default' filepath='/usr/include/stdlib.h' line='120' column='1'/>
      </data-member>
    </class-decl>
    <!-- long long int -->
    <type-decl name='long long int' size-in-bits='64' id='type-id-76'/>
    <!-- typedef __anonymous_struct__ lldiv_t -->
    <typedef-decl name='lldiv_t' type-id='type-id-78' filepath='/usr/include/stdlib.h' line='121' column='1' id='type-id-77'/>
    <!-- void _Exit(int) -->
    <function-decl name='_Exit' filepath='/usr/include/stdlib.h' line='557' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- long long int llabs(long long int) -->
    <function-decl name='llabs' filepath='/usr/include/stdlib.h' line='779' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long long int' -->
      <parameter type-id='type-id-76'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- lldiv_t lldiv(long long int, long long int) -->
    <function-decl name='lldiv' filepath='/usr/include/stdlib.h' line='796' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long long int' -->
      <parameter type-id='type-id-76'/>
      <!-- parameter of type 'long long int' -->
      <parameter type-id='type-id-76'/>
      <!-- typedef lldiv_t -->
      <return type-id='type-id-77'/>
    </function-decl>
    <!-- long long int atoll(const char*) -->
    <function-decl name='atoll' filepath='/usr/include/stdlib.h' line='157' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long int strtoll(const char* restrict, char** restrict, int) -->
    <function-decl name='strtoll' filepath='/usr/include/stdlib.h' line='209' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long unsigned int -->
    <type-decl name='long long unsigned int' size-in-bits='64' id='type-id-79'/>
    <!-- long long unsigned int strtoull(const char* restrict, char** restrict, int) -->
    <function-decl name='strtoull' filepath='/usr/include/stdlib.h' line='214' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long long unsigned int -->
      <return type-id='type-id-79'/>
    </function-decl>
    <!-- float -->
    <type-decl name='float' size-in-bits='32' id='type-id-80'/>
    <!-- float strtof(const char* restrict, char** restrict) -->
    <function-decl name='strtof' filepath='/usr/include/stdlib.h' line='172' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double -->
    <type-decl name='long double' size-in-bits='128' id='type-id-81'/>
    <!-- long double strtold(const char* restrict, char** restrict) -->
    <function-decl name='strtold' filepath='/usr/include/stdlib.h' line='175' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- typedef unsigned int wint_t -->
    <typedef-decl name='wint_t' type-id='type-id-69' filepath='/usr/lib/llvm-3.6/bin/../lib/clang/3.6.0/include/stddef.h' line='132' column='1' id='type-id-82'/>
    <!-- wint_t btowc(int) -->
    <function-decl name='btowc' filepath='/usr/include/wchar.h' line='353' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- struct _IO_FILE -->
    <class-decl name='_IO_FILE' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-83'/>
    <!-- typedef _IO_FILE __FILE -->
    <typedef-decl name='__FILE' type-id='type-id-83' filepath='/usr/include/stdio.h' line='64' column='1' id='type-id-84'/>
    <!-- __FILE* -->
    <pointer-type-def type-id='type-id-84' size-in-bits='64' id='type-id-85'/>
    <!-- wint_t fgetwc(__FILE*) -->
    <function-decl name='fgetwc' filepath='/usr/include/wchar.h' line='745' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- __FILE* restrict -->
    <qualified-type-def type-id='type-id-85' restrict='yes' id='type-id-86'/>
    <!-- wchar_t* fgetws(wchar_t* restrict, int, __FILE* restrict) -->
    <function-decl name='fgetws' filepath='/usr/include/wchar.h' line='774' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wint_t fputwc(wchar_t, __FILE*) -->
    <function-decl name='fputwc' filepath='/usr/include/wchar.h' line='759' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- int fputws(const wchar_t* restrict, __FILE* restrict) -->
    <function-decl name='fputws' filepath='/usr/include/wchar.h' line='781' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fwide(__FILE*, int) -->
    <function-decl name='fwide' filepath='/usr/include/wchar.h' line='587' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fwprintf(__FILE* restrict, const wchar_t* restrict, ...) -->
    <function-decl name='fwprintf' filepath='/usr/include/wchar.h' line='594' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fwscanf(__FILE* restrict, const wchar_t* restrict, ...) -->
    <function-decl name='fwscanf' filepath='/usr/include/wchar.h' line='635' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wint_t getwc(__FILE*) -->
    <function-decl name='getwc' filepath='/usr/include/wchar.h' line='746' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wint_t getwchar() -->
    <function-decl name='getwchar' filepath='/usr/include/wchar.h' line='752' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- struct __anonymous_struct__ -->
    <class-decl name='__anonymous_struct__' size-in-bits='64' is-struct='yes' is-anonymous='yes' naming-typedef-id='type-id-87' visibility='default' filepath='/usr/include/wchar.h' line='82' column='1' id='type-id-62'>
      <member-type access='public'>
        <!-- union __anonymous_struct__::__anonymous_union__ -->
        <union-decl name='__anonymous_union__' size-in-bits='32' is-anonymous='yes' visibility='default' filepath='/usr/include/wchar.h' line='85' column='1' id='type-id-88'>
          <data-member access='private'>
            <!-- unsigned int __anonymous_struct__::__anonymous_union__::__wch -->
            <var-decl name='__wch' type-id='type-id-69' visibility='default' filepath='/usr/include/wchar.h' line='88' column='1'/>
          </data-member>
          <data-member access='private'>
            <!-- char __anonymous_struct__::__anonymous_union__::__wchb[4] -->
            <var-decl name='__wchb' type-id='type-id-89' visibility='default' filepath='/usr/include/wchar.h' line='92' column='1'/>
          </data-member>
        </union-decl>
      </member-type>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- int __anonymous_struct__::__count -->
        <var-decl name='__count' type-id='type-id-5' visibility='default' filepath='/usr/include/wchar.h' line='84' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- __anonymous_struct__::__anonymous_union__ __anonymous_struct__::__value -->
        <var-decl name='__value' type-id='type-id-88' visibility='default' filepath='/usr/include/wchar.h' line='93' column='1'/>
      </data-member>
    </class-decl>
    <!-- char[4] -->
    <array-type-def dimensions='1' type-id='type-id-27' size-in-bits='32' id='type-id-89'>
      <subrange length='4'/>
    </array-type-def>
    <!-- typedef __anonymous_struct__ __mbstate_t -->
    <typedef-decl name='__mbstate_t' type-id='type-id-62' filepath='/usr/include/wchar.h' line='94' column='1' id='type-id-87'/>
    <!-- typedef __mbstate_t mbstate_t -->
    <typedef-decl name='mbstate_t' type-id='type-id-87' filepath='/usr/include/wchar.h' line='106' column='1' id='type-id-90'/>
    <!-- mbstate_t* -->
    <pointer-type-def type-id='type-id-90' size-in-bits='64' id='type-id-91'/>
    <!-- mbstate_t* restrict -->
    <qualified-type-def type-id='type-id-91' restrict='yes' id='type-id-92'/>
    <!-- size_t mbrlen(const char* restrict, size_t, mbstate_t* restrict) -->
    <function-decl name='mbrlen' filepath='/usr/include/wchar.h' line='376' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'mbstate_t* restrict' -->
      <parameter type-id='type-id-92'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- size_t mbrtowc(wchar_t* restrict, const char* restrict, size_t, mbstate_t* restrict) -->
    <function-decl name='mbrtowc' filepath='/usr/include/wchar.h' line='365' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'mbstate_t* restrict' -->
      <parameter type-id='type-id-92'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- const mbstate_t -->
    <qualified-type-def type-id='type-id-90' const='yes' id='type-id-93'/>
    <!-- const mbstate_t* -->
    <pointer-type-def type-id='type-id-93' size-in-bits='64' id='type-id-94'/>
    <!-- int mbsinit(const mbstate_t*) -->
    <function-decl name='mbsinit' filepath='/usr/include/wchar.h' line='361' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const mbstate_t*' -->
      <parameter type-id='type-id-94'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- const char** -->
    <pointer-type-def type-id='type-id-15' size-in-bits='64' id='type-id-95'/>
    <!-- const char** restrict -->
    <qualified-type-def type-id='type-id-95' restrict='yes' id='type-id-96'/>
    <!-- size_t mbsrtowcs(wchar_t* restrict, const char** restrict, size_t, mbstate_t* restrict) -->
    <function-decl name='mbsrtowcs' filepath='/usr/include/wchar.h' line='408' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const char** restrict' -->
      <parameter type-id='type-id-96'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'mbstate_t* restrict' -->
      <parameter type-id='type-id-92'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- wint_t putwc(wchar_t, __FILE*) -->
    <function-decl name='putwc' filepath='/usr/include/wchar.h' line='760' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wint_t putwchar(wchar_t) -->
    <function-decl name='putwchar' filepath='/usr/include/wchar.h' line='766' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- int swprintf(wchar_t* restrict, size_t, const wchar_t* restrict, ...) -->
    <function-decl name='swprintf' filepath='/usr/include/wchar.h' line='604' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int swscanf(const wchar_t* restrict, const wchar_t* restrict, ...) -->
    <function-decl name='swscanf' filepath='/usr/include/wchar.h' line='645' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wint_t ungetwc(wint_t, __FILE*) -->
    <function-decl name='ungetwc' filepath='/usr/include/wchar.h' line='789' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- struct __va_list_tag -->
    <class-decl name='__va_list_tag' size-in-bits='192' is-struct='yes' visibility='default' id='type-id-97'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- unsigned int __va_list_tag::gp_offset -->
        <var-decl name='gp_offset' type-id='type-id-69' visibility='default'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- unsigned int __va_list_tag::fp_offset -->
        <var-decl name='fp_offset' type-id='type-id-69' visibility='default'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- void* __va_list_tag::overflow_arg_area -->
        <var-decl name='overflow_arg_area' type-id='type-id-55' visibility='default'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- void* __va_list_tag::reg_save_area -->
        <var-decl name='reg_save_area' type-id='type-id-55' visibility='default'/>
      </data-member>
    </class-decl>
    <!-- typedef __va_list_tag __va_list_tag -->
    <typedef-decl name='__va_list_tag' type-id='type-id-97' id='type-id-98'/>
    <!-- __va_list_tag* -->
    <pointer-type-def type-id='type-id-98' size-in-bits='64' id='type-id-99'/>
    <!-- int vfwprintf(__FILE* restrict, const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vfwprintf' filepath='/usr/include/wchar.h' line='612' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vfwscanf(__FILE* restrict, const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vfwscanf' filepath='/usr/include/wchar.h' line='689' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vswprintf(wchar_t* restrict, size_t, const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vswprintf' filepath='/usr/include/wchar.h' line='625' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vswscanf(const wchar_t* restrict, const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vswscanf' filepath='/usr/include/wchar.h' line='701' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vwprintf(const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vwprintf' filepath='/usr/include/wchar.h' line='620' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vwscanf(const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vwscanf' filepath='/usr/include/wchar.h' line='697' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- size_t wcrtomb(char* restrict, wchar_t, mbstate_t* restrict) -->
    <function-decl name='wcrtomb' filepath='/usr/include/wchar.h' line='370' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- parameter of type 'mbstate_t* restrict' -->
      <parameter type-id='type-id-92'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- wchar_t* wcscat(wchar_t* restrict, const wchar_t* restrict) -->
    <function-decl name='wcscat' filepath='/usr/include/wchar.h' line='155' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- int wcscmp(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcscmp' filepath='/usr/include/wchar.h' line='163' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int wcscoll(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcscoll' filepath='/usr/include/wchar.h' line='192' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wchar_t* wcscpy(wchar_t* restrict, const wchar_t* restrict) -->
    <function-decl name='wcscpy' filepath='/usr/include/wchar.h' line='147' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- size_t wcscspn(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcscspn' filepath='/usr/include/wchar.h' line='252' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- struct tm -->
    <class-decl name='tm' size-in-bits='448' is-struct='yes' visibility='default' filepath='/usr/include/time.h' line='133' column='1' id='type-id-100'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- int tm::tm_sec -->
        <var-decl name='tm_sec' type-id='type-id-5' visibility='default' filepath='/usr/include/time.h' line='135' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- int tm::tm_min -->
        <var-decl name='tm_min' type-id='type-id-5' visibility='default' filepath='/usr/include/time.h' line='136' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- int tm::tm_hour -->
        <var-decl name='tm_hour' type-id='type-id-5' visibility='default' filepath='/usr/include/time.h' line='137' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='96'>
        <!-- int tm::tm_mday -->
        <var-decl name='tm_mday' type-id='type-id-5' visibility='default' filepath='/usr/include/time.h' line='138' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- int tm::tm_mon -->
        <var-decl name='tm_mon' type-id='type-id-5' visibility='default' filepath='/usr/include/time.h' line='139' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='160'>
        <!-- int tm::tm_year -->
        <var-decl name='tm_year' type-id='type-id-5' visibility='default' filepath='/usr/include/time.h' line='140' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- int tm::tm_wday -->
        <var-decl name='tm_wday' type-id='type-id-5' visibility='default' filepath='/usr/include/time.h' line='141' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='224'>
        <!-- int tm::tm_yday -->
        <var-decl name='tm_yday' type-id='type-id-5' visibility='default' filepath='/usr/include/time.h' line='142' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- int tm::tm_isdst -->
        <var-decl name='tm_isdst' type-id='type-id-5' visibility='default' filepath='/usr/include/time.h' line='143' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- long int tm::tm_gmtoff -->
        <var-decl name='tm_gmtoff' type-id='type-id-54' visibility='default' filepath='/usr/include/time.h' line='146' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- const char* tm::tm_zone -->
        <var-decl name='tm_zone' type-id='type-id-15' visibility='default' filepath='/usr/include/time.h' line='147' column='1'/>
      </data-member>
    </class-decl>
    <!-- const tm -->
    <qualified-type-def type-id='type-id-100' const='yes' id='type-id-101'/>
    <!-- const tm* -->
    <pointer-type-def type-id='type-id-101' size-in-bits='64' id='type-id-102'/>
    <!-- const tm* restrict -->
    <qualified-type-def type-id='type-id-102' restrict='yes' id='type-id-103'/>
    <!-- size_t wcsftime(wchar_t* restrict, size_t, const wchar_t* restrict, const tm* restrict) -->
    <function-decl name='wcsftime' filepath='/usr/include/wchar.h' line='855' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'const tm* restrict' -->
      <parameter type-id='type-id-103'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- size_t wcslen(const wchar_t*) -->
    <function-decl name='wcslen' filepath='/usr/include/wchar.h' line='287' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- wchar_t* wcsncat(wchar_t* restrict, const wchar_t* restrict, size_t) -->
    <function-decl name='wcsncat' filepath='/usr/include/wchar.h' line='158' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- int wcsncmp(const wchar_t*, const wchar_t*, size_t) -->
    <function-decl name='wcsncmp' filepath='/usr/include/wchar.h' line='166' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wchar_t* wcsncpy(wchar_t* restrict, const wchar_t* restrict, size_t) -->
    <function-decl name='wcsncpy' filepath='/usr/include/wchar.h' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- const wchar_t** -->
    <pointer-type-def type-id='type-id-74' size-in-bits='64' id='type-id-104'/>
    <!-- const wchar_t** restrict -->
    <qualified-type-def type-id='type-id-104' restrict='yes' id='type-id-105'/>
    <!-- size_t wcsrtombs(char* restrict, const wchar_t** restrict, size_t, mbstate_t* restrict) -->
    <function-decl name='wcsrtombs' filepath='/usr/include/wchar.h' line='414' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const wchar_t** restrict' -->
      <parameter type-id='type-id-105'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'mbstate_t* restrict' -->
      <parameter type-id='type-id-92'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- size_t wcsspn(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcsspn' filepath='/usr/include/wchar.h' line='256' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- wchar_t** -->
    <pointer-type-def type-id='type-id-66' size-in-bits='64' id='type-id-106'/>
    <!-- wchar_t** restrict -->
    <qualified-type-def type-id='type-id-106' restrict='yes' id='type-id-107'/>
    <!-- double wcstod(const wchar_t* restrict, wchar_t** restrict) -->
    <function-decl name='wcstod' filepath='/usr/include/wchar.h' line='450' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float wcstof(const wchar_t* restrict, wchar_t** restrict) -->
    <function-decl name='wcstof' filepath='/usr/include/wchar.h' line='457' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- wchar_t* wcstok(wchar_t* restrict, const wchar_t* restrict, wchar_t** restrict) -->
    <function-decl name='wcstok' filepath='/usr/include/wchar.h' line='282' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- long int wcstol(const wchar_t* restrict, wchar_t** restrict, int) -->
    <function-decl name='wcstol' filepath='/usr/include/wchar.h' line='468' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- unsigned long int wcstoul(const wchar_t* restrict, wchar_t** restrict, int) -->
    <function-decl name='wcstoul' filepath='/usr/include/wchar.h' line='473' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- unsigned long int -->
      <return type-id='type-id-56'/>
    </function-decl>
    <!-- size_t wcsxfrm(wchar_t* restrict, const wchar_t* restrict, size_t) -->
    <function-decl name='wcsxfrm' filepath='/usr/include/wchar.h' line='196' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- int wctob(wint_t) -->
    <function-decl name='wctob' filepath='/usr/include/wchar.h' line='357' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int wmemcmp(const wchar_t*, const wchar_t*, size_t) -->
    <function-decl name='wmemcmp' filepath='/usr/include/wchar.h' line='325' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wchar_t* wmemcpy(wchar_t* restrict, const wchar_t* restrict, size_t) -->
    <function-decl name='wmemcpy' filepath='/usr/include/wchar.h' line='329' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wmemmove(wchar_t*, const wchar_t*, size_t) -->
    <function-decl name='wmemmove' filepath='/usr/include/wchar.h' line='334' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t*' -->
      <parameter type-id='type-id-66'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wmemset(wchar_t*, wchar_t, size_t) -->
    <function-decl name='wmemset' filepath='/usr/include/wchar.h' line='338' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t*' -->
      <parameter type-id='type-id-66'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- int wprintf(const wchar_t* restrict, ...) -->
    <function-decl name='wprintf' filepath='/usr/include/wchar.h' line='601' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int wscanf(const wchar_t* restrict, ...) -->
    <function-decl name='wscanf' filepath='/usr/include/wchar.h' line='642' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wchar_t* wcschr(const wchar_t*, wchar_t) -->
    <function-decl name='wcschr' filepath='/usr/include/wchar.h' line='227' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wcspbrk(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcspbrk' filepath='/usr/include/wchar.h' line='266' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wcsrchr(const wchar_t*, wchar_t) -->
    <function-decl name='wcsrchr' filepath='/usr/include/wchar.h' line='237' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wcsstr(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcsstr' filepath='/usr/include/wchar.h' line='277' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wmemchr(const wchar_t*, wchar_t, size_t) -->
    <function-decl name='wmemchr' filepath='/usr/include/wchar.h' line='320' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- long double wcstold(const wchar_t* restrict, wchar_t** restrict) -->
    <function-decl name='wcstold' filepath='/usr/include/wchar.h' line='459' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- long long int wcstoll(const wchar_t* restrict, wchar_t** restrict, int) -->
    <function-decl name='wcstoll' filepath='/usr/include/wchar.h' line='483' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long unsigned int wcstoull(const wchar_t* restrict, wchar_t** restrict, int) -->
    <function-decl name='wcstoull' filepath='/usr/include/wchar.h' line='490' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long long unsigned int -->
      <return type-id='type-id-79'/>
    </function-decl>

    <!-- char* setlocale(int, const char*) -->
    <function-decl name='setlocale' filepath='/usr/include/locale.h' line='124' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- struct lconv -->
    <class-decl name='lconv' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-108'/>
    <!-- lconv* -->
    <pointer-type-def type-id='type-id-108' size-in-bits='64' id='type-id-109'/>
    <!-- lconv* localeconv() -->
    <function-decl name='localeconv' filepath='/usr/include/locale.h' line='127' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- lconv* -->
      <return type-id='type-id-109'/>
    </function-decl>
    <!-- int isalnum(int) -->
    <function-decl name='isalnum' filepath='/usr/include/ctype.h' line='110' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isalpha(int) -->
    <function-decl name='isalpha' filepath='/usr/include/ctype.h' line='111' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iscntrl(int) -->
    <function-decl name='iscntrl' filepath='/usr/include/ctype.h' line='112' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isdigit(int) -->
    <function-decl name='isdigit' filepath='/usr/include/ctype.h' line='113' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isgraph(int) -->
    <function-decl name='isgraph' filepath='/usr/include/ctype.h' line='115' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int islower(int) -->
    <function-decl name='islower' filepath='/usr/include/ctype.h' line='114' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isprint(int) -->
    <function-decl name='isprint' filepath='/usr/include/ctype.h' line='116' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int ispunct(int) -->
    <function-decl name='ispunct' filepath='/usr/include/ctype.h' line='117' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isspace(int) -->
    <function-decl name='isspace' filepath='/usr/include/ctype.h' line='118' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isupper(int) -->
    <function-decl name='isupper' filepath='/usr/include/ctype.h' line='119' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isxdigit(int) -->
    <function-decl name='isxdigit' filepath='/usr/include/ctype.h' line='120' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int tolower(int) -->
    <function-decl name='tolower' filepath='/usr/include/ctype.h' line='124' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int toupper(int) -->
    <function-decl name='toupper' filepath='/usr/include/ctype.h' line='127' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isblank(int) -->
    <function-decl name='isblank' filepath='/usr/include/ctype.h' line='136' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- typedef _IO_FILE FILE -->
    <typedef-decl name='FILE' type-id='type-id-83' filepath='/usr/include/stdio.h' line='48' column='1' id='type-id-110'/>
    <!-- FILE* -->
    <pointer-type-def type-id='type-id-110' size-in-bits='64' id='type-id-111'/>
    <!-- void clearerr(FILE*) -->
    <function-decl name='clearerr' filepath='/usr/include/stdio.h' line='826' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int fclose(FILE*) -->
    <function-decl name='fclose' filepath='/usr/include/stdio.h' line='237' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int feof(FILE*) -->
    <function-decl name='feof' filepath='/usr/include/stdio.h' line='828' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int ferror(FILE*) -->
    <function-decl name='ferror' filepath='/usr/include/stdio.h' line='830' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fflush(FILE*) -->
    <function-decl name='fflush' filepath='/usr/include/stdio.h' line='242' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fgetc(FILE*) -->
    <function-decl name='fgetc' filepath='/usr/include/stdio.h' line='531' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- FILE* restrict -->
    <qualified-type-def type-id='type-id-111' restrict='yes' id='type-id-112'/>
    <!-- typedef __anonymous_struct__ _G_fpos_t -->
    <typedef-decl name='_G_fpos_t' type-id='type-id-62' filepath='/usr/include/_G_config.h' line='25' column='1' id='type-id-113'/>
    <!-- typedef _G_fpos_t fpos_t -->
    <typedef-decl name='fpos_t' type-id='type-id-113' filepath='/usr/include/stdio.h' line='110' column='1' id='type-id-114'/>
    <!-- fpos_t* -->
    <pointer-type-def type-id='type-id-114' size-in-bits='64' id='type-id-115'/>
    <!-- fpos_t* restrict -->
    <qualified-type-def type-id='type-id-115' restrict='yes' id='type-id-116'/>
    <!-- int fgetpos(FILE* restrict, fpos_t* restrict) -->
    <function-decl name='fgetpos' filepath='/usr/include/stdio.h' line='798' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'fpos_t* restrict' -->
      <parameter type-id='type-id-116'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- char* fgets(char* restrict, int, FILE* restrict) -->
    <function-decl name='fgets' filepath='/usr/include/stdio.h' line='622' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- FILE* fopen(const char* restrict, const char* restrict) -->
    <function-decl name='fopen' filepath='/usr/include/stdio.h' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- FILE* -->
      <return type-id='type-id-111'/>
    </function-decl>
    <!-- int fprintf(FILE* restrict, const char* restrict, ...) -->
    <function-decl name='fprintf' filepath='/usr/include/stdio.h' line='356' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fputc(int, FILE*) -->
    <function-decl name='fputc' filepath='/usr/include/stdio.h' line='573' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fputs(const char* restrict, FILE* restrict) -->
    <function-decl name='fputs' filepath='/usr/include/stdio.h' line='689' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void* restrict -->
    <qualified-type-def type-id='type-id-55' restrict='yes' id='type-id-117'/>
    <!-- size_t fread(void* restrict, size_t, size_t, FILE* restrict) -->
    <function-decl name='fread' filepath='/usr/include/stdio.h' line='709' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void* restrict' -->
      <parameter type-id='type-id-117'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- FILE* freopen(const char* restrict, const char* restrict, FILE* restrict) -->
    <function-decl name='freopen' filepath='/usr/include/stdio.h' line='278' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- FILE* -->
      <return type-id='type-id-111'/>
    </function-decl>
    <!-- int fscanf(FILE* restrict, const char* restrict, ...) -->
    <function-decl name='fscanf' filepath='/usr/include/stdio.h' line='425' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fseek(FILE*, long int, int) -->
    <function-decl name='fseek' filepath='/usr/include/stdio.h' line='749' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- const fpos_t -->
    <qualified-type-def type-id='type-id-114' const='yes' id='type-id-118'/>
    <!-- const fpos_t* -->
    <pointer-type-def type-id='type-id-118' size-in-bits='64' id='type-id-119'/>
    <!-- int fsetpos(FILE*, const fpos_t*) -->
    <function-decl name='fsetpos' filepath='/usr/include/stdio.h' line='803' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- parameter of type 'const fpos_t*' -->
      <parameter type-id='type-id-119'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- long int ftell(FILE*) -->
    <function-decl name='ftell' filepath='/usr/include/stdio.h' line='754' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- size_t fwrite(void* restrict, size_t, size_t, FILE* restrict) -->
    <function-decl name='fwrite' filepath='/usr/include/stdio.h' line='715' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void* restrict' -->
      <parameter type-id='type-id-117'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- int getc(FILE*) -->
    <function-decl name='getc' filepath='/usr/include/stdio.h' line='532' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int getchar() -->
    <function-decl name='getchar' filepath='/usr/include/stdio.h' line='538' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- char* gets(char*) -->
    <function-decl name='gets' filepath='/usr/include/stdio.h' line='638' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-40'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- void perror(const char*) -->
    <function-decl name='perror' filepath='/usr/include/stdio.h' line='846' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int printf(const char* restrict, ...) -->
    <function-decl name='printf' filepath='/usr/include/stdio.h' line='362' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int putc(int, FILE*) -->
    <function-decl name='putc' filepath='/usr/include/stdio.h' line='574' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int putchar(int) -->
    <function-decl name='putchar' filepath='/usr/include/stdio.h' line='580' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int puts(const char*) -->
    <function-decl name='puts' filepath='/usr/include/stdio.h' line='695' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int remove(const char*) -->
    <function-decl name='remove' filepath='/usr/include/stdio.h' line='178' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int rename(const char*, const char*) -->
    <function-decl name='rename' filepath='/usr/include/stdio.h' line='180' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void rewind(FILE*) -->
    <function-decl name='rewind' filepath='/usr/include/stdio.h' line='759' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int scanf(const char* restrict, ...) -->
    <function-decl name='scanf' filepath='/usr/include/stdio.h' line='431' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void setbuf(FILE* restrict, char* restrict) -->
    <function-decl name='setbuf' filepath='/usr/include/stdio.h' line='332' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int setvbuf(FILE* restrict, char* restrict, int, size_t) -->
    <function-decl name='setvbuf' filepath='/usr/include/stdio.h' line='336' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int sprintf(char* restrict, const char* restrict, ...) -->
    <function-decl name='sprintf' filepath='/usr/include/stdio.h' line='364' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int sscanf(const char* restrict, const char* restrict, ...) -->
    <function-decl name='sscanf' filepath='/usr/include/stdio.h' line='433' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- FILE* tmpfile() -->
    <function-decl name='tmpfile' filepath='/usr/include/stdio.h' line='195' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- FILE* -->
      <return type-id='type-id-111'/>
    </function-decl>
    <!-- char* tmpnam(char*) -->
    <function-decl name='tmpnam' filepath='/usr/include/stdio.h' line='209' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-40'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- int ungetc(int, FILE*) -->
    <function-decl name='ungetc' filepath='/usr/include/stdio.h' line='702' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vfprintf(FILE* restrict, const char* restrict, __va_list_tag*) -->
    <function-decl name='vfprintf' filepath='/usr/include/stdio.h' line='371' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vprintf(const char* restrict, __va_list_tag*) -->
    <function-decl name='vprintf' filepath='/usr/include/stdio.h' line='377' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vsprintf(char* restrict, const char* restrict, __va_list_tag*) -->
    <function-decl name='vsprintf' filepath='/usr/include/stdio.h' line='379' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int snprintf(char* restrict, size_t, const char* restrict, ...) -->
    <function-decl name='snprintf' filepath='/usr/include/stdio.h' line='386' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vfscanf(FILE* restrict, const char* restrict, __va_list_tag*) -->
    <function-decl name='vfscanf' filepath='/usr/include/stdio.h' line='471' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vscanf(const char* restrict, __va_list_tag*) -->
    <function-decl name='vscanf' filepath='/usr/include/stdio.h' line='479' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vsnprintf(char* restrict, size_t, const char* restrict, __va_list_tag*) -->
    <function-decl name='vsnprintf' filepath='/usr/include/stdio.h' line='390' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vsscanf(const char* restrict, const char* restrict, __va_list_tag*) -->
    <function-decl name='vsscanf' filepath='/usr/include/stdio.h' line='483' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswalnum(wint_t) -->
    <function-decl name='iswalnum' filepath='/usr/include/wctype.h' line='111' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswalpha(wint_t) -->
    <function-decl name='iswalpha' filepath='/usr/include/wctype.h' line='117' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswblank(wint_t) -->
    <function-decl name='iswblank' filepath='/usr/include/wctype.h' line='162' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswcntrl(wint_t) -->
    <function-decl name='iswcntrl' filepath='/usr/include/wctype.h' line='120' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- typedef unsigned long int wctype_t -->
    <typedef-decl name='wctype_t' type-id='type-id-56' filepath='/usr/include/wctype.h' line='52' column='1' id='type-id-120'/>
    <!-- int iswctype(wint_t, wctype_t) -->
    <function-decl name='iswctype' filepath='/usr/include/wctype.h' line='175' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- parameter of type 'typedef wctype_t' -->
      <parameter type-id='type-id-120'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswdigit(wint_t) -->
    <function-decl name='iswdigit' filepath='/usr/include/wctype.h' line='124' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswgraph(wint_t) -->
    <function-decl name='iswgraph' filepath='/usr/include/wctype.h' line='128' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswlower(wint_t) -->
    <function-decl name='iswlower' filepath='/usr/include/wctype.h' line='133' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswprint(wint_t) -->
    <function-decl name='iswprint' filepath='/usr/include/wctype.h' line='136' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswpunct(wint_t) -->
    <function-decl name='iswpunct' filepath='/usr/include/wctype.h' line='141' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswspace(wint_t) -->
    <function-decl name='iswspace' filepath='/usr/include/wctype.h' line='146' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswupper(wint_t) -->
    <function-decl name='iswupper' filepath='/usr/include/wctype.h' line='151' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswxdigit(wint_t) -->
    <function-decl name='iswxdigit' filepath='/usr/include/wctype.h' line='156' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- typedef int __int32_t -->
    <typedef-decl name='__int32_t' type-id='type-id-5' filepath='/usr/include/x86_64-linux-gnu/bits/types.h' line='40' column='1' id='type-id-121'/>
    <!-- const __int32_t -->
    <qualified-type-def type-id='type-id-121' const='yes' id='type-id-122'/>
    <!-- const __int32_t* -->
    <pointer-type-def type-id='type-id-122' size-in-bits='64' id='type-id-123'/>
    <!-- typedef const __int32_t* wctrans_t -->
    <typedef-decl name='wctrans_t' type-id='type-id-123' filepath='/usr/include/wctype.h' line='186' column='1' id='type-id-124'/>
    <!-- wint_t towctrans(wint_t, wctrans_t) -->
    <function-decl name='towctrans' filepath='/usr/include/wctype.h' line='221' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- parameter of type 'typedef wctrans_t' -->
      <parameter type-id='type-id-124'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wint_t towlower(wint_t) -->
    <function-decl name='towlower' filepath='/usr/include/wctype.h' line='194' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wint_t towupper(wint_t) -->
    <function-decl name='towupper' filepath='/usr/include/wctype.h' line='197' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wctrans_t wctrans(const char*) -->
    <function-decl name='wctrans' filepath='/usr/include/wctype.h' line='218' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- typedef wctrans_t -->
      <return type-id='type-id-124'/>
    </function-decl>
    <!-- wctype_t wctype(const char*) -->
    <function-decl name='wctype' filepath='/usr/include/wctype.h' line='171' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- typedef wctype_t -->
      <return type-id='type-id-120'/>
    </function-decl>
    <!-- typedef long int __clock_t -->
    <typedef-decl name='__clock_t' type-id='type-id-54' filepath='/usr/include/x86_64-linux-gnu/bits/types.h' line='135' column='1' id='type-id-125'/>
    <!-- typedef __clock_t clock_t -->
    <typedef-decl name='clock_t' type-id='type-id-125' filepath='/usr/include/time.h' line='59' column='1' id='type-id-126'/>
    <!-- clock_t clock() -->
    <function-decl name='clock' filepath='/usr/include/time.h' line='189' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- typedef clock_t -->
      <return type-id='type-id-126'/>
    </function-decl>
    <!-- typedef long int __time_t -->
    <typedef-decl name='__time_t' type-id='type-id-54' filepath='/usr/include/x86_64-linux-gnu/bits/types.h' line='139' column='1' id='type-id-127'/>
    <!-- typedef __time_t time_t -->
    <typedef-decl name='time_t' type-id='type-id-127' filepath='/usr/include/time.h' line='75' column='1' id='type-id-128'/>
    <!-- double difftime(time_t, time_t) -->
    <function-decl name='difftime' filepath='/usr/include/time.h' line='195' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef time_t' -->
      <parameter type-id='type-id-128'/>
      <!-- parameter of type 'typedef time_t' -->
      <parameter type-id='type-id-128'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- tm* -->
    <pointer-type-def type-id='type-id-100' size-in-bits='64' id='type-id-129'/>
    <!-- time_t mktime(tm*) -->
    <function-decl name='mktime' filepath='/usr/include/time.h' line='199' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'tm*' -->
      <parameter type-id='type-id-129'/>
      <!-- typedef time_t -->
      <return type-id='type-id-128'/>
    </function-decl>
    <!-- time_t* -->
    <pointer-type-def type-id='type-id-128' size-in-bits='64' id='type-id-130'/>
    <!-- time_t time(time_t*) -->
    <function-decl name='time' filepath='/usr/include/time.h' line='192' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'time_t*' -->
      <parameter type-id='type-id-130'/>
      <!-- typedef time_t -->
      <return type-id='type-id-128'/>
    </function-decl>
    <!-- char* asctime(const tm*) -->
    <function-decl name='asctime' filepath='/usr/include/time.h' line='261' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const tm*' -->
      <parameter type-id='type-id-102'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- const time_t -->
    <qualified-type-def type-id='type-id-128' const='yes' id='type-id-131'/>
    <!-- const time_t* -->
    <pointer-type-def type-id='type-id-131' size-in-bits='64' id='type-id-132'/>
    <!-- char* ctime(const time_t*) -->
    <function-decl name='ctime' filepath='/usr/include/time.h' line='264' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const time_t*' -->
      <parameter type-id='type-id-132'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- tm* gmtime(const time_t*) -->
    <function-decl name='gmtime' filepath='/usr/include/time.h' line='239' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const time_t*' -->
      <parameter type-id='type-id-132'/>
      <!-- tm* -->
      <return type-id='type-id-129'/>
    </function-decl>
    <!-- tm* localtime(const time_t*) -->
    <function-decl name='localtime' filepath='/usr/include/time.h' line='243' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const time_t*' -->
      <parameter type-id='type-id-132'/>
      <!-- tm* -->
      <return type-id='type-id-129'/>
    </function-decl>
    <!-- size_t strftime(char* restrict, size_t, const char* restrict, const tm* restrict) -->
    <function-decl name='strftime' filepath='/usr/include/time.h' line='205' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'const tm* restrict' -->
      <parameter type-id='type-id-103'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- codecvt_error_cat* -->
    <pointer-type-def type-id='type-id-50' size-in-bits='64' id='type-id-51'/>
    <!-- const codecvt_error_cat -->
    <qualified-type-def type-id='type-id-50' const='yes' id='type-id-133'/>
    <!-- const codecvt_error_cat* -->
    <pointer-type-def type-id='type-id-133' size-in-bits='64' id='type-id-52'/>
    <!-- const std::allocator<char>& -->
    <reference-type-def kind='lvalue' type-id='type-id-134' size-in-bits='64' id='type-id-41'/>
    <!-- const std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep* -->
    <pointer-type-def type-id='type-id-135' size-in-bits='64' id='type-id-38'/>
    <!-- const std::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type -->
    <qualified-type-def type-id='type-id-31' const='yes' id='type-id-35'/>
    <!-- int (void*, void*) -->
    <function-type size-in-bits='64' id='type-id-58'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-type>
    <!-- void () -->
    <function-type size-in-bits='64' id='type-id-49'>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-type>
    <!-- size_type[] -->
    <array-type-def dimensions='0' type-id='type-id-31' size-in-bits='infinite' id='type-id-36'/>
    <!-- std::basic_string<char, std::char_traits<char>, std::allocator<char> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-30' size-in-bits='64' id='type-id-44'/>
    <!-- std::basic_string<char, std::char_traits<char>, std::allocator<char> >* -->
    <pointer-type-def type-id='type-id-30' size-in-bits='64' id='type-id-43'/>
    <!-- std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep& -->
    <reference-type-def kind='lvalue' type-id='type-id-33' size-in-bits='64' id='type-id-37'/>
    <!-- std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep* -->
    <pointer-type-def type-id='type-id-33' size-in-bits='64' id='type-id-39'/>
    <namespace-decl name='std'>
      <!-- struct std::__false_type -->
      <class-decl name='__false_type' size-in-bits='8' is-struct='yes' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/cpp_type_traits.h' line='83' column='1' id='type-id-45'/>
    </namespace-decl>
    <namespace-decl name='std'>
      <!-- struct std::forward_iterator_tag -->
      <class-decl name='forward_iterator_tag' size-in-bits='8' is-struct='yes' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator_base_types.h' line='95' column='1' id='type-id-46'>
      <!-- struct std::input_iterator_tag -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-136'/>
      </class-decl>
    </namespace-decl>
    <!-- typedef int _Atomic_word -->
    <typedef-decl name='_Atomic_word' type-id='type-id-5' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/x86_64-linux-gnu/c++/4.9/bits/atomic_word.h' line='32' column='1' id='type-id-42'/>
    <namespace-decl name='std'>
      <class-decl name='allocator&lt;char&gt;' visibility='default' is-declaration-only='yes' id='type-id-137'>
        <member-type access='private'>
          <!-- typedef std::size_t std::allocator<char>::size_type -->
          <typedef-decl name='size_type' type-id='type-id-138' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/allocator.h' line='95' column='1' id='type-id-32'/>
        </member-type>
      </class-decl>
    </namespace-decl>
    <!-- const std::allocator<char> -->
    <qualified-type-def type-id='type-id-137' const='yes' id='type-id-134'/>
    <!-- const std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep -->
    <qualified-type-def type-id='type-id-33' const='yes' id='type-id-135'/>
    <namespace-decl name='std'>
      <!-- struct std::input_iterator_tag -->
      <class-decl name='input_iterator_tag' size-in-bits='8' is-struct='yes' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator_base_types.h' line='89' column='1' id='type-id-136'/>
    </namespace-decl>
    <namespace-decl name='std'>
      <!-- typedef unsigned long int std::size_t -->
      <typedef-decl name='size_t' type-id='type-id-56' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/x86_64-linux-gnu/c++/4.9/bits/c++config.h' line='188' column='1' id='type-id-138'/>
    </namespace-decl>
    <namespace-decl name='std'>
      <!-- class std::allocator<char> -->
      <class-decl name='allocator&lt;char&gt;' visibility='default' is-declaration-only='yes' id='type-id-137'>
        <member-type access='private'>
          <!-- typedef std::size_t std::allocator<char>::size_type -->
          <typedef-decl name='size_type' type-id='type-id-138' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/allocator.h' line='95' column='1' id='type-id-32'/>
        </member-type>
      </class-decl>
    </namespace-decl>
  </abi-instr>
  <abi-instr version='1.0' address-size='64' path='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' language='LANG_C_plus_plus'>
    <!-- namespace boost -->
    <namespace-decl name='boost'>
      <!-- namespace boost::filesystem -->
      <namespace-decl name='filesystem'>
        <!-- namespace boost::filesystem::detail -->
        <namespace-decl name='detail'>
          <!-- struct boost::filesystem::detail::dir_itr_imp -->
          <class-decl name='dir_itr_imp' size-in-bits='320' is-struct='yes' visibility='default' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='741' column='1' id='type-id-139'>
            <data-member access='public' layout-offset-in-bits='0'>
              <!-- boost::filesystem::directory_entry boost::filesystem::detail::dir_itr_imp::dir_entry -->
              <var-decl name='dir_entry' type-id='type-id-140' visibility='default' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='743' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='192'>
              <!-- void* boost::filesystem::detail::dir_itr_imp::handle -->
              <var-decl name='handle' type-id='type-id-55' visibility='default' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='744' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='256'>
              <!-- void* boost::filesystem::detail::dir_itr_imp::buffer -->
              <var-decl name='buffer' type-id='type-id-55' visibility='default' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='747' column='1'/>
            </data-member>
            <member-function access='public' constructor='yes'>
              <!-- boost::filesystem::detail::dir_itr_imp::dir_itr_imp() -->
              <function-decl name='dir_itr_imp' mangled-name='_ZN5boost10filesystem6detail11dir_itr_impC2Ev' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='750' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail11dir_itr_impC2Ev'>
                <!-- implicit parameter of type 'boost::filesystem::detail::dir_itr_imp*' -->
                <parameter type-id='type-id-141' is-artificial='yes'/>
                <!-- void -->
                <return type-id='type-id-8'/>
              </function-decl>
            </member-function>
            <member-function access='public' destructor='yes'>
              <!-- boost::filesystem::detail::dir_itr_imp::~dir_itr_imp() -->
              <function-decl name='~dir_itr_imp' mangled-name='_ZN5boost10filesystem6detail11dir_itr_impD2Ev' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='756' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail11dir_itr_impD2Ev'>
                <!-- implicit parameter of type 'boost::filesystem::detail::dir_itr_imp*' -->
                <parameter type-id='type-id-141' is-artificial='yes'/>
                <!-- void -->
                <return type-id='type-id-8'/>
              </function-decl>
            </member-function>
          </class-decl>
          <!-- boost::filesystem::path boost::filesystem::detail::initial_path(boost::system::error_code*) -->
          <function-decl name='initial_path' mangled-name='_ZN5boost10filesystem6detail12initial_pathEPNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1266' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail12initial_pathEPNS_6system10error_codeE'>
            <!-- parameter of type 'boost::system::error_code*' -->
            <parameter type-id='type-id-20' name='ec' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1266' column='1'/>
            <!-- class boost::filesystem::path -->
            <return type-id='type-id-142'/>
          </function-decl>
          <!-- bool boost::filesystem::detail::possible_large_file_size_support() -->
          <function-decl name='possible_large_file_size_support' mangled-name='_ZN5boost10filesystem6detail32possible_large_file_size_supportEv' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='764' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail32possible_large_file_size_supportEv'>
            <!-- bool -->
            <return type-id='type-id-11'/>
          </function-decl>
          <!-- boost::filesystem::path boost::filesystem::detail::canonical(const boost::filesystem::path&, const boost::filesystem::path&, boost::system::error_code*) -->
          <function-decl name='canonical' mangled-name='_ZN5boost10filesystem6detail9canonicalERKNS0_4pathES4_PNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='775' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail9canonicalERKNS0_4pathES4_PNS_6system10error_codeE'>
            <!-- parameter of type 'const boost::filesystem::path&' -->
            <parameter type-id='type-id-143' name='p' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='775' column='1'/>
            <!-- parameter of type 'const boost::filesystem::path&' -->
            <parameter type-id='type-id-143' name='base' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='775' column='1'/>
            <!-- parameter of type 'boost::system::error_code*' -->
            <parameter type-id='type-id-20' name='ec' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='775' column='1'/>
            <!-- class boost::filesystem::path -->
            <return type-id='type-id-142'/>
          </function-decl>
          <!-- boost::filesystem::file_status boost::filesystem::detail::symlink_status(const boost::filesystem::path&, boost::system::error_code*) -->
          <function-decl name='symlink_status' mangled-name='_ZN5boost10filesystem6detail14symlink_statusERKNS0_4pathEPNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1688' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail14symlink_statusERKNS0_4pathEPNS_6system10error_codeE'>
            <!-- parameter of type 'const boost::filesystem::path&' -->
            <parameter type-id='type-id-143' name='p' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1688' column='1'/>
            <!-- parameter of type 'boost::system::error_code*' -->
            <parameter type-id='type-id-20' name='ec' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1688' column='1'/>
            <!-- class boost::filesystem::file_status -->
            <return type-id='type-id-144'/>
          </function-decl>
          <!-- boost::filesystem::path boost::filesystem::detail::read_symlink(const boost::filesystem::path&, boost::system::error_code*) -->
          <function-decl name='read_symlink' mangled-name='_ZN5boost10filesystem6detail12read_symlinkERKNS0_4pathEPNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1458' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail12read_symlinkERKNS0_4pathEPNS_6system10error_codeE'>
            <!-- parameter of type 'const boost::filesystem::path&' -->
            <parameter type-id='type-id-143' name='p' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1458' column='1'/>
            <!-- parameter of type 'boost::system::error_code*' -->
            <parameter type-id='type-id-20' name='ec' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1458' column='1'/>
            <!-- class boost::filesystem::path -->
            <return type-id='type-id-142'/>
          </function-decl>
          <!-- void boost::filesystem::detail::copy(const boost::filesystem::path&, const boost::filesystem::path&, boost::system::error_code*) -->
          <function-decl name='copy' mangled-name='_ZN5boost10filesystem6detail4copyERKNS0_4pathES4_PNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='857' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail4copyERKNS0_4pathES4_PNS_6system10error_codeE'>
            <!-- parameter of type 'const boost::filesystem::path&' -->
            <parameter type-id='type-id-143' name='from' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='857' column='1'/>
            <!-- parameter of type 'const boost::filesystem::path&' -->
            <parameter type-id='type-id-143' name='to' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='857' column='1'/>
            <!-- parameter of type 'boost::system::error_code*' -->
            <parameter type-id='type-id-20' name='ec' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='857' column='1'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
          <!-- void boost::filesystem::detail::copy_directory(const boost::filesystem::path&, const boost::filesystem::path&, boost::system::error_code*) -->
          <function-decl name='copy_directory' mangled-name='_ZN5boost10filesystem6detail14copy_directoryERKNS0_4pathES4_PNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='884' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail14copy_directoryERKNS0_4pathES4_PNS_6system10error_codeE'>
            <!-- parameter of type 'const boost::filesystem::path&' -->
            <parameter type-id='type-id-143' name='from' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='857' column='1'/>
            <!-- parameter of type 'const boost::filesystem::path&' -->
            <parameter type-id='type-id-143' name='to' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='857' column='1'/>
            <!-- parameter of type 'boost::system::error_code*' -->
            <parameter type-id='type-id-20' name='ec' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='857' column='1'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
          <!-- void boost::filesystem::detail::copy_file(const boost::filesystem::path&, const boost::filesystem::path&, boost::filesystem::copy_option, boost::system::error_code*) -->
          <function-decl name='copy_file' mangled-name='_ZN5boost10filesystem6detail9copy_fileERKNS0_4pathES4_NS0_11copy_optionEPNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='894' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail9copy_fileERKNS0_4pathES4_NS0_11copy_optionEPNS_6system10error_codeE'>
            <!-- parameter of type 'const boost::filesystem::path&' -->
            <parameter type-id='type-id-143' name='from' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='894' column='1'/>
            <!-- parameter of type 'const boost::filesystem::path&' -->
            <parameter type-id='type-id-143' name='to' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='894' column='1'/>
            <!-- parameter of type 'enum boost::filesystem::copy_option' -->
            <parameter type-id='type-id-145' name='option' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='895' column='1'/>
            <!-- parameter of type 'boost::system::error_code*' -->
            <parameter type-id='type-id-20' name='ec' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='896' column='1'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
          <!-- void boost::filesystem::detail::copy_symlink(const boost::filesystem::path&, const boost::filesystem::path&, boost::system::error_code*) -->
          <function-decl name='copy_symlink' mangled-name='_ZN5boost10filesystem6detail12copy_symlinkERKNS0_4pathES4_PNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='904' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail12copy_symlinkERKNS0_4pathES4_PNS_6system10error_codeE'>
            <!-- parameter of type 'const boost::filesystem::path&' -->
            <parameter type-id='type-id-143' name='from' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='857' column='1'/>
            <!-- parameter of type 'const boost::filesystem::path&' -->
            <parameter type-id='type-id-143' name='to' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='857' column='1'/>
            <!-- parameter of type 'boost::system::error_code*' -->
            <parameter type-id='type-id-20' name='ec' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='857' column='1'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
          <!-- void boost::filesystem::detail::create_symlink(const boost::filesystem::path&, const boost::filesystem::path&, boost::system::error_code*) -->
          <function-decl name='create_symlink' mangled-name='_ZN5boost10filesystem6detail14create_symlinkERKNS0_4pathES4_PNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1038' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail14create_symlinkERKNS0_4pathES4_PNS_6system10error_codeE'>
            <!-- parameter of type 'const boost::filesystem::path&' -->
            <parameter type-id='type-id-143' name='from' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='857' column='1'/>
            <!-- parameter of type 'const boost::filesystem::path&' -->
            <parameter type-id='type-id-143' name='to' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='857' column='1'/>
            <!-- parameter of type 'boost::system::error_code*' -->
            <parameter type-id='type-id-20' name='ec' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='857' column='1'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
          <!-- bool boost::filesystem::detail::create_directories(const boost::filesystem::path&, boost::system::error_code*) -->
          <function-decl name='create_directories' mangled-name='_ZN5boost10filesystem6detail18create_directoriesERKNS0_4pathEPNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='921' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail18create_directoriesERKNS0_4pathEPNS_6system10error_codeE'>
            <!-- parameter of type 'const boost::filesystem::path&' -->
            <parameter type-id='type-id-143' name='p' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='921' column='1'/>
            <!-- parameter of type 'boost::system::error_code*' -->
            <parameter type-id='type-id-20' name='ec' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='921' column='1'/>
            <!-- bool -->
            <return type-id='type-id-11'/>
          </function-decl>
          <!-- bool boost::filesystem::detail::create_directory(const boost::filesystem::path&, boost::system::error_code*) -->
          <function-decl name='create_directory' mangled-name='_ZN5boost10filesystem6detail16create_directoryERKNS0_4pathEPNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='961' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail16create_directoryERKNS0_4pathEPNS_6system10error_codeE'>
            <!-- parameter of type 'const boost::filesystem::path&' -->
            <parameter type-id='type-id-143' name='p' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='921' column='1'/>
            <!-- parameter of type 'boost::system::error_code*' -->
            <parameter type-id='type-id-20' name='ec' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='921' column='1'/>
            <!-- bool -->
            <return type-id='type-id-11'/>
          </function-decl>
          <!-- void boost::filesystem::detail::create_directory_symlink(const boost::filesystem::path&, const boost::filesystem::path&, boost::system::error_code*) -->
          <function-decl name='create_directory_symlink' mangled-name='_ZN5boost10filesystem6detail24create_directory_symlinkERKNS0_4pathES4_PNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='990' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail24create_directory_symlinkERKNS0_4pathES4_PNS_6system10error_codeE'>
            <!-- parameter of type 'const boost::filesystem::path&' -->
            <parameter type-id='type-id-143' name='from' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='857' column='1'/>
            <!-- parameter of type 'const boost::filesystem::path&' -->
            <parameter type-id='type-id-143' name='to' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='857' column='1'/>
            <!-- parameter of type 'boost::system::error_code*' -->
            <parameter type-id='type-id-20' name='ec' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='857' column='1'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
          <!-- void boost::filesystem::detail::create_hard_link(const boost::filesystem::path&, const boost::filesystem::path&, boost::system::error_code*) -->
          <function-decl name='create_hard_link' mangled-name='_ZN5boost10filesystem6detail16create_hard_linkERKNS0_4pathES4_PNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1014' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail16create_hard_linkERKNS0_4pathES4_PNS_6system10error_codeE'>
            <!-- parameter of type 'const boost::filesystem::path&' -->
            <parameter type-id='type-id-143' name='from' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='857' column='1'/>
            <!-- parameter of type 'const boost::filesystem::path&' -->
            <parameter type-id='type-id-143' name='to' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='857' column='1'/>
            <!-- parameter of type 'boost::system::error_code*' -->
            <parameter type-id='type-id-20' name='ec' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='857' column='1'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
          <!-- boost::filesystem::path boost::filesystem::detail::current_path(boost::system::error_code*) -->
          <function-decl name='current_path' mangled-name='_ZN5boost10filesystem6detail12current_pathEPNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1060' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail12current_pathEPNS_6system10error_codeE'>
            <!-- parameter of type 'boost::system::error_code*' -->
            <parameter type-id='type-id-20' name='ec' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1266' column='1'/>
            <!-- class boost::filesystem::path -->
            <return type-id='type-id-142'/>
          </function-decl>
          <!-- void boost::filesystem::detail::current_path(const boost::filesystem::path&, boost::system::error_code*) -->
          <function-decl name='current_path' mangled-name='_ZN5boost10filesystem6detail12current_pathERKNS0_4pathEPNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1101' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail12current_pathERKNS0_4pathEPNS_6system10error_codeE'>
            <!-- parameter of type 'const boost::filesystem::path&' -->
            <parameter type-id='type-id-143' name='p' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1101' column='1'/>
            <!-- parameter of type 'boost::system::error_code*' -->
            <parameter type-id='type-id-20' name='ec' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1101' column='1'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
          <!-- bool boost::filesystem::detail::equivalent(const boost::filesystem::path&, const boost::filesystem::path&, boost::system::error_code*) -->
          <function-decl name='equivalent' mangled-name='_ZN5boost10filesystem6detail10equivalentERKNS0_4pathES4_PNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1108' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail10equivalentERKNS0_4pathES4_PNS_6system10error_codeE'>
            <!-- parameter of type 'const boost::filesystem::path&' -->
            <parameter type-id='type-id-143' name='p1' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1108' column='1'/>
            <!-- parameter of type 'const boost::filesystem::path&' -->
            <parameter type-id='type-id-143' name='p2' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1108' column='1'/>
            <!-- parameter of type 'boost::system::error_code*' -->
            <parameter type-id='type-id-20' name='ec' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1108' column='1'/>
            <!-- bool -->
            <return type-id='type-id-11'/>
          </function-decl>
          <!-- uintmax_t boost::filesystem::detail::file_size(const boost::filesystem::path&, boost::system::error_code*) -->
          <function-decl name='file_size' mangled-name='_ZN5boost10filesystem6detail9file_sizeERKNS0_4pathEPNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1201' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail9file_sizeERKNS0_4pathEPNS_6system10error_codeE'>
            <!-- parameter of type 'const boost::filesystem::path&' -->
            <parameter type-id='type-id-143' name='p' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1201' column='1'/>
            <!-- parameter of type 'boost::system::error_code*' -->
            <parameter type-id='type-id-20' name='ec' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1201' column='1'/>
            <!-- typedef uintmax_t -->
            <return type-id='type-id-146'/>
          </function-decl>
          <!-- uintmax_t boost::filesystem::detail::hard_link_count(const boost::filesystem::path&, boost::system::error_code*) -->
          <function-decl name='hard_link_count' mangled-name='_ZN5boost10filesystem6detail15hard_link_countERKNS0_4pathEPNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1237' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail15hard_link_countERKNS0_4pathEPNS_6system10error_codeE'>
            <!-- parameter of type 'const boost::filesystem::path&' -->
            <parameter type-id='type-id-143' name='p' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1201' column='1'/>
            <!-- parameter of type 'boost::system::error_code*' -->
            <parameter type-id='type-id-20' name='ec' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1201' column='1'/>
            <!-- typedef uintmax_t -->
            <return type-id='type-id-146'/>
          </function-decl>
          <!-- bool boost::filesystem::detail::is_empty(const boost::filesystem::path&, boost::system::error_code*) -->
          <function-decl name='is_empty' mangled-name='_ZN5boost10filesystem6detail8is_emptyERKNS0_4pathEPNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1276' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail8is_emptyERKNS0_4pathEPNS_6system10error_codeE'>
            <!-- parameter of type 'const boost::filesystem::path&' -->
            <parameter type-id='type-id-143' name='p' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='921' column='1'/>
            <!-- parameter of type 'boost::system::error_code*' -->
            <parameter type-id='type-id-20' name='ec' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='921' column='1'/>
            <!-- bool -->
            <return type-id='type-id-11'/>
          </function-decl>
          <!-- time_t boost::filesystem::detail::last_write_time(const boost::filesystem::path&, boost::system::error_code*) -->
          <function-decl name='last_write_time' mangled-name='_ZN5boost10filesystem6detail15last_write_timeERKNS0_4pathEPNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1303' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail15last_write_timeERKNS0_4pathEPNS_6system10error_codeE'>
            <!-- parameter of type 'const boost::filesystem::path&' -->
            <parameter type-id='type-id-143' name='p' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1303' column='1'/>
            <!-- parameter of type 'boost::system::error_code*' -->
            <parameter type-id='type-id-20' name='ec' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1303' column='1'/>
            <!-- typedef time_t -->
            <return type-id='type-id-128'/>
          </function-decl>
          <!-- void boost::filesystem::detail::last_write_time(const boost::filesystem::path&, const time_t, boost::system::error_code*) -->
          <function-decl name='last_write_time' mangled-name='_ZN5boost10filesystem6detail15last_write_timeERKNS0_4pathElPNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1335' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail15last_write_timeERKNS0_4pathElPNS_6system10error_codeE'>
            <!-- parameter of type 'const boost::filesystem::path&' -->
            <parameter type-id='type-id-143' name='p' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1335' column='1'/>
            <!-- parameter of type 'const time_t' -->
            <parameter type-id='type-id-131' name='new_time' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1335' column='1'/>
            <!-- parameter of type 'boost::system::error_code*' -->
            <parameter type-id='type-id-20' name='ec' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1336' column='1'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
          <!-- void boost::filesystem::detail::permissions(const boost::filesystem::path&, boost::filesystem::perms, boost::system::error_code*) -->
          <function-decl name='permissions' mangled-name='_ZN5boost10filesystem6detail11permissionsERKNS0_4pathENS0_5permsEPNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1375' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail11permissionsERKNS0_4pathENS0_5permsEPNS_6system10error_codeE'>
            <!-- parameter of type 'const boost::filesystem::path&' -->
            <parameter type-id='type-id-143' name='p' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1375' column='1'/>
            <!-- parameter of type 'enum boost::filesystem::perms' -->
            <parameter type-id='type-id-147' name='prms' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1375' column='1'/>
            <!-- parameter of type 'boost::system::error_code*' -->
            <parameter type-id='type-id-20' name='ec' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1375' column='1'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
          <!-- mode_t boost::filesystem::detail::mode_cast(boost::filesystem::perms) -->
          <function-decl name='mode_cast' mangled-name='_ZN5boost10filesystem6detail9mode_castENS0_5permsE' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1371' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail9mode_castENS0_5permsE'>
            <!-- parameter of type 'enum boost::filesystem::perms' -->
            <parameter type-id='type-id-147' name='prms' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1371' column='1'/>
            <!-- typedef mode_t -->
            <return type-id='type-id-148'/>
          </function-decl>
          <!-- bool boost::filesystem::detail::remove(const boost::filesystem::path&, boost::system::error_code*) -->
          <function-decl name='remove' mangled-name='_ZN5boost10filesystem6detail6removeERKNS0_4pathEPNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1521' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail6removeERKNS0_4pathEPNS_6system10error_codeE'>
            <!-- parameter of type 'const boost::filesystem::path&' -->
            <parameter type-id='type-id-143' name='p' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='921' column='1'/>
            <!-- parameter of type 'boost::system::error_code*' -->
            <parameter type-id='type-id-20' name='ec' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='921' column='1'/>
            <!-- bool -->
            <return type-id='type-id-11'/>
          </function-decl>
          <!-- uintmax_t boost::filesystem::detail::remove_all(const boost::filesystem::path&, boost::system::error_code*) -->
          <function-decl name='remove_all' mangled-name='_ZN5boost10filesystem6detail10remove_allERKNS0_4pathEPNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1537' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail10remove_allERKNS0_4pathEPNS_6system10error_codeE'>
            <!-- parameter of type 'const boost::filesystem::path&' -->
            <parameter type-id='type-id-143' name='p' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1201' column='1'/>
            <!-- parameter of type 'boost::system::error_code*' -->
            <parameter type-id='type-id-20' name='ec' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1201' column='1'/>
            <!-- typedef uintmax_t -->
            <return type-id='type-id-146'/>
          </function-decl>
          <!-- void boost::filesystem::detail::rename(const boost::filesystem::path&, const boost::filesystem::path&, boost::system::error_code*) -->
          <function-decl name='rename' mangled-name='_ZN5boost10filesystem6detail6renameERKNS0_4pathES4_PNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1551' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail6renameERKNS0_4pathES4_PNS_6system10error_codeE'>
            <!-- parameter of type 'const boost::filesystem::path&' -->
            <parameter type-id='type-id-143' name='from' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='857' column='1'/>
            <!-- parameter of type 'const boost::filesystem::path&' -->
            <parameter type-id='type-id-143' name='to' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='857' column='1'/>
            <!-- parameter of type 'boost::system::error_code*' -->
            <parameter type-id='type-id-20' name='ec' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='857' column='1'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
          <!-- void boost::filesystem::detail::resize_file(const boost::filesystem::path&, uintmax_t, boost::system::error_code*) -->
          <function-decl name='resize_file' mangled-name='_ZN5boost10filesystem6detail11resize_fileERKNS0_4pathEmPNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1558' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail11resize_fileERKNS0_4pathEmPNS_6system10error_codeE'>
            <!-- parameter of type 'const boost::filesystem::path&' -->
            <parameter type-id='type-id-143' name='p' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1558' column='1'/>
            <!-- parameter of type 'typedef uintmax_t' -->
            <parameter type-id='type-id-146' name='size' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1558' column='1'/>
            <!-- parameter of type 'boost::system::error_code*' -->
            <parameter type-id='type-id-20' name='ec' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1558' column='1'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
          <!-- boost::filesystem::space_info boost::filesystem::detail::space(const boost::filesystem::path&, boost::system::error_code*) -->
          <function-decl name='space' mangled-name='_ZN5boost10filesystem6detail5spaceERKNS0_4pathEPNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1564' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail5spaceERKNS0_4pathEPNS_6system10error_codeE'>
            <!-- parameter of type 'const boost::filesystem::path&' -->
            <parameter type-id='type-id-143' name='p' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1564' column='1'/>
            <!-- parameter of type 'boost::system::error_code*' -->
            <parameter type-id='type-id-20' name='ec' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1564' column='1'/>
            <!-- struct boost::filesystem::space_info -->
            <return type-id='type-id-149'/>
          </function-decl>
          <!-- boost::filesystem::file_status boost::filesystem::detail::status(const boost::filesystem::path&, boost::system::error_code*) -->
          <function-decl name='status' mangled-name='_ZN5boost10filesystem6detail6statusERKNS0_4pathEPNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1608' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail6statusERKNS0_4pathEPNS_6system10error_codeE'>
            <!-- parameter of type 'const boost::filesystem::path&' -->
            <parameter type-id='type-id-143' name='p' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1688' column='1'/>
            <!-- parameter of type 'boost::system::error_code*' -->
            <parameter type-id='type-id-20' name='ec' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1688' column='1'/>
            <!-- class boost::filesystem::file_status -->
            <return type-id='type-id-144'/>
          </function-decl>
          <!-- boost::filesystem::path boost::filesystem::detail::temp_directory_path(boost::system::error_code*) -->
          <function-decl name='temp_directory_path' mangled-name='_ZN5boost10filesystem6detail19temp_directory_pathEPNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1755' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail19temp_directory_pathEPNS_6system10error_codeE'>
            <!-- parameter of type 'boost::system::error_code*' -->
            <parameter type-id='type-id-20' name='ec' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1266' column='1'/>
            <!-- class boost::filesystem::path -->
            <return type-id='type-id-142'/>
          </function-decl>
          <!-- boost::filesystem::path boost::filesystem::detail::system_complete(const boost::filesystem::path&, boost::system::error_code*) -->
          <function-decl name='system_complete' mangled-name='_ZN5boost10filesystem6detail15system_completeERKNS0_4pathEPNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1803' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail15system_completeERKNS0_4pathEPNS_6system10error_codeE'>
            <!-- parameter of type 'const boost::filesystem::path&' -->
            <parameter type-id='type-id-143' name='p' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1458' column='1'/>
            <!-- parameter of type 'boost::system::error_code*' -->
            <parameter type-id='type-id-20' name='ec' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1458' column='1'/>
            <!-- class boost::filesystem::path -->
            <return type-id='type-id-142'/>
          </function-decl>
          <!-- boost::system::error_code boost::filesystem::detail::dir_itr_close(void*&, void*&) -->
          <function-decl name='dir_itr_close' mangled-name='_ZN5boost10filesystem6detail13dir_itr_closeERPvS3_' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='2120' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail13dir_itr_closeERPvS3_'>
            <!-- parameter of type 'void*&' -->
            <parameter type-id='type-id-150' name='handle' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='2121' column='1'/>
            <!-- parameter of type 'void*&' -->
            <parameter type-id='type-id-150' name='buffer' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='2123' column='1'/>
            <!-- class boost::system::error_code -->
            <return type-id='type-id-18'/>
          </function-decl>
          <!-- void boost::filesystem::detail::directory_iterator_construct(boost::filesystem::directory_iterator&, const boost::filesystem::path&, boost::system::error_code*) -->
          <function-decl name='directory_iterator_construct' mangled-name='_ZN5boost10filesystem6detail28directory_iterator_constructERNS0_18directory_iteratorERKNS0_4pathEPNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='2146' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail28directory_iterator_constructERNS0_18directory_iteratorERKNS0_4pathEPNS_6system10error_codeE'>
            <!-- parameter of type 'boost::filesystem::directory_iterator&' -->
            <parameter type-id='type-id-151' name='it' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='2146' column='1'/>
            <!-- parameter of type 'const boost::filesystem::path&' -->
            <parameter type-id='type-id-143' name='p' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='2147' column='1'/>
            <!-- parameter of type 'boost::system::error_code*' -->
            <parameter type-id='type-id-20' name='ec' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='2147' column='1'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
          <!-- void boost::filesystem::detail::directory_iterator_increment(boost::filesystem::directory_iterator&, boost::system::error_code*) -->
          <function-decl name='directory_iterator_increment' mangled-name='_ZN5boost10filesystem6detail28directory_iterator_incrementERNS0_18directory_iteratorEPNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='2182' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail28directory_iterator_incrementERNS0_18directory_iteratorEPNS_6system10error_codeE'>
            <!-- parameter of type 'boost::filesystem::directory_iterator&' -->
            <parameter type-id='type-id-151' name='it' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='2182' column='1'/>
            <!-- parameter of type 'boost::system::error_code*' -->
            <parameter type-id='type-id-20' name='ec' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='2183' column='1'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </namespace-decl>
        <!-- class boost::filesystem::path -->
        <class-decl name='path' size-in-bits='64' visibility='default' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='55' column='1' id='type-id-142'>
          <member-type access='private'>
            <!-- typedef char boost::filesystem::path::value_type -->
            <typedef-decl name='value_type' type-id='type-id-27' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='66' column='1' id='type-id-152'/>
          </member-type>
          <member-type access='private'>
            <!-- typedef std::basic_string<char, std::char_traits<char>, std::allocator<char> > boost::filesystem::path::string_type -->
            <typedef-decl name='string_type' type-id='type-id-30' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='69' column='1' id='type-id-153'/>
          </member-type>
          <member-type access='private'>
            <!-- typedef std::codecvt<wchar_t, char, __mbstate_t> boost::filesystem::path::codecvt_type -->
            <typedef-decl name='codecvt_type' type-id='type-id-155' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='71' column='1' id='type-id-154'/>
          </member-type>
          <member-type access='private'>
            <!-- class boost::filesystem::path::iterator -->
            <class-decl name='iterator' size-in-bits='192' visibility='default' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='569' column='1' id='type-id-156'>
            <!-- class boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long> -->
              <base-class access='public' layout-offset-in-bits='0' type-id='type-id-157'/>
              <data-member access='private' layout-offset-in-bits='0'>
                <!-- boost::filesystem::path boost::filesystem::path::iterator::m_element -->
                <var-decl name='m_element' type-id='type-id-142' visibility='default' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='593' column='1'/>
              </data-member>
              <data-member access='private' layout-offset-in-bits='64'>
                <!-- const boost::filesystem::path* boost::filesystem::path::iterator::m_path_ptr -->
                <var-decl name='m_path_ptr' type-id='type-id-158' visibility='default' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='594' column='1'/>
              </data-member>
              <data-member access='private' layout-offset-in-bits='128'>
                <!-- std::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type boost::filesystem::path::iterator::m_pos -->
                <var-decl name='m_pos' type-id='type-id-31' visibility='default' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='595' column='1'/>
              </data-member>
              <member-function access='private'>
                <!-- const boost::filesystem::path& boost::filesystem::path::iterator::dereference() -->
                <function-decl name='dereference' mangled-name='_ZNK5boost10filesystem4path8iterator11dereferenceEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='581' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10filesystem4path8iterator11dereferenceEv'>
                  <!-- implicit parameter of type 'const boost::filesystem::path::iterator*' -->
                  <parameter type-id='type-id-159' is-artificial='yes'/>
                  <!-- const boost::filesystem::path& -->
                  <return type-id='type-id-143'/>
                </function-decl>
              </member-function>
              <member-function access='private'>
                <!-- bool boost::filesystem::path::iterator::equal(const boost::filesystem::path::iterator&) -->
                <function-decl name='equal' mangled-name='_ZNK5boost10filesystem4path8iterator5equalERKS2_' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='583' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10filesystem4path8iterator5equalERKS2_'>
                  <!-- implicit parameter of type 'const boost::filesystem::path::iterator*' -->
                  <parameter type-id='type-id-159' is-artificial='yes'/>
                  <!-- parameter of type 'const boost::filesystem::path::iterator&' -->
                  <parameter type-id='type-id-160'/>
                  <!-- bool -->
                  <return type-id='type-id-11'/>
                </function-decl>
              </member-function>
              <member-function access='private'>
                <!-- void boost::filesystem::path::iterator::increment() -->
                <function-decl name='increment' mangled-name='_ZN5boost10filesystem4path8iterator9incrementEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='590' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem4path8iterator9incrementEv'>
                  <!-- implicit parameter of type 'boost::filesystem::path::iterator*' -->
                  <parameter type-id='type-id-161' is-artificial='yes'/>
                  <!-- void -->
                  <return type-id='type-id-8'/>
                </function-decl>
              </member-function>
              <member-function access='private'>
                <!-- void boost::filesystem::path::iterator::decrement() -->
                <function-decl name='decrement' mangled-name='_ZN5boost10filesystem4path8iterator9decrementEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='591' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem4path8iterator9decrementEv'>
                  <!-- implicit parameter of type 'boost::filesystem::path::iterator*' -->
                  <parameter type-id='type-id-161' is-artificial='yes'/>
                  <!-- void -->
                  <return type-id='type-id-8'/>
                </function-decl>
              </member-function>
            </class-decl>
          </member-type>
          <data-member access='public' static='yes'>
            <!-- static const boost::filesystem::path::value_type boost::filesystem::path::preferred_separator -->
            <var-decl name='preferred_separator' type-id='type-id-162' visibility='default' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='67' column='1'/>
          </data-member>
          <data-member access='private' layout-offset-in-bits='0'>
            <!-- boost::filesystem::path::string_type boost::filesystem::path::m_pathname -->
            <var-decl name='m_pathname' type-id='type-id-153' visibility='default' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='528' column='1'/>
          </data-member>
          <member-function access='public' constructor='yes'>
            <!-- boost::filesystem::path::path() -->
            <function-decl name='path' mangled-name='_ZN5boost10filesystem4pathC2Ev' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='130' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem4pathC2Ev'>
              <!-- implicit parameter of type 'boost::filesystem::path*' -->
              <parameter type-id='type-id-163' is-artificial='yes'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public' constructor='yes'>
            <!-- boost::filesystem::path::path(const boost::filesystem::path&) -->
            <function-decl name='path' mangled-name='_ZN5boost10filesystem4pathC2ERKS1_' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='132' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem4pathC2ERKS1_'>
              <!-- implicit parameter of type 'boost::filesystem::path*' -->
              <parameter type-id='type-id-163' is-artificial='yes'/>
              <!-- parameter of type 'const boost::filesystem::path&' -->
              <parameter type-id='type-id-143'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public' constructor='yes'>
            <!-- boost::filesystem::path::path(const boost::filesystem::path::value_type*) -->
            <function-decl name='path' mangled-name='_ZN5boost10filesystem4pathC2EPKc' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='150' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem4pathC2EPKc'>
              <!-- implicit parameter of type 'boost::filesystem::path*' -->
              <parameter type-id='type-id-163' is-artificial='yes'/>
              <!-- parameter of type 'const boost::filesystem::path::value_type*' -->
              <parameter type-id='type-id-164'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public' constructor='yes'>
            <!-- boost::filesystem::path::path(const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&) -->
            <function-decl name='path' mangled-name='_ZN5boost10filesystem4pathC2ERKSs' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='151' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem4pathC2ERKSs'>
              <!-- implicit parameter of type 'boost::filesystem::path*' -->
              <parameter type-id='type-id-163' is-artificial='yes'/>
              <!-- parameter of type 'const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&' -->
              <parameter type-id='type-id-165'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::filesystem::path& boost::filesystem::path::operator=(const boost::filesystem::path&) -->
            <function-decl name='operator=' mangled-name='_ZN5boost10filesystem4pathaSERKS1_' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='184' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem4pathaSERKS1_'>
              <!-- implicit parameter of type 'boost::filesystem::path*' -->
              <parameter type-id='type-id-163' is-artificial='yes'/>
              <!-- parameter of type 'const boost::filesystem::path&' -->
              <parameter type-id='type-id-143'/>
              <!-- boost::filesystem::path& -->
              <return type-id='type-id-166'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::filesystem::path& boost::filesystem::path::operator=(const boost::filesystem::path::value_type*) -->
            <function-decl name='operator=' mangled-name='_ZN5boost10filesystem4pathaSEPKc' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='190' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::filesystem::path*' -->
              <parameter type-id='type-id-163' is-artificial='yes'/>
              <!-- parameter of type 'const boost::filesystem::path::value_type*' -->
              <parameter type-id='type-id-164'/>
              <!-- boost::filesystem::path& -->
              <return type-id='type-id-166'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::filesystem::path& boost::filesystem::path::assign(const boost::filesystem::path::value_type*, const boost::filesystem::path::codecvt_type&) -->
            <function-decl name='assign' mangled-name='_ZN5boost10filesystem4path6assignEPKcRKSt7codecvtIwc11__mbstate_tE' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='206' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::filesystem::path*' -->
              <parameter type-id='type-id-163' is-artificial='yes'/>
              <!-- parameter of type 'const boost::filesystem::path::value_type*' -->
              <parameter type-id='type-id-164'/>
              <!-- parameter of type 'const boost::filesystem::path::codecvt_type&' -->
              <parameter type-id='type-id-167'/>
              <!-- boost::filesystem::path& -->
              <return type-id='type-id-166'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::filesystem::path& boost::filesystem::path::operator+=(const boost::filesystem::path&) -->
            <function-decl name='operator+=' mangled-name='_ZN5boost10filesystem4pathpLERKS1_' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='241' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::filesystem::path*' -->
              <parameter type-id='type-id-163' is-artificial='yes'/>
              <!-- parameter of type 'const boost::filesystem::path&' -->
              <parameter type-id='type-id-143'/>
              <!-- boost::filesystem::path& -->
              <return type-id='type-id-166'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::filesystem::path& boost::filesystem::path::operator+=(const boost::filesystem::path::string_type&) -->
            <function-decl name='operator+=' mangled-name='_ZN5boost10filesystem4pathpLERKSs' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='242' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::filesystem::path*' -->
              <parameter type-id='type-id-163' is-artificial='yes'/>
              <!-- parameter of type 'const boost::filesystem::path::string_type&' -->
              <parameter type-id='type-id-168'/>
              <!-- boost::filesystem::path& -->
              <return type-id='type-id-166'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::filesystem::path& boost::filesystem::path::operator+=(const boost::filesystem::path::value_type*) -->
            <function-decl name='operator+=' mangled-name='_ZN5boost10filesystem4pathpLEPKc' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='243' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::filesystem::path*' -->
              <parameter type-id='type-id-163' is-artificial='yes'/>
              <!-- parameter of type 'const boost::filesystem::path::value_type*' -->
              <parameter type-id='type-id-164'/>
              <!-- boost::filesystem::path& -->
              <return type-id='type-id-166'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::filesystem::path& boost::filesystem::path::operator+=(boost::filesystem::path::value_type) -->
            <function-decl name='operator+=' mangled-name='_ZN5boost10filesystem4pathpLEc' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='244' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::filesystem::path*' -->
              <parameter type-id='type-id-163' is-artificial='yes'/>
              <!-- parameter of type 'typedef boost::filesystem::path::value_type' -->
              <parameter type-id='type-id-152'/>
              <!-- boost::filesystem::path& -->
              <return type-id='type-id-166'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::filesystem::path& boost::filesystem::path::operator/=(const boost::filesystem::path&) -->
            <function-decl name='operator/=' mangled-name='_ZN5boost10filesystem4pathdVERKS1_' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='293' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem4pathdVERKS1_'>
              <!-- implicit parameter of type 'boost::filesystem::path*' -->
              <parameter type-id='type-id-163' is-artificial='yes'/>
              <!-- parameter of type 'const boost::filesystem::path&' -->
              <parameter type-id='type-id-143'/>
              <!-- boost::filesystem::path& -->
              <return type-id='type-id-166'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::filesystem::path& boost::filesystem::path::operator/=(const boost::filesystem::path::value_type*) -->
            <function-decl name='operator/=' mangled-name='_ZN5boost10filesystem4pathdVEPKc' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='295' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem4pathdVEPKc'>
              <!-- implicit parameter of type 'boost::filesystem::path*' -->
              <parameter type-id='type-id-163' is-artificial='yes'/>
              <!-- parameter of type 'const boost::filesystem::path::value_type*' -->
              <parameter type-id='type-id-164'/>
              <!-- boost::filesystem::path& -->
              <return type-id='type-id-166'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::filesystem::path& boost::filesystem::path::append(const boost::filesystem::path::value_type*, const boost::filesystem::path::codecvt_type&) -->
            <function-decl name='append' mangled-name='_ZN5boost10filesystem4path6appendEPKcRKSt7codecvtIwc11__mbstate_tE' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='305' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::filesystem::path*' -->
              <parameter type-id='type-id-163' is-artificial='yes'/>
              <!-- parameter of type 'const boost::filesystem::path::value_type*' -->
              <parameter type-id='type-id-164'/>
              <!-- parameter of type 'const boost::filesystem::path::codecvt_type&' -->
              <parameter type-id='type-id-167'/>
              <!-- boost::filesystem::path& -->
              <return type-id='type-id-166'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- void boost::filesystem::path::clear() -->
            <function-decl name='clear' mangled-name='_ZN5boost10filesystem4path5clearEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='325' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem4path5clearEv'>
              <!-- implicit parameter of type 'boost::filesystem::path*' -->
              <parameter type-id='type-id-163' is-artificial='yes'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::filesystem::path& boost::filesystem::path::make_preferred() -->
            <function-decl name='make_preferred' mangled-name='_ZN5boost10filesystem4path14make_preferredEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='326' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::filesystem::path*' -->
              <parameter type-id='type-id-163' is-artificial='yes'/>
              <!-- boost::filesystem::path& -->
              <return type-id='type-id-166'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::filesystem::path& boost::filesystem::path::remove_filename() -->
            <function-decl name='remove_filename' mangled-name='_ZN5boost10filesystem4path15remove_filenameEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='332' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem4path15remove_filenameEv'>
              <!-- implicit parameter of type 'boost::filesystem::path*' -->
              <parameter type-id='type-id-163' is-artificial='yes'/>
              <!-- boost::filesystem::path& -->
              <return type-id='type-id-166'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::filesystem::path& boost::filesystem::path::replace_extension(const boost::filesystem::path&) -->
            <function-decl name='replace_extension' mangled-name='_ZN5boost10filesystem4path17replace_extensionERKS1_' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='333' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem4path17replace_extensionERKS1_'>
              <!-- implicit parameter of type 'boost::filesystem::path*' -->
              <parameter type-id='type-id-163' is-artificial='yes'/>
              <!-- parameter of type 'const boost::filesystem::path&' -->
              <parameter type-id='type-id-143'/>
              <!-- boost::filesystem::path& -->
              <return type-id='type-id-166'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- void boost::filesystem::path::swap(boost::filesystem::path&) -->
            <function-decl name='swap' mangled-name='_ZN5boost10filesystem4path4swapERS1_' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='334' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::filesystem::path*' -->
              <parameter type-id='type-id-163' is-artificial='yes'/>
              <!-- parameter of type 'boost::filesystem::path&' -->
              <parameter type-id='type-id-166'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- const boost::filesystem::path::string_type& boost::filesystem::path::native() -->
            <function-decl name='native' mangled-name='_ZNK5boost10filesystem4path6nativeEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='357' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10filesystem4path6nativeEv'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- const boost::filesystem::path::string_type& -->
              <return type-id='type-id-168'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- const boost::filesystem::path::value_type* boost::filesystem::path::c_str() -->
            <function-decl name='c_str' mangled-name='_ZNK5boost10filesystem4path5c_strEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='358' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10filesystem4path5c_strEv'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- const boost::filesystem::path::value_type* -->
              <return type-id='type-id-164'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- const std::string& boost::filesystem::path::string() -->
            <function-decl name='string' mangled-name='_ZNK5boost10filesystem4path6stringEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='383' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10filesystem4path6stringEv'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- const std::string& -->
              <return type-id='type-id-169'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- const std::string& boost::filesystem::path::string(const boost::filesystem::path::codecvt_type&) -->
            <function-decl name='string' mangled-name='_ZNK5boost10filesystem4path6stringERKSt7codecvtIwc11__mbstate_tE' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='384' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- parameter of type 'const boost::filesystem::path::codecvt_type&' -->
              <parameter type-id='type-id-167'/>
              <!-- const std::string& -->
              <return type-id='type-id-169'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- const std::wstring boost::filesystem::path::wstring() -->
            <function-decl name='wstring' mangled-name='_ZNK5boost10filesystem4path7wstringEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='386' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10filesystem4path7wstringEv'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- const std::wstring -->
              <return type-id='type-id-170'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- const std::wstring boost::filesystem::path::wstring(const boost::filesystem::path::codecvt_type&) -->
            <function-decl name='wstring' mangled-name='_ZNK5boost10filesystem4path7wstringERKSt7codecvtIwc11__mbstate_tE' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='387' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10filesystem4path7wstringERKSt7codecvtIwc11__mbstate_tE'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- parameter of type 'const boost::filesystem::path::codecvt_type&' -->
              <parameter type-id='type-id-167'/>
              <!-- const std::wstring -->
              <return type-id='type-id-170'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- const std::string& boost::filesystem::path::generic_string() -->
            <function-decl name='generic_string' mangled-name='_ZNK5boost10filesystem4path14generic_stringEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='414' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- const std::string& -->
              <return type-id='type-id-169'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- const std::string& boost::filesystem::path::generic_string(const boost::filesystem::path::codecvt_type&) -->
            <function-decl name='generic_string' mangled-name='_ZNK5boost10filesystem4path14generic_stringERKSt7codecvtIwc11__mbstate_tE' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='415' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- parameter of type 'const boost::filesystem::path::codecvt_type&' -->
              <parameter type-id='type-id-167'/>
              <!-- const std::string& -->
              <return type-id='type-id-169'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- const std::wstring boost::filesystem::path::generic_wstring() -->
            <function-decl name='generic_wstring' mangled-name='_ZNK5boost10filesystem4path15generic_wstringEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='416' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- const std::wstring -->
              <return type-id='type-id-170'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- const std::wstring boost::filesystem::path::generic_wstring(const boost::filesystem::path::codecvt_type&) -->
            <function-decl name='generic_wstring' mangled-name='_ZNK5boost10filesystem4path15generic_wstringERKSt7codecvtIwc11__mbstate_tE' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='417' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- parameter of type 'const boost::filesystem::path::codecvt_type&' -->
              <parameter type-id='type-id-167'/>
              <!-- const std::wstring -->
              <return type-id='type-id-170'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- int boost::filesystem::path::compare(const boost::filesystem::path&) -->
            <function-decl name='compare' mangled-name='_ZNK5boost10filesystem4path7compareERKS1_' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='423' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10filesystem4path7compareERKS1_'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- parameter of type 'const boost::filesystem::path&' -->
              <parameter type-id='type-id-143'/>
              <!-- int -->
              <return type-id='type-id-5'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- int boost::filesystem::path::compare(const std::string&) -->
            <function-decl name='compare' mangled-name='_ZNK5boost10filesystem4path7compareERKSs' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='424' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- parameter of type 'const std::string&' -->
              <parameter type-id='type-id-169'/>
              <!-- int -->
              <return type-id='type-id-5'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- int boost::filesystem::path::compare(const boost::filesystem::path::value_type*) -->
            <function-decl name='compare' mangled-name='_ZNK5boost10filesystem4path7compareEPKc' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='425' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- parameter of type 'const boost::filesystem::path::value_type*' -->
              <parameter type-id='type-id-164'/>
              <!-- int -->
              <return type-id='type-id-5'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::filesystem::path boost::filesystem::path::root_path() -->
            <function-decl name='root_path' mangled-name='_ZNK5boost10filesystem4path9root_pathEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='429' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10filesystem4path9root_pathEv'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- class boost::filesystem::path -->
              <return type-id='type-id-142'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::filesystem::path boost::filesystem::path::root_name() -->
            <function-decl name='root_name' mangled-name='_ZNK5boost10filesystem4path9root_nameEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='430' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10filesystem4path9root_nameEv'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- class boost::filesystem::path -->
              <return type-id='type-id-142'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::filesystem::path boost::filesystem::path::root_directory() -->
            <function-decl name='root_directory' mangled-name='_ZNK5boost10filesystem4path14root_directoryEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='432' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10filesystem4path14root_directoryEv'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- class boost::filesystem::path -->
              <return type-id='type-id-142'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::filesystem::path boost::filesystem::path::relative_path() -->
            <function-decl name='relative_path' mangled-name='_ZNK5boost10filesystem4path13relative_pathEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='433' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10filesystem4path13relative_pathEv'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- class boost::filesystem::path -->
              <return type-id='type-id-142'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::filesystem::path boost::filesystem::path::parent_path() -->
            <function-decl name='parent_path' mangled-name='_ZNK5boost10filesystem4path11parent_pathEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='434' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10filesystem4path11parent_pathEv'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- class boost::filesystem::path -->
              <return type-id='type-id-142'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::filesystem::path boost::filesystem::path::filename() -->
            <function-decl name='filename' mangled-name='_ZNK5boost10filesystem4path8filenameEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='435' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10filesystem4path8filenameEv'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- class boost::filesystem::path -->
              <return type-id='type-id-142'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::filesystem::path boost::filesystem::path::stem() -->
            <function-decl name='stem' mangled-name='_ZNK5boost10filesystem4path4stemEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='436' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10filesystem4path4stemEv'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- class boost::filesystem::path -->
              <return type-id='type-id-142'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::filesystem::path boost::filesystem::path::extension() -->
            <function-decl name='extension' mangled-name='_ZNK5boost10filesystem4path9extensionEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='437' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10filesystem4path9extensionEv'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- class boost::filesystem::path -->
              <return type-id='type-id-142'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- bool boost::filesystem::path::empty() -->
            <function-decl name='empty' mangled-name='_ZNK5boost10filesystem4path5emptyEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='441' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10filesystem4path5emptyEv'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- bool -->
              <return type-id='type-id-11'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- bool boost::filesystem::path::has_root_path() -->
            <function-decl name='has_root_path' mangled-name='_ZNK5boost10filesystem4path13has_root_pathEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='442' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- bool -->
              <return type-id='type-id-11'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- bool boost::filesystem::path::has_root_name() -->
            <function-decl name='has_root_name' mangled-name='_ZNK5boost10filesystem4path13has_root_nameEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='443' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- bool -->
              <return type-id='type-id-11'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- bool boost::filesystem::path::has_root_directory() -->
            <function-decl name='has_root_directory' mangled-name='_ZNK5boost10filesystem4path18has_root_directoryEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='444' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10filesystem4path18has_root_directoryEv'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- bool -->
              <return type-id='type-id-11'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- bool boost::filesystem::path::has_relative_path() -->
            <function-decl name='has_relative_path' mangled-name='_ZNK5boost10filesystem4path17has_relative_pathEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='445' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- bool -->
              <return type-id='type-id-11'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- bool boost::filesystem::path::has_parent_path() -->
            <function-decl name='has_parent_path' mangled-name='_ZNK5boost10filesystem4path15has_parent_pathEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='446' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- bool -->
              <return type-id='type-id-11'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- bool boost::filesystem::path::has_filename() -->
            <function-decl name='has_filename' mangled-name='_ZNK5boost10filesystem4path12has_filenameEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='447' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- bool -->
              <return type-id='type-id-11'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- bool boost::filesystem::path::has_stem() -->
            <function-decl name='has_stem' mangled-name='_ZNK5boost10filesystem4path8has_stemEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='448' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- bool -->
              <return type-id='type-id-11'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- bool boost::filesystem::path::has_extension() -->
            <function-decl name='has_extension' mangled-name='_ZNK5boost10filesystem4path13has_extensionEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='449' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- bool -->
              <return type-id='type-id-11'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- bool boost::filesystem::path::is_absolute() -->
            <function-decl name='is_absolute' mangled-name='_ZNK5boost10filesystem4path11is_absoluteEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='450' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10filesystem4path11is_absoluteEv'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- bool -->
              <return type-id='type-id-11'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- bool boost::filesystem::path::is_relative() -->
            <function-decl name='is_relative' mangled-name='_ZNK5boost10filesystem4path11is_relativeEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='458' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- bool -->
              <return type-id='type-id-11'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::filesystem::path::iterator boost::filesystem::path::begin() -->
            <function-decl name='begin' mangled-name='_ZNK5boost10filesystem4path5beginEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='465' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10filesystem4path5beginEv'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- class boost::filesystem::path::iterator -->
              <return type-id='type-id-156'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::filesystem::path::iterator boost::filesystem::path::end() -->
            <function-decl name='end' mangled-name='_ZNK5boost10filesystem4path3endEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='466' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10filesystem4path3endEv'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- class boost::filesystem::path::iterator -->
              <return type-id='type-id-156'/>
            </function-decl>
          </member-function>
          <member-function access='public' static='yes'>
            <!-- std::locale boost::filesystem::path::imbue() -->
            <function-decl name='imbue' mangled-name='_ZN5boost10filesystem4path5imbueERKSt6locale' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='470' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem4path5imbueERKSt6locale'>
              <!-- parameter of type 'const std::locale&' -->
              <parameter type-id='type-id-171'/>
              <!-- class std::locale -->
              <return type-id='type-id-172'/>
            </function-decl>
          </member-function>
          <member-function access='public' static='yes'>
            <!-- const boost::filesystem::path::codecvt_type& boost::filesystem::path::codecvt() -->
            <function-decl name='codecvt' mangled-name='_ZN5boost10filesystem4path7codecvtEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='471' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem4path7codecvtEv'>
              <!-- const boost::filesystem::path::codecvt_type& -->
              <return type-id='type-id-167'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::filesystem::path& boost::filesystem::path::normalize() -->
            <function-decl name='normalize' mangled-name='_ZN5boost10filesystem4path9normalizeEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='481' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::filesystem::path*' -->
              <parameter type-id='type-id-163' is-artificial='yes'/>
              <!-- boost::filesystem::path& -->
              <return type-id='type-id-166'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::filesystem::path& boost::filesystem::path::remove_leaf() -->
            <function-decl name='remove_leaf' mangled-name='_ZN5boost10filesystem4path11remove_leafEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='482' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::filesystem::path*' -->
              <parameter type-id='type-id-163' is-artificial='yes'/>
              <!-- boost::filesystem::path& -->
              <return type-id='type-id-166'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::filesystem::path boost::filesystem::path::leaf() -->
            <function-decl name='leaf' mangled-name='_ZNK5boost10filesystem4path4leafEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='483' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- class boost::filesystem::path -->
              <return type-id='type-id-142'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::filesystem::path boost::filesystem::path::branch_path() -->
            <function-decl name='branch_path' mangled-name='_ZNK5boost10filesystem4path11branch_pathEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='484' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- class boost::filesystem::path -->
              <return type-id='type-id-142'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- bool boost::filesystem::path::has_leaf() -->
            <function-decl name='has_leaf' mangled-name='_ZNK5boost10filesystem4path8has_leafEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='485' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- bool -->
              <return type-id='type-id-11'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- bool boost::filesystem::path::has_branch_path() -->
            <function-decl name='has_branch_path' mangled-name='_ZNK5boost10filesystem4path15has_branch_pathEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='486' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- bool -->
              <return type-id='type-id-11'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- bool boost::filesystem::path::is_complete() -->
            <function-decl name='is_complete' mangled-name='_ZNK5boost10filesystem4path11is_completeEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='487' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- bool -->
              <return type-id='type-id-11'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- const std::string boost::filesystem::path::file_string() -->
            <function-decl name='file_string' mangled-name='_ZNK5boost10filesystem4path11file_stringEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='493' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- const std::string -->
              <return type-id='type-id-173'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- const std::string boost::filesystem::path::directory_string() -->
            <function-decl name='directory_string' mangled-name='_ZNK5boost10filesystem4path16directory_stringEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='494' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- const std::string -->
              <return type-id='type-id-173'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- const std::string boost::filesystem::path::native_file_string() -->
            <function-decl name='native_file_string' mangled-name='_ZNK5boost10filesystem4path18native_file_stringEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='495' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- const std::string -->
              <return type-id='type-id-173'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- const std::string boost::filesystem::path::native_directory_string() -->
            <function-decl name='native_directory_string' mangled-name='_ZNK5boost10filesystem4path23native_directory_stringEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='496' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- const std::string -->
              <return type-id='type-id-173'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- const boost::filesystem::path::string_type boost::filesystem::path::external_file_string() -->
            <function-decl name='external_file_string' mangled-name='_ZNK5boost10filesystem4path20external_file_stringEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='497' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- const boost::filesystem::path::string_type -->
              <return type-id='type-id-174'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- const boost::filesystem::path::string_type boost::filesystem::path::external_directory_string() -->
            <function-decl name='external_directory_string' mangled-name='_ZNK5boost10filesystem4path25external_directory_stringEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='498' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- const boost::filesystem::path::string_type -->
              <return type-id='type-id-174'/>
            </function-decl>
          </member-function>
          <member-function access='private'>
            <!-- std::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type boost::filesystem::path::m_append_separator_if_needed() -->
            <function-decl name='m_append_separator_if_needed' mangled-name='_ZN5boost10filesystem4path28m_append_separator_if_neededEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='534' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem4path28m_append_separator_if_neededEv'>
              <!-- implicit parameter of type 'boost::filesystem::path*' -->
              <parameter type-id='type-id-163' is-artificial='yes'/>
              <!-- typedef std::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type -->
              <return type-id='type-id-31'/>
            </function-decl>
          </member-function>
          <member-function access='private'>
            <!-- void boost::filesystem::path::m_erase_redundant_separator(std::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type) -->
            <function-decl name='m_erase_redundant_separator' mangled-name='_ZN5boost10filesystem4path27m_erase_redundant_separatorEm' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='538' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem4path27m_erase_redundant_separatorEm'>
              <!-- implicit parameter of type 'boost::filesystem::path*' -->
              <parameter type-id='type-id-163' is-artificial='yes'/>
              <!-- parameter of type 'typedef std::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type' -->
              <parameter type-id='type-id-31'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='private'>
            <!-- std::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type boost::filesystem::path::m_parent_path_end() -->
            <function-decl name='m_parent_path_end' mangled-name='_ZNK5boost10filesystem4path17m_parent_path_endEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='539' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10filesystem4path17m_parent_path_endEv'>
              <!-- implicit parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158' is-artificial='yes'/>
              <!-- typedef std::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type -->
              <return type-id='type-id-31'/>
            </function-decl>
          </member-function>
          <member-function access='private'>
            <!-- boost::filesystem::path& boost::filesystem::path::m_normalize() -->
            <function-decl name='m_normalize' mangled-name='_ZN5boost10filesystem4path11m_normalizeEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='541' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem4path11m_normalizeEv'>
              <!-- implicit parameter of type 'boost::filesystem::path*' -->
              <parameter type-id='type-id-163' is-artificial='yes'/>
              <!-- boost::filesystem::path& -->
              <return type-id='type-id-166'/>
            </function-decl>
          </member-function>
          <member-function access='private' static='yes'>
            <!-- void boost::filesystem::path::m_path_iterator_increment() -->
            <function-decl name='m_path_iterator_increment' mangled-name='_ZN5boost10filesystem4path25m_path_iterator_incrementERNS1_8iteratorE' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='549' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem4path25m_path_iterator_incrementERNS1_8iteratorE'>
              <!-- parameter of type 'boost::filesystem::path::iterator&' -->
              <parameter type-id='type-id-175'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='private' static='yes'>
            <!-- void boost::filesystem::path::m_path_iterator_decrement() -->
            <function-decl name='m_path_iterator_decrement' mangled-name='_ZN5boost10filesystem4path25m_path_iterator_decrementERNS1_8iteratorE' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='550' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem4path25m_path_iterator_decrementERNS1_8iteratorE'>
              <!-- parameter of type 'boost::filesystem::path::iterator&' -->
              <parameter type-id='type-id-175'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::enable_if_c<true, boost::filesystem::path &>::type boost::filesystem::path::operator=<char *>(char* const&) -->
            <function-decl name='operator=&lt;char *&gt;' mangled-name='_ZN5boost10filesystem4pathaSIPcEENS_9enable_ifINS0_11path_traits11is_pathableINS_5decayIT_E4typeEEERS1_E4typeERKS8_' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='199' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem4pathaSIPcEENS_9enable_ifINS0_11path_traits11is_pathableINS_5decayIT_E4typeEEERS1_E4typeERKS8_'>
              <!-- implicit parameter of type 'boost::filesystem::path*' -->
              <parameter type-id='type-id-163' is-artificial='yes'/>
              <!-- parameter of type 'char* const&' -->
              <parameter type-id='type-id-176'/>
              <!-- typedef boost::enable_if_c<true, boost::filesystem::path &>::type -->
              <return type-id='type-id-177'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::filesystem::path& boost::filesystem::path::assign<char *>(char*, char*) -->
            <function-decl name='assign&lt;char *&gt;' mangled-name='_ZN5boost10filesystem4path6assignIPcEERS1_T_S5_' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='221' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem4path6assignIPcEERS1_T_S5_'>
              <!-- implicit parameter of type 'boost::filesystem::path*' -->
              <parameter type-id='type-id-163' is-artificial='yes'/>
              <!-- parameter of type 'char*' -->
              <parameter type-id='type-id-40'/>
              <!-- parameter of type 'char*' -->
              <parameter type-id='type-id-40'/>
              <!-- boost::filesystem::path& -->
              <return type-id='type-id-166'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::filesystem::path& boost::filesystem::path::assign<char *>(char*, char*, const boost::filesystem::path::codecvt_type&) -->
            <function-decl name='assign&lt;char *&gt;' mangled-name='_ZN5boost10filesystem4path6assignIPcEERS1_T_S5_RKSt7codecvtIwc11__mbstate_tE' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='227' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem4path6assignIPcEERS1_T_S5_RKSt7codecvtIwc11__mbstate_tE'>
              <!-- implicit parameter of type 'boost::filesystem::path*' -->
              <parameter type-id='type-id-163' is-artificial='yes'/>
              <!-- parameter of type 'char*' -->
              <parameter type-id='type-id-40'/>
              <!-- parameter of type 'char*' -->
              <parameter type-id='type-id-40'/>
              <!-- parameter of type 'const boost::filesystem::path::codecvt_type&' -->
              <parameter type-id='type-id-167'/>
              <!-- boost::filesystem::path& -->
              <return type-id='type-id-166'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- void boost::filesystem::path::path<const char *>(const char*, const char*) -->
            <function-decl name='path&lt;const char *&gt;' mangled-name='_ZN5boost10filesystem4pathC2IPKcEET_S5_' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='161' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem4pathC2IPKcEET_S5_'>
              <!-- implicit parameter of type 'boost::filesystem::path*' -->
              <parameter type-id='type-id-163' is-artificial='yes'/>
              <!-- parameter of type 'const char*' -->
              <parameter type-id='type-id-15'/>
              <!-- parameter of type 'const char*' -->
              <parameter type-id='type-id-15'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::enable_if_c<true, boost::filesystem::path &>::type boost::filesystem::path::operator=<std::basic_string<char> >(const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&) -->
            <function-decl name='operator=&lt;std::basic_string&lt;char&gt; &gt;' mangled-name='_ZN5boost10filesystem4pathaSISsEENS_9enable_ifINS0_11path_traits11is_pathableINS_5decayIT_E4typeEEERS1_E4typeERKS7_' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='199' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem4pathaSISsEENS_9enable_ifINS0_11path_traits11is_pathableINS_5decayIT_E4typeEEERS1_E4typeERKS7_'>
              <!-- implicit parameter of type 'boost::filesystem::path*' -->
              <parameter type-id='type-id-163' is-artificial='yes'/>
              <!-- parameter of type 'const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&' -->
              <parameter type-id='type-id-165'/>
              <!-- typedef boost::enable_if_c<true, boost::filesystem::path &>::type -->
              <return type-id='type-id-177'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- void boost::filesystem::path::path<std::basic_string<wchar_t> >(const std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >&) -->
            <function-decl name='path&lt;std::basic_string&lt;wchar_t&gt; &gt;' mangled-name='_ZN5boost10filesystem4pathC2ISbIwSt11char_traitsIwESaIwEEEERKT_PNS_9enable_ifINS0_11path_traits11is_pathableINS_5decayIS7_E4typeEEEvE4typeE' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='135' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem4pathC2ISbIwSt11char_traitsIwESaIwEEEERKT_PNS_9enable_ifINS0_11path_traits11is_pathableINS_5decayIS7_E4typeEEEvE4typeE'>
              <!-- implicit parameter of type 'boost::filesystem::path*' -->
              <parameter type-id='type-id-163' is-artificial='yes'/>
              <!-- parameter of type 'const std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >&' -->
              <parameter type-id='type-id-178'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
        </class-decl>
        <!-- class boost::filesystem::directory_entry -->
        <class-decl name='directory_entry' size-in-bits='192' visibility='default' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='670' column='1' id='type-id-140'>
          <data-member access='private' layout-offset-in-bits='0'>
            <!-- boost::filesystem::path boost::filesystem::directory_entry::m_path -->
            <var-decl name='m_path' type-id='type-id-142' visibility='default' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='715' column='1'/>
          </data-member>
          <data-member access='private' layout-offset-in-bits='64'>
            <!-- boost::filesystem::file_status boost::filesystem::directory_entry::m_status -->
            <var-decl name='m_status' type-id='type-id-144' visibility='default' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='716' column='1'/>
          </data-member>
          <data-member access='private' layout-offset-in-bits='128'>
            <!-- boost::filesystem::file_status boost::filesystem::directory_entry::m_symlink_status -->
            <var-decl name='m_symlink_status' type-id='type-id-144' visibility='default' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='717' column='1'/>
          </data-member>
          <member-function access='public' constructor='yes'>
            <!-- boost::filesystem::directory_entry::directory_entry() -->
            <function-decl name='directory_entry' mangled-name='_ZN5boost10filesystem15directory_entryC2Ev' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='676' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem15directory_entryC2Ev'>
              <!-- implicit parameter of type 'boost::filesystem::directory_entry*' -->
              <parameter type-id='type-id-179' is-artificial='yes'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public' constructor='yes'>
            <!-- boost::filesystem::directory_entry::directory_entry(const boost::filesystem::path&, boost::filesystem::file_status, boost::filesystem::file_status) -->
            <function-decl name='directory_entry' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='677' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::filesystem::directory_entry*' -->
              <parameter type-id='type-id-179' is-artificial='yes'/>
              <!-- parameter of type 'const boost::filesystem::path&' -->
              <parameter type-id='type-id-143'/>
              <!-- parameter of type 'class boost::filesystem::file_status' -->
              <parameter type-id='type-id-144'/>
              <!-- parameter of type 'class boost::filesystem::file_status' -->
              <parameter type-id='type-id-144'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- void boost::filesystem::directory_entry::assign(const boost::filesystem::path&, boost::filesystem::file_status, boost::filesystem::file_status) -->
            <function-decl name='assign' mangled-name='_ZN5boost10filesystem15directory_entry6assignERKNS0_4pathENS0_11file_statusES5_' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='682' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem15directory_entry6assignERKNS0_4pathENS0_11file_statusES5_'>
              <!-- implicit parameter of type 'boost::filesystem::directory_entry*' -->
              <parameter type-id='type-id-179' is-artificial='yes'/>
              <!-- parameter of type 'const boost::filesystem::path&' -->
              <parameter type-id='type-id-143'/>
              <!-- parameter of type 'class boost::filesystem::file_status' -->
              <parameter type-id='type-id-144'/>
              <!-- parameter of type 'class boost::filesystem::file_status' -->
              <parameter type-id='type-id-144'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- void boost::filesystem::directory_entry::replace_filename(const boost::filesystem::path&, boost::filesystem::file_status, boost::filesystem::file_status) -->
            <function-decl name='replace_filename' mangled-name='_ZN5boost10filesystem15directory_entry16replace_filenameERKNS0_4pathENS0_11file_statusES5_' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='686' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem15directory_entry16replace_filenameERKNS0_4pathENS0_11file_statusES5_'>
              <!-- implicit parameter of type 'boost::filesystem::directory_entry*' -->
              <parameter type-id='type-id-179' is-artificial='yes'/>
              <!-- parameter of type 'const boost::filesystem::path&' -->
              <parameter type-id='type-id-143'/>
              <!-- parameter of type 'class boost::filesystem::file_status' -->
              <parameter type-id='type-id-144'/>
              <!-- parameter of type 'class boost::filesystem::file_status' -->
              <parameter type-id='type-id-144'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- void boost::filesystem::directory_entry::replace_leaf(const boost::filesystem::path&, boost::filesystem::file_status, boost::filesystem::file_status) -->
            <function-decl name='replace_leaf' mangled-name='_ZN5boost10filesystem15directory_entry12replace_leafERKNS0_4pathENS0_11file_statusES5_' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='696' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::filesystem::directory_entry*' -->
              <parameter type-id='type-id-179' is-artificial='yes'/>
              <!-- parameter of type 'const boost::filesystem::path&' -->
              <parameter type-id='type-id-143'/>
              <!-- parameter of type 'class boost::filesystem::file_status' -->
              <parameter type-id='type-id-144'/>
              <!-- parameter of type 'class boost::filesystem::file_status' -->
              <parameter type-id='type-id-144'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- const boost::filesystem::path& boost::filesystem::directory_entry::path() -->
            <function-decl name='path' mangled-name='_ZNK5boost10filesystem15directory_entry4pathEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='701' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10filesystem15directory_entry4pathEv'>
              <!-- implicit parameter of type 'const boost::filesystem::directory_entry*' -->
              <parameter type-id='type-id-180' is-artificial='yes'/>
              <!-- const boost::filesystem::path& -->
              <return type-id='type-id-143'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::filesystem::file_status boost::filesystem::directory_entry::status() -->
            <function-decl name='status' mangled-name='_ZNK5boost10filesystem15directory_entry6statusEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='702' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::filesystem::directory_entry*' -->
              <parameter type-id='type-id-180' is-artificial='yes'/>
              <!-- class boost::filesystem::file_status -->
              <return type-id='type-id-144'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::filesystem::file_status boost::filesystem::directory_entry::status(boost::system::error_code&) -->
            <function-decl name='status' mangled-name='_ZNK5boost10filesystem15directory_entry6statusERNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='703' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::filesystem::directory_entry*' -->
              <parameter type-id='type-id-180' is-artificial='yes'/>
              <!-- parameter of type 'boost::system::error_code&' -->
              <parameter type-id='type-id-181'/>
              <!-- class boost::filesystem::file_status -->
              <return type-id='type-id-144'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::filesystem::file_status boost::filesystem::directory_entry::symlink_status() -->
            <function-decl name='symlink_status' mangled-name='_ZNK5boost10filesystem15directory_entry14symlink_statusEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='704' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::filesystem::directory_entry*' -->
              <parameter type-id='type-id-180' is-artificial='yes'/>
              <!-- class boost::filesystem::file_status -->
              <return type-id='type-id-144'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::filesystem::file_status boost::filesystem::directory_entry::symlink_status(boost::system::error_code&) -->
            <function-decl name='symlink_status' mangled-name='_ZNK5boost10filesystem15directory_entry14symlink_statusERNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='705' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::filesystem::directory_entry*' -->
              <parameter type-id='type-id-180' is-artificial='yes'/>
              <!-- parameter of type 'boost::system::error_code&' -->
              <parameter type-id='type-id-181'/>
              <!-- class boost::filesystem::file_status -->
              <return type-id='type-id-144'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- bool boost::filesystem::directory_entry::operator==(const boost::filesystem::directory_entry&) -->
            <function-decl name='operator==' mangled-name='_ZN5boost10filesystem15directory_entryeqERKS1_' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='707' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::filesystem::directory_entry*' -->
              <parameter type-id='type-id-179' is-artificial='yes'/>
              <!-- parameter of type 'const boost::filesystem::directory_entry&' -->
              <parameter type-id='type-id-182'/>
              <!-- bool -->
              <return type-id='type-id-11'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- bool boost::filesystem::directory_entry::operator!=(const boost::filesystem::directory_entry&) -->
            <function-decl name='operator!=' mangled-name='_ZN5boost10filesystem15directory_entryneERKS1_' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='708' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::filesystem::directory_entry*' -->
              <parameter type-id='type-id-179' is-artificial='yes'/>
              <!-- parameter of type 'const boost::filesystem::directory_entry&' -->
              <parameter type-id='type-id-182'/>
              <!-- bool -->
              <return type-id='type-id-11'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- bool boost::filesystem::directory_entry::operator<(const boost::filesystem::directory_entry&) -->
            <function-decl name='operator&lt;' mangled-name='_ZN5boost10filesystem15directory_entryltERKS1_' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='709' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::filesystem::directory_entry*' -->
              <parameter type-id='type-id-179' is-artificial='yes'/>
              <!-- parameter of type 'const boost::filesystem::directory_entry&' -->
              <parameter type-id='type-id-182'/>
              <!-- bool -->
              <return type-id='type-id-11'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- bool boost::filesystem::directory_entry::operator<=(const boost::filesystem::directory_entry&) -->
            <function-decl name='operator&lt;=' mangled-name='_ZN5boost10filesystem15directory_entryleERKS1_' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='710' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::filesystem::directory_entry*' -->
              <parameter type-id='type-id-179' is-artificial='yes'/>
              <!-- parameter of type 'const boost::filesystem::directory_entry&' -->
              <parameter type-id='type-id-182'/>
              <!-- bool -->
              <return type-id='type-id-11'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- bool boost::filesystem::directory_entry::operator>(const boost::filesystem::directory_entry&) -->
            <function-decl name='operator&gt;' mangled-name='_ZN5boost10filesystem15directory_entrygtERKS1_' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='711' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::filesystem::directory_entry*' -->
              <parameter type-id='type-id-179' is-artificial='yes'/>
              <!-- parameter of type 'const boost::filesystem::directory_entry&' -->
              <parameter type-id='type-id-182'/>
              <!-- bool -->
              <return type-id='type-id-11'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- bool boost::filesystem::directory_entry::operator>=(const boost::filesystem::directory_entry&) -->
            <function-decl name='operator&gt;=' mangled-name='_ZN5boost10filesystem15directory_entrygeERKS1_' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='712' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::filesystem::directory_entry*' -->
              <parameter type-id='type-id-179' is-artificial='yes'/>
              <!-- parameter of type 'const boost::filesystem::directory_entry&' -->
              <parameter type-id='type-id-182'/>
              <!-- bool -->
              <return type-id='type-id-11'/>
            </function-decl>
          </member-function>
          <member-function access='private'>
            <!-- boost::filesystem::file_status boost::filesystem::directory_entry::m_get_status(boost::system::error_code*) -->
            <function-decl name='m_get_status' mangled-name='_ZNK5boost10filesystem15directory_entry12m_get_statusEPNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='719' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10filesystem15directory_entry12m_get_statusEPNS_6system10error_codeE'>
              <!-- implicit parameter of type 'const boost::filesystem::directory_entry*' -->
              <parameter type-id='type-id-180' is-artificial='yes'/>
              <!-- parameter of type 'boost::system::error_code*' -->
              <parameter type-id='type-id-20'/>
              <!-- class boost::filesystem::file_status -->
              <return type-id='type-id-144'/>
            </function-decl>
          </member-function>
          <member-function access='private'>
            <!-- boost::filesystem::file_status boost::filesystem::directory_entry::m_get_symlink_status(boost::system::error_code*) -->
            <function-decl name='m_get_symlink_status' mangled-name='_ZNK5boost10filesystem15directory_entry20m_get_symlink_statusEPNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='720' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10filesystem15directory_entry20m_get_symlink_statusEPNS_6system10error_codeE'>
              <!-- implicit parameter of type 'const boost::filesystem::directory_entry*' -->
              <parameter type-id='type-id-180' is-artificial='yes'/>
              <!-- parameter of type 'boost::system::error_code*' -->
              <parameter type-id='type-id-20'/>
              <!-- class boost::filesystem::file_status -->
              <return type-id='type-id-144'/>
            </function-decl>
          </member-function>
        </class-decl>
        <!-- class boost::filesystem::file_status -->
        <class-decl name='file_status' size-in-bits='64' visibility='default' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='256' column='1' id='type-id-144'>
          <data-member access='private' layout-offset-in-bits='0'>
            <!-- boost::filesystem::file_type boost::filesystem::file_status::m_value -->
            <var-decl name='m_value' type-id='type-id-183' visibility='default' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='276' column='1'/>
          </data-member>
          <data-member access='private' layout-offset-in-bits='32'>
            <!-- boost::filesystem::perms boost::filesystem::file_status::m_perms -->
            <var-decl name='m_perms' type-id='type-id-147' visibility='default' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='277' column='1'/>
          </data-member>
          <member-function access='public' constructor='yes'>
            <!-- boost::filesystem::file_status::file_status() -->
            <function-decl name='file_status' mangled-name='_ZN5boost10filesystem11file_statusC2Ev' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='259' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem11file_statusC2Ev'>
              <!-- implicit parameter of type 'boost::filesystem::file_status*' -->
              <parameter type-id='type-id-184' is-artificial='yes'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public' constructor='yes'>
            <!-- boost::filesystem::file_status::file_status(boost::filesystem::file_type, boost::filesystem::perms) -->
            <function-decl name='file_status' mangled-name='_ZN5boost10filesystem11file_statusC2ENS0_9file_typeENS0_5permsE' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='260' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem11file_statusC2ENS0_9file_typeENS0_5permsE'>
              <!-- implicit parameter of type 'boost::filesystem::file_status*' -->
              <parameter type-id='type-id-184' is-artificial='yes'/>
              <!-- parameter of type 'enum boost::filesystem::file_type' -->
              <parameter type-id='type-id-183'/>
              <!-- parameter of type 'enum boost::filesystem::perms' -->
              <parameter type-id='type-id-147'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::filesystem::file_type boost::filesystem::file_status::type() -->
            <function-decl name='type' mangled-name='_ZNK5boost10filesystem11file_status4typeEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='264' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10filesystem11file_status4typeEv'>
              <!-- implicit parameter of type 'const boost::filesystem::file_status*' -->
              <parameter type-id='type-id-185' is-artificial='yes'/>
              <!-- enum boost::filesystem::file_type -->
              <return type-id='type-id-183'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::filesystem::perms boost::filesystem::file_status::permissions() -->
            <function-decl name='permissions' mangled-name='_ZNK5boost10filesystem11file_status11permissionsEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='265' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10filesystem11file_status11permissionsEv'>
              <!-- implicit parameter of type 'const boost::filesystem::file_status*' -->
              <parameter type-id='type-id-185' is-artificial='yes'/>
              <!-- enum boost::filesystem::perms -->
              <return type-id='type-id-147'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- void boost::filesystem::file_status::type(boost::filesystem::file_type) -->
            <function-decl name='type' mangled-name='_ZN5boost10filesystem11file_status4typeENS0_9file_typeE' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='268' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::filesystem::file_status*' -->
              <parameter type-id='type-id-184' is-artificial='yes'/>
              <!-- parameter of type 'enum boost::filesystem::file_type' -->
              <parameter type-id='type-id-183'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- void boost::filesystem::file_status::permissions(boost::filesystem::perms) -->
            <function-decl name='permissions' mangled-name='_ZN5boost10filesystem11file_status11permissionsENS0_5permsE' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='269' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::filesystem::file_status*' -->
              <parameter type-id='type-id-184' is-artificial='yes'/>
              <!-- parameter of type 'enum boost::filesystem::perms' -->
              <parameter type-id='type-id-147'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- bool boost::filesystem::file_status::operator==(const boost::filesystem::file_status&) -->
            <function-decl name='operator==' mangled-name='_ZNK5boost10filesystem11file_statuseqERKS1_' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='271' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::filesystem::file_status*' -->
              <parameter type-id='type-id-185' is-artificial='yes'/>
              <!-- parameter of type 'const boost::filesystem::file_status&' -->
              <parameter type-id='type-id-186'/>
              <!-- bool -->
              <return type-id='type-id-11'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- bool boost::filesystem::file_status::operator!=(const boost::filesystem::file_status&) -->
            <function-decl name='operator!=' mangled-name='_ZNK5boost10filesystem11file_statusneERKS1_' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='273' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::filesystem::file_status*' -->
              <parameter type-id='type-id-185' is-artificial='yes'/>
              <!-- parameter of type 'const boost::filesystem::file_status&' -->
              <parameter type-id='type-id-186'/>
              <!-- bool -->
              <return type-id='type-id-11'/>
            </function-decl>
          </member-function>
        </class-decl>
        <!-- enum boost::filesystem::file_type -->
        <enum-decl name='file_type' id='type-id-183'>
          <underlying-type type-id='type-id-187'/>
          <enumerator name='status_error' value='0'/>
          <enumerator name='status_unknown' value='0'/>
          <enumerator name='file_not_found' value='1'/>
          <enumerator name='regular_file' value='2'/>
          <enumerator name='directory_file' value='3'/>
          <enumerator name='symlink_file' value='4'/>
          <enumerator name='block_file' value='5'/>
          <enumerator name='character_file' value='6'/>
          <enumerator name='fifo_file' value='7'/>
          <enumerator name='socket_file' value='8'/>
          <enumerator name='reparse_file' value='9'/>
          <enumerator name='type_unknown' value='10'/>
          <enumerator name='_detail_directory_symlink' value='11'/>
        </enum-decl>
        <!-- enum boost::filesystem::perms -->
        <enum-decl name='perms' id='type-id-147'>
          <underlying-type type-id='type-id-187'/>
          <enumerator name='no_perms' value='0'/>
          <enumerator name='owner_read' value='256'/>
          <enumerator name='owner_write' value='128'/>
          <enumerator name='owner_exe' value='64'/>
          <enumerator name='owner_all' value='448'/>
          <enumerator name='group_read' value='32'/>
          <enumerator name='group_write' value='16'/>
          <enumerator name='group_exe' value='8'/>
          <enumerator name='group_all' value='56'/>
          <enumerator name='others_read' value='4'/>
          <enumerator name='others_write' value='2'/>
          <enumerator name='others_exe' value='1'/>
          <enumerator name='others_all' value='7'/>
          <enumerator name='all_all' value='511'/>
          <enumerator name='set_uid_on_exe' value='2048'/>
          <enumerator name='set_gid_on_exe' value='1024'/>
          <enumerator name='sticky_bit' value='512'/>
          <enumerator name='perms_mask' value='4095'/>
          <enumerator name='perms_not_known' value='65535'/>
          <enumerator name='add_perms' value='4096'/>
          <enumerator name='remove_perms' value='8192'/>
          <enumerator name='symlink_perms' value='16384'/>
        </enum-decl>
        <!-- class boost::filesystem::filesystem_error -->
        <class-decl name='filesystem_error' size-in-bits='448' visibility='default' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='64' column='1' id='type-id-188'>
        <!-- class boost::system::system_error -->
          <base-class access='public' layout-offset-in-bits='0' type-id='type-id-189'/>
          <member-type access='private'>
            <!-- struct boost::filesystem::filesystem_error::m_imp -->
            <class-decl name='m_imp' size-in-bits='192' is-struct='yes' visibility='default' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='159' column='1' id='type-id-190'>
              <data-member access='public' layout-offset-in-bits='0'>
                <!-- boost::filesystem::path boost::filesystem::filesystem_error::m_imp::m_path1 -->
                <var-decl name='m_path1' type-id='type-id-142' visibility='default' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='161' column='1'/>
              </data-member>
              <data-member access='public' layout-offset-in-bits='64'>
                <!-- boost::filesystem::path boost::filesystem::filesystem_error::m_imp::m_path2 -->
                <var-decl name='m_path2' type-id='type-id-142' visibility='default' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='162' column='1'/>
              </data-member>
              <data-member access='public' layout-offset-in-bits='128'>
                <!-- std::string boost::filesystem::filesystem_error::m_imp::m_what -->
                <var-decl name='m_what' type-id='type-id-10' visibility='default' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='163' column='1'/>
              </data-member>
            </class-decl>
          </member-type>
          <data-member access='private' layout-offset-in-bits='320'>
            <!-- boost::shared_ptr<boost::filesystem::filesystem_error::m_imp> boost::filesystem::filesystem_error::m_imp_ptr -->
            <var-decl name='m_imp_ptr' type-id='type-id-191' visibility='default' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='165' column='1'/>
          </data-member>
          <member-function access='public' constructor='yes'>
            <!-- boost::filesystem::filesystem_error::filesystem_error(const std::string&, boost::system::error_code) -->
            <function-decl name='filesystem_error' mangled-name='_ZN5boost10filesystem16filesystem_errorC2ERKSsNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='76' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem16filesystem_errorC2ERKSsNS_6system10error_codeE'>
              <!-- implicit parameter of type 'boost::filesystem::filesystem_error*' -->
              <parameter type-id='type-id-192' is-artificial='yes'/>
              <!-- parameter of type 'const std::string&' -->
              <parameter type-id='type-id-169'/>
              <!-- parameter of type 'class boost::system::error_code' -->
              <parameter type-id='type-id-18'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public' constructor='yes'>
            <!-- boost::filesystem::filesystem_error::filesystem_error(const std::string&, const boost::filesystem::path&, boost::system::error_code) -->
            <function-decl name='filesystem_error' mangled-name='_ZN5boost10filesystem16filesystem_errorC2ERKSsRKNS0_4pathENS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='87' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem16filesystem_errorC2ERKSsRKNS0_4pathENS_6system10error_codeE'>
              <!-- implicit parameter of type 'boost::filesystem::filesystem_error*' -->
              <parameter type-id='type-id-192' is-artificial='yes'/>
              <!-- parameter of type 'const std::string&' -->
              <parameter type-id='type-id-169'/>
              <!-- parameter of type 'const boost::filesystem::path&' -->
              <parameter type-id='type-id-143'/>
              <!-- parameter of type 'class boost::system::error_code' -->
              <parameter type-id='type-id-18'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public' constructor='yes'>
            <!-- boost::filesystem::filesystem_error::filesystem_error(const std::string&, const boost::filesystem::path&, const boost::filesystem::path&, boost::system::error_code) -->
            <function-decl name='filesystem_error' mangled-name='_ZN5boost10filesystem16filesystem_errorC2ERKSsRKNS0_4pathES6_NS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='100' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem16filesystem_errorC2ERKSsRKNS0_4pathES6_NS_6system10error_codeE'>
              <!-- implicit parameter of type 'boost::filesystem::filesystem_error*' -->
              <parameter type-id='type-id-192' is-artificial='yes'/>
              <!-- parameter of type 'const std::string&' -->
              <parameter type-id='type-id-169'/>
              <!-- parameter of type 'const boost::filesystem::path&' -->
              <parameter type-id='type-id-143'/>
              <!-- parameter of type 'const boost::filesystem::path&' -->
              <parameter type-id='type-id-143'/>
              <!-- parameter of type 'class boost::system::error_code' -->
              <parameter type-id='type-id-18'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- const boost::filesystem::path& boost::filesystem::filesystem_error::path1() -->
            <function-decl name='path1' mangled-name='_ZNK5boost10filesystem16filesystem_error5path1Ev' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='116' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::filesystem::filesystem_error*' -->
              <parameter type-id='type-id-193' is-artificial='yes'/>
              <!-- const boost::filesystem::path& -->
              <return type-id='type-id-143'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- const boost::filesystem::path& boost::filesystem::filesystem_error::path2() -->
            <function-decl name='path2' mangled-name='_ZNK5boost10filesystem16filesystem_error5path2Ev' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='121' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::filesystem::filesystem_error*' -->
              <parameter type-id='type-id-193' is-artificial='yes'/>
              <!-- const boost::filesystem::path& -->
              <return type-id='type-id-143'/>
            </function-decl>
          </member-function>
          <member-function access='public' destructor='yes' vtable-offset='0'>
            <!-- boost::filesystem::filesystem_error::~filesystem_error() -->
            <function-decl name='~filesystem_error' mangled-name='_ZN5boost10filesystem16filesystem_errorD0Ev' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='114' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem16filesystem_errorD2Ev'>
              <!-- implicit parameter of type 'boost::filesystem::filesystem_error*' -->
              <parameter type-id='type-id-192' is-artificial='yes'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public' vtable-offset='2'>
            <!-- const char* boost::filesystem::filesystem_error::what() -->
            <function-decl name='what' mangled-name='_ZNK5boost10filesystem16filesystem_error4whatEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='127' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10filesystem16filesystem_error4whatEv'>
              <!-- implicit parameter of type 'const boost::filesystem::filesystem_error*' -->
              <parameter type-id='type-id-193' is-artificial='yes'/>
              <!-- const char* -->
              <return type-id='type-id-15'/>
            </function-decl>
          </member-function>
        </class-decl>
        <!-- enum boost::filesystem::copy_option -->
        <enum-decl name='copy_option' id='type-id-145'>
          <underlying-type type-id='type-id-187'/>
          <enumerator name='none' value='0'/>
          <enumerator name='fail_if_exists' value='0'/>
          <enumerator name='overwrite_if_exists' value='1'/>
        </enum-decl>
        <!-- struct boost::filesystem::space_info -->
        <class-decl name='space_info' size-in-bits='192' is-struct='yes' visibility='default' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='296' column='1' id='type-id-149'>
          <data-member access='public' layout-offset-in-bits='0'>
            <!-- uintmax_t boost::filesystem::space_info::capacity -->
            <var-decl name='capacity' type-id='type-id-146' visibility='default' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='299' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='64'>
            <!-- uintmax_t boost::filesystem::space_info::free -->
            <var-decl name='free' type-id='type-id-146' visibility='default' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='300' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='128'>
            <!-- uintmax_t boost::filesystem::space_info::available -->
            <var-decl name='available' type-id='type-id-146' visibility='default' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='301' column='1'/>
          </data-member>
        </class-decl>
        <!-- class boost::filesystem::directory_iterator -->
        <class-decl name='directory_iterator' size-in-bits='128' visibility='default' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='780' column='1' id='type-id-194'>
        <!-- class boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long> -->
          <base-class access='public' layout-offset-in-bits='0' type-id='type-id-195'/>
          <data-member access='private' layout-offset-in-bits='0'>
            <!-- boost::shared_ptr<boost::filesystem::detail::dir_itr_imp> boost::filesystem::directory_iterator::m_imp -->
            <var-decl name='m_imp' type-id='type-id-196' visibility='default' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='816' column='1'/>
          </data-member>
          <member-function access='public' constructor='yes'>
            <!-- boost::filesystem::directory_iterator::directory_iterator() -->
            <function-decl name='directory_iterator' mangled-name='_ZN5boost10filesystem18directory_iteratorC2Ev' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='787' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem18directory_iteratorC2Ev'>
              <!-- implicit parameter of type 'boost::filesystem::directory_iterator*' -->
              <parameter type-id='type-id-197' is-artificial='yes'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public' constructor='yes'>
            <!-- boost::filesystem::directory_iterator::directory_iterator(const boost::filesystem::path&) -->
            <function-decl name='directory_iterator' mangled-name='_ZN5boost10filesystem18directory_iteratorC2ERKNS0_4pathE' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='791' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem18directory_iteratorC2ERKNS0_4pathE'>
              <!-- implicit parameter of type 'boost::filesystem::directory_iterator*' -->
              <parameter type-id='type-id-197' is-artificial='yes'/>
              <!-- parameter of type 'const boost::filesystem::path&' -->
              <parameter type-id='type-id-143'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public' constructor='yes'>
            <!-- boost::filesystem::directory_iterator::directory_iterator(const boost::filesystem::path&, boost::system::error_code&) -->
            <function-decl name='directory_iterator' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='795' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::filesystem::directory_iterator*' -->
              <parameter type-id='type-id-197' is-artificial='yes'/>
              <!-- parameter of type 'const boost::filesystem::path&' -->
              <parameter type-id='type-id-143'/>
              <!-- parameter of type 'boost::system::error_code&' -->
              <parameter type-id='type-id-181'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public' destructor='yes'>
            <!-- boost::filesystem::directory_iterator::~directory_iterator() -->
            <function-decl name='~directory_iterator' mangled-name='_ZN5boost10filesystem18directory_iteratorD2Ev' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='799' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem18directory_iteratorD2Ev'>
              <!-- implicit parameter of type 'boost::filesystem::directory_iterator*' -->
              <parameter type-id='type-id-197' is-artificial='yes'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::filesystem::directory_iterator& boost::filesystem::directory_iterator::increment(boost::system::error_code&) -->
            <function-decl name='increment' mangled-name='_ZN5boost10filesystem18directory_iterator9incrementERNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='801' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem18directory_iterator9incrementERNS_6system10error_codeE'>
              <!-- implicit parameter of type 'boost::filesystem::directory_iterator*' -->
              <parameter type-id='type-id-197' is-artificial='yes'/>
              <!-- parameter of type 'boost::system::error_code&' -->
              <parameter type-id='type-id-181'/>
              <!-- boost::filesystem::directory_iterator& -->
              <return type-id='type-id-151'/>
            </function-decl>
          </member-function>
          <member-function access='private'>
            <!-- boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>::reference boost::filesystem::directory_iterator::dereference() -->
            <function-decl name='dereference' mangled-name='_ZNK5boost10filesystem18directory_iterator11dereferenceEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='823' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10filesystem18directory_iterator11dereferenceEv'>
              <!-- implicit parameter of type 'const boost::filesystem::directory_iterator*' -->
              <parameter type-id='type-id-198' is-artificial='yes'/>
              <!-- typedef boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>::reference -->
              <return type-id='type-id-199'/>
            </function-decl>
          </member-function>
          <member-function access='private'>
            <!-- void boost::filesystem::directory_iterator::increment() -->
            <function-decl name='increment' mangled-name='_ZN5boost10filesystem18directory_iterator9incrementEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='829' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem18directory_iterator9incrementEv'>
              <!-- implicit parameter of type 'boost::filesystem::directory_iterator*' -->
              <parameter type-id='type-id-197' is-artificial='yes'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='private'>
            <!-- bool boost::filesystem::directory_iterator::equal(const boost::filesystem::directory_iterator&) -->
            <function-decl name='equal' mangled-name='_ZNK5boost10filesystem18directory_iterator5equalERKS1_' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='831' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10filesystem18directory_iterator5equalERKS1_'>
              <!-- implicit parameter of type 'const boost::filesystem::directory_iterator*' -->
              <parameter type-id='type-id-198' is-artificial='yes'/>
              <!-- parameter of type 'const boost::filesystem::directory_iterator&' -->
              <parameter type-id='type-id-200'/>
              <!-- bool -->
              <return type-id='type-id-11'/>
            </function-decl>
          </member-function>
        </class-decl>
        <!-- boost::filesystem::path boost::filesystem::absolute(const boost::filesystem::path&, const boost::filesystem::path&) -->
        <function-decl name='absolute' mangled-name='_ZN5boost10filesystem8absoluteERKNS0_4pathES3_' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='708' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem8absoluteERKNS0_4pathES3_'>
          <!-- parameter of type 'const boost::filesystem::path&' -->
          <parameter type-id='type-id-143' name='p' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='708' column='1'/>
          <!-- parameter of type 'const boost::filesystem::path&' -->
          <parameter type-id='type-id-143' name='base' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='708' column='1'/>
          <!-- class boost::filesystem::path -->
          <return type-id='type-id-142'/>
        </function-decl>
        <!-- boost::filesystem::path boost::filesystem::current_path() -->
        <function-decl name='current_path' mangled-name='_ZN5boost10filesystem12current_pathEv' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='540' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem12current_pathEv'>
          <!-- class boost::filesystem::path -->
          <return type-id='type-id-142'/>
        </function-decl>
        <!-- boost::filesystem::path boost::filesystem::operator/(const boost::filesystem::path&, const boost::filesystem::path&) -->
        <function-decl name='operator/' mangled-name='_ZN5boost10filesystemdvERKNS0_4pathES3_' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='648' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystemdvERKNS0_4pathES3_'>
          <!-- parameter of type 'const boost::filesystem::path&' -->
          <parameter type-id='type-id-143' name='p' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='708' column='1'/>
          <!-- parameter of type 'const boost::filesystem::path&' -->
          <parameter type-id='type-id-143' name='base' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='708' column='1'/>
          <!-- class boost::filesystem::path -->
          <return type-id='type-id-142'/>
        </function-decl>
        <!-- boost::filesystem::file_status boost::filesystem::status(const boost::filesystem::path&, boost::system::error_code&) -->
        <function-decl name='status' mangled-name='_ZN5boost10filesystem6statusERKNS0_4pathERNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='392' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6statusERKNS0_4pathERNS_6system10error_codeE'>
          <!-- parameter of type 'const boost::filesystem::path&' -->
          <parameter type-id='type-id-143' name='p' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='392' column='1'/>
          <!-- parameter of type 'boost::system::error_code&' -->
          <parameter type-id='type-id-181' name='ec' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='392' column='1'/>
          <!-- class boost::filesystem::file_status -->
          <return type-id='type-id-144'/>
        </function-decl>
        <!-- bool boost::filesystem::operator==(const boost::filesystem::path&, const boost::filesystem::path&) -->
        <function-decl name='operator==' mangled-name='_ZN5boost10filesystemeqERKNS0_4pathES3_' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='615' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystemeqERKNS0_4pathES3_'>
          <!-- parameter of type 'const boost::filesystem::path&' -->
          <parameter type-id='type-id-143' name='lhs' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='615' column='1'/>
          <!-- parameter of type 'const boost::filesystem::path&' -->
          <parameter type-id='type-id-143' name='rhs' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='615' column='1'/>
          <!-- bool -->
          <return type-id='type-id-11'/>
        </function-decl>
        <!-- bool boost::filesystem::operator!=(const boost::filesystem::path&, const boost::filesystem::path&) -->
        <function-decl name='operator!=' mangled-name='_ZN5boost10filesystemneERKNS0_4pathES3_' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='621' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystemneERKNS0_4pathES3_'>
          <!-- parameter of type 'const boost::filesystem::path&' -->
          <parameter type-id='type-id-143' name='lhs' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='615' column='1'/>
          <!-- parameter of type 'const boost::filesystem::path&' -->
          <parameter type-id='type-id-143' name='rhs' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='615' column='1'/>
          <!-- bool -->
          <return type-id='type-id-11'/>
        </function-decl>
        <!-- bool boost::filesystem::is_symlink(boost::filesystem::file_status) -->
        <function-decl name='is_symlink' mangled-name='_ZN5boost10filesystem10is_symlinkENS0_11file_statusE' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='288' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem10is_symlinkENS0_11file_statusE'>
          <!-- parameter of type 'class boost::filesystem::file_status' -->
          <parameter type-id='type-id-144' name='f' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='288' column='1'/>
          <!-- bool -->
          <return type-id='type-id-11'/>
        </function-decl>
        <!-- boost::filesystem::file_status boost::filesystem::symlink_status(const boost::filesystem::path&, boost::system::error_code&) -->
        <function-decl name='symlink_status' mangled-name='_ZN5boost10filesystem14symlink_statusERKNS0_4pathERNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='397' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem14symlink_statusERKNS0_4pathERNS_6system10error_codeE'>
          <!-- parameter of type 'const boost::filesystem::path&' -->
          <parameter type-id='type-id-143' name='p' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='392' column='1'/>
          <!-- parameter of type 'boost::system::error_code&' -->
          <parameter type-id='type-id-181' name='ec' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='392' column='1'/>
          <!-- class boost::filesystem::file_status -->
          <return type-id='type-id-144'/>
        </function-decl>
        <!-- void boost::filesystem::copy_symlink(const boost::filesystem::path&, const boost::filesystem::path&, boost::system::error_code&) -->
        <function-decl name='copy_symlink' mangled-name='_ZN5boost10filesystem12copy_symlinkERKNS0_4pathES3_RNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='507' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem12copy_symlinkERKNS0_4pathES3_RNS_6system10error_codeE'>
          <!-- parameter of type 'const boost::filesystem::path&' -->
          <parameter type-id='type-id-143' name='existing_symlink' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='507' column='1'/>
          <!-- parameter of type 'const boost::filesystem::path&' -->
          <parameter type-id='type-id-143' name='new_symlink' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='507' column='1'/>
          <!-- parameter of type 'boost::system::error_code&' -->
          <parameter type-id='type-id-181' name='ec' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='507' column='1'/>
          <!-- void -->
          <return type-id='type-id-8'/>
        </function-decl>
        <!-- bool boost::filesystem::is_directory(boost::filesystem::file_status) -->
        <function-decl name='is_directory' mangled-name='_ZN5boost10filesystem12is_directoryENS0_11file_statusE' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='287' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem12is_directoryENS0_11file_statusE'>
          <!-- parameter of type 'class boost::filesystem::file_status' -->
          <parameter type-id='type-id-144' name='f' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='288' column='1'/>
          <!-- bool -->
          <return type-id='type-id-11'/>
        </function-decl>
        <!-- void boost::filesystem::copy_directory(const boost::filesystem::path&, const boost::filesystem::path&, boost::system::error_code&) -->
        <function-decl name='copy_directory' mangled-name='_ZN5boost10filesystem14copy_directoryERKNS0_4pathES3_RNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='487' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem14copy_directoryERKNS0_4pathES3_RNS_6system10error_codeE'>
          <!-- parameter of type 'const boost::filesystem::path&' -->
          <parameter type-id='type-id-143' name='existing_symlink' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='507' column='1'/>
          <!-- parameter of type 'const boost::filesystem::path&' -->
          <parameter type-id='type-id-143' name='new_symlink' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='507' column='1'/>
          <!-- parameter of type 'boost::system::error_code&' -->
          <parameter type-id='type-id-181' name='ec' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='507' column='1'/>
          <!-- void -->
          <return type-id='type-id-8'/>
        </function-decl>
        <!-- bool boost::filesystem::is_regular_file(boost::filesystem::file_status) -->
        <function-decl name='is_regular_file' mangled-name='_ZN5boost10filesystem15is_regular_fileENS0_11file_statusE' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='286' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem15is_regular_fileENS0_11file_statusE'>
          <!-- parameter of type 'class boost::filesystem::file_status' -->
          <parameter type-id='type-id-144' name='f' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='288' column='1'/>
          <!-- bool -->
          <return type-id='type-id-11'/>
        </function-decl>
        <!-- void boost::filesystem::copy_file(const boost::filesystem::path&, const boost::filesystem::path&, boost::filesystem::copy_option, boost::system::error_code&) -->
        <function-decl name='copy_file' mangled-name='_ZN5boost10filesystem9copy_fileERKNS0_4pathES3_NS0_11copy_optionERNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='497' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem9copy_fileERKNS0_4pathES3_NS0_11copy_optionERNS_6system10error_codeE'>
          <!-- parameter of type 'const boost::filesystem::path&' -->
          <parameter type-id='type-id-143' name='from' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='497' column='1'/>
          <!-- parameter of type 'const boost::filesystem::path&' -->
          <parameter type-id='type-id-143' name='to' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='497' column='1'/>
          <!-- parameter of type 'enum boost::filesystem::copy_option' -->
          <parameter type-id='type-id-145' name='option' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='498' column='1'/>
          <!-- parameter of type 'boost::system::error_code&' -->
          <parameter type-id='type-id-181' name='ec' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='498' column='1'/>
          <!-- void -->
          <return type-id='type-id-8'/>
        </function-decl>
        <!-- bool boost::filesystem::create_directories(const boost::filesystem::path&, boost::system::error_code&) -->
        <function-decl name='create_directories' mangled-name='_ZN5boost10filesystem18create_directoriesERKNS0_4pathERNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='513' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem18create_directoriesERKNS0_4pathERNS_6system10error_codeE'>
          <!-- parameter of type 'const boost::filesystem::path&' -->
          <parameter type-id='type-id-143' name='p' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='513' column='1'/>
          <!-- parameter of type 'boost::system::error_code&' -->
          <parameter type-id='type-id-181' name='ec' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='513' column='1'/>
          <!-- bool -->
          <return type-id='type-id-11'/>
        </function-decl>
        <!-- bool boost::filesystem::is_directory(const boost::filesystem::path&, boost::system::error_code&) -->
        <function-decl name='is_directory' mangled-name='_ZN5boost10filesystem12is_directoryERKNS0_4pathERNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='407' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem12is_directoryERKNS0_4pathERNS_6system10error_codeE'>
          <!-- parameter of type 'const boost::filesystem::path&' -->
          <parameter type-id='type-id-143' name='p' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='513' column='1'/>
          <!-- parameter of type 'boost::system::error_code&' -->
          <parameter type-id='type-id-181' name='ec' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='513' column='1'/>
          <!-- bool -->
          <return type-id='type-id-11'/>
        </function-decl>
        <!-- boost::filesystem::perms boost::filesystem::operator|(boost::filesystem::perms, boost::filesystem::perms) -->
        <function-decl name='operator|' mangled-name='_ZN5boost10filesystemorENS0_5permsES1_' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='250' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystemorENS0_5permsES1_'>
          <!-- parameter of type 'enum boost::filesystem::perms' -->
          <parameter type-id='type-id-147' name='x' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='250' column='1'/>
          <!-- parameter of type 'enum boost::filesystem::perms' -->
          <parameter type-id='type-id-147' name='y' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='250' column='1'/>
          <!-- enum boost::filesystem::perms -->
          <return type-id='type-id-147'/>
        </function-decl>
        <!-- boost::filesystem::perms boost::filesystem::operator&(boost::filesystem::perms, boost::filesystem::perms) -->
        <function-decl name='operator&amp;' mangled-name='_ZN5boost10filesystemanENS0_5permsES1_' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='250' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystemanENS0_5permsES1_'>
          <!-- parameter of type 'enum boost::filesystem::perms' -->
          <parameter type-id='type-id-147' name='x' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='250' column='1'/>
          <!-- parameter of type 'enum boost::filesystem::perms' -->
          <parameter type-id='type-id-147' name='y' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='250' column='1'/>
          <!-- enum boost::filesystem::perms -->
          <return type-id='type-id-147'/>
        </function-decl>
        <!-- boost::filesystem::perms& boost::filesystem::operator|=(boost::filesystem::perms&, boost::filesystem::perms) -->
        <function-decl name='operator|=' mangled-name='_ZN5boost10filesystemoRERNS0_5permsES1_' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='250' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystemoRERNS0_5permsES1_'>
          <!-- parameter of type 'boost::filesystem::perms&' -->
          <parameter type-id='type-id-201' name='x' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='250' column='1'/>
          <!-- parameter of type 'enum boost::filesystem::perms' -->
          <parameter type-id='type-id-147' name='y' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='250' column='1'/>
          <!-- boost::filesystem::perms& -->
          <return type-id='type-id-201'/>
        </function-decl>
        <!-- boost::filesystem::perms boost::filesystem::operator~(boost::filesystem::perms) -->
        <function-decl name='operator~' mangled-name='_ZN5boost10filesystemcoENS0_5permsE' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='250' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystemcoENS0_5permsE'>
          <!-- parameter of type 'enum boost::filesystem::perms' -->
          <parameter type-id='type-id-147' name='x' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='250' column='1'/>
          <!-- enum boost::filesystem::perms -->
          <return type-id='type-id-147'/>
        </function-decl>
        <!-- bool boost::filesystem::is_directory(const boost::filesystem::path&) -->
        <function-decl name='is_directory' mangled-name='_ZN5boost10filesystem12is_directoryERKNS0_4pathE' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='405' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem12is_directoryERKNS0_4pathE'>
          <!-- parameter of type 'const boost::filesystem::path&' -->
          <parameter type-id='type-id-143' name='p' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='405' column='1'/>
          <!-- bool -->
          <return type-id='type-id-11'/>
        </function-decl>
        <!-- bool boost::filesystem::status_known(boost::filesystem::file_status) -->
        <function-decl name='status_known' mangled-name='_ZN5boost10filesystem12status_knownENS0_11file_statusE' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='283' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem12status_knownENS0_11file_statusE'>
          <!-- parameter of type 'class boost::filesystem::file_status' -->
          <parameter type-id='type-id-144' name='f' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='288' column='1'/>
          <!-- bool -->
          <return type-id='type-id-11'/>
        </function-decl>
        <!-- namespace boost::filesystem::path_traits -->
        <namespace-decl name='path_traits'>
          <!-- typedef std::codecvt<wchar_t, char, __mbstate_t> boost::filesystem::path_traits::codecvt_type -->
          <typedef-decl name='codecvt_type' type-id='type-id-155' filepath='src/third_party/boost-1.56.0/boost/filesystem/path_traits.hpp' line='52' column='1' id='type-id-202'/>
          <!-- void boost::filesystem::path_traits::dispatch(const boost::filesystem::directory_entry&, std::string&, const boost::filesystem::path_traits::codecvt_type&) -->
          <function-decl name='dispatch' mangled-name='_ZN5boost10filesystem11path_traits8dispatchERKNS0_15directory_entryERSsRKSt7codecvtIwc11__mbstate_tE' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1877' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem11path_traits8dispatchERKNS0_15directory_entryERSsRKSt7codecvtIwc11__mbstate_tE'>
            <!-- parameter of type 'const boost::filesystem::directory_entry&' -->
            <parameter type-id='type-id-182' name='de' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1877' column='1'/>
            <!-- parameter of type 'std::string&' -->
            <parameter type-id='type-id-203' name='to' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1881' column='1'/>
            <!-- parameter of type 'const boost::filesystem::path_traits::codecvt_type&' -->
            <parameter type-id='type-id-204' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1883' column='1'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
          <!-- void boost::filesystem::path_traits::convert(const char*, const char*, std::string&, const boost::filesystem::path_traits::codecvt_type&) -->
          <function-decl name='convert' mangled-name='_ZN5boost10filesystem11path_traits7convertEPKcS3_RSsRKSt7codecvtIwc11__mbstate_tE' filepath='src/third_party/boost-1.56.0/boost/filesystem/path_traits.hpp' line='130' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem11path_traits7convertEPKcS3_RSsRKSt7codecvtIwc11__mbstate_tE'>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='type-id-15' name='from' filepath='src/third_party/boost-1.56.0/boost/filesystem/path_traits.hpp' line='130' column='1'/>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='type-id-15' name='from_end' filepath='src/third_party/boost-1.56.0/boost/filesystem/path_traits.hpp' line='130' column='1'/>
            <!-- parameter of type 'std::string&' -->
            <parameter type-id='type-id-203' name='to' filepath='src/third_party/boost-1.56.0/boost/filesystem/path_traits.hpp' line='130' column='1'/>
            <!-- parameter of type 'const boost::filesystem::path_traits::codecvt_type&' -->
            <parameter type-id='type-id-204' filepath='src/third_party/boost-1.56.0/boost/filesystem/path_traits.hpp' line='131' column='1'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
          <!-- void boost::filesystem::path_traits::dispatch<char, std::basic_string<char> >(char* const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const boost::filesystem::path_traits::codecvt_type&) -->
          <function-decl name='dispatch&lt;char, std::basic_string&lt;char&gt; &gt;' mangled-name='_ZN5boost10filesystem11path_traits8dispatchIcSsEEvRKPT_RT0_RKSt7codecvtIwc11__mbstate_tE' filepath='src/third_party/boost-1.56.0/boost/filesystem/path_traits.hpp' line='211' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem11path_traits8dispatchIcSsEEvRKPT_RT0_RKSt7codecvtIwc11__mbstate_tE'>
            <!-- parameter of type 'char* const&' -->
            <parameter type-id='type-id-176' name='c_str' filepath='src/third_party/boost-1.56.0/boost/filesystem/path_traits.hpp' line='211' column='1'/>
            <!-- parameter of type 'std::basic_string<char, std::char_traits<char>, std::allocator<char> >&' -->
            <parameter type-id='type-id-44' name='to' filepath='src/third_party/boost-1.56.0/boost/filesystem/path_traits.hpp' line='211' column='1'/>
            <!-- parameter of type 'const boost::filesystem::path_traits::codecvt_type&' -->
            <parameter type-id='type-id-204' name='cvt' filepath='src/third_party/boost-1.56.0/boost/filesystem/path_traits.hpp' line='211' column='1'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
          <!-- void boost::filesystem::path_traits::convert(const char*, std::string&, const boost::filesystem::path_traits::codecvt_type&) -->
          <function-decl name='convert' mangled-name='_ZN5boost10filesystem11path_traits7convertEPKcRSsRKSt7codecvtIwc11__mbstate_tE' filepath='src/third_party/boost-1.56.0/boost/filesystem/path_traits.hpp' line='139' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem11path_traits7convertEPKcRSsRKSt7codecvtIwc11__mbstate_tE'>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='type-id-15' name='from' filepath='src/third_party/boost-1.56.0/boost/filesystem/path_traits.hpp' line='139' column='1'/>
            <!-- parameter of type 'std::string&' -->
            <parameter type-id='type-id-203' name='to' filepath='src/third_party/boost-1.56.0/boost/filesystem/path_traits.hpp' line='140' column='1'/>
            <!-- parameter of type 'const boost::filesystem::path_traits::codecvt_type&' -->
            <parameter type-id='type-id-204' filepath='src/third_party/boost-1.56.0/boost/filesystem/path_traits.hpp' line='141' column='1'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </namespace-decl>
        <!-- bool boost::filesystem::type_present(boost::filesystem::file_status) -->
        <function-decl name='type_present' mangled-name='_ZN5boost10filesystem12type_presentENS0_11file_statusE' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='280' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem12type_presentENS0_11file_statusE'>
          <!-- parameter of type 'class boost::filesystem::file_status' -->
          <parameter type-id='type-id-144' name='f' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='288' column='1'/>
          <!-- bool -->
          <return type-id='type-id-11'/>
        </function-decl>
        <!-- bool boost::filesystem::permissions_present(boost::filesystem::file_status) -->
        <function-decl name='permissions_present' mangled-name='_ZN5boost10filesystem19permissions_presentENS0_11file_statusE' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='281' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem19permissions_presentENS0_11file_statusE'>
          <!-- parameter of type 'class boost::filesystem::file_status' -->
          <parameter type-id='type-id-144' name='f' filepath='src/third_party/boost-1.56.0/boost/filesystem/operations.hpp' line='288' column='1'/>
          <!-- bool -->
          <return type-id='type-id-11'/>
        </function-decl>
      </namespace-decl>
      <!-- namespace boost::system -->
      <namespace-decl name='system'>

        <!-- const boost::system::error_category& boost::system::system_category() -->
        <function-decl name='system_category' mangled-name='_ZN5boost6system15system_categoryEv' filepath='src/third_party/boost-1.56.0/boost/system/error_code.hpp' line='212' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- const boost::system::error_category& -->
          <return type-id='type-id-1'/>
        </function-decl>
        <!-- class boost::system::system_error -->
        <class-decl name='system_error' size-in-bits='320' visibility='default' filepath='src/third_party/boost-1.56.0/boost/system/system_error.hpp' line='22' column='1' id='type-id-189'>
        <!-- class std::runtime_error -->
          <base-class access='public' layout-offset-in-bits='0' type-id='type-id-205'/>
          <data-member access='private' layout-offset-in-bits='128'>
            <!-- boost::system::error_code boost::system::system_error::m_error_code -->
            <var-decl name='m_error_code' type-id='type-id-18' visibility='default' filepath='src/third_party/boost-1.56.0/boost/system/system_error.hpp' line='53' column='1'/>
          </data-member>
          <data-member access='private' layout-offset-in-bits='256'>
            <!-- std::string boost::system::system_error::m_what -->
            <var-decl name='m_what' type-id='type-id-10' visibility='default' filepath='src/third_party/boost-1.56.0/boost/system/system_error.hpp' line='54' column='1'/>
          </data-member>
          <member-function access='public' constructor='yes'>
            <!-- boost::system::system_error::system_error(boost::system::error_code) -->
            <function-decl name='system_error' filepath='src/third_party/boost-1.56.0/boost/system/system_error.hpp' line='27' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::system::system_error*' -->
              <parameter type-id='type-id-206' is-artificial='yes'/>
              <!-- parameter of type 'class boost::system::error_code' -->
              <parameter type-id='type-id-18'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public' constructor='yes'>
            <!-- boost::system::system_error::system_error(boost::system::error_code, const std::string&) -->
            <function-decl name='system_error' mangled-name='_ZN5boost6system12system_errorC2ENS0_10error_codeERKSs' filepath='src/third_party/boost-1.56.0/boost/system/system_error.hpp' line='30' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost6system12system_errorC2ENS0_10error_codeERKSs'>
              <!-- implicit parameter of type 'boost::system::system_error*' -->
              <parameter type-id='type-id-206' is-artificial='yes'/>
              <!-- parameter of type 'class boost::system::error_code' -->
              <parameter type-id='type-id-18'/>
              <!-- parameter of type 'const std::string&' -->
              <parameter type-id='type-id-169'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public' constructor='yes'>
            <!-- boost::system::system_error::system_error(boost::system::error_code, const char*) -->
            <function-decl name='system_error' filepath='src/third_party/boost-1.56.0/boost/system/system_error.hpp' line='33' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::system::system_error*' -->
              <parameter type-id='type-id-206' is-artificial='yes'/>
              <!-- parameter of type 'class boost::system::error_code' -->
              <parameter type-id='type-id-18'/>
              <!-- parameter of type 'const char*' -->
              <parameter type-id='type-id-15'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public' constructor='yes'>
            <!-- boost::system::system_error::system_error(int, const boost::system::error_category&) -->
            <function-decl name='system_error' filepath='src/third_party/boost-1.56.0/boost/system/system_error.hpp' line='36' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::system::system_error*' -->
              <parameter type-id='type-id-206' is-artificial='yes'/>
              <!-- parameter of type 'int' -->
              <parameter type-id='type-id-5'/>
              <!-- parameter of type 'const boost::system::error_category&' -->
              <parameter type-id='type-id-1'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public' constructor='yes'>
            <!-- boost::system::system_error::system_error(int, const boost::system::error_category&, const std::string&) -->
            <function-decl name='system_error' filepath='src/third_party/boost-1.56.0/boost/system/system_error.hpp' line='39' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::system::system_error*' -->
              <parameter type-id='type-id-206' is-artificial='yes'/>
              <!-- parameter of type 'int' -->
              <parameter type-id='type-id-5'/>
              <!-- parameter of type 'const boost::system::error_category&' -->
              <parameter type-id='type-id-1'/>
              <!-- parameter of type 'const std::string&' -->
              <parameter type-id='type-id-169'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public' constructor='yes'>
            <!-- boost::system::system_error::system_error(int, const boost::system::error_category&, const char*) -->
            <function-decl name='system_error' mangled-name='_ZN5boost6system12system_errorC2EiRKNS0_14error_categoryEPKc' filepath='src/third_party/boost-1.56.0/boost/system/system_error.hpp' line='43' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost6system12system_errorC2EiRKNS0_14error_categoryEPKc'>
              <!-- implicit parameter of type 'boost::system::system_error*' -->
              <parameter type-id='type-id-206' is-artificial='yes'/>
              <!-- parameter of type 'int' -->
              <parameter type-id='type-id-5'/>
              <!-- parameter of type 'const boost::system::error_category&' -->
              <parameter type-id='type-id-1'/>
              <!-- parameter of type 'const char*' -->
              <parameter type-id='type-id-15'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- const boost::system::error_code& boost::system::system_error::code() -->
            <function-decl name='code' mangled-name='_ZNK5boost6system12system_error4codeEv' filepath='src/third_party/boost-1.56.0/boost/system/system_error.hpp' line='49' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::system::system_error*' -->
              <parameter type-id='type-id-207' is-artificial='yes'/>
              <!-- const boost::system::error_code& -->
              <return type-id='type-id-17'/>
            </function-decl>
          </member-function>
          <member-function access='public' destructor='yes' vtable-offset='0'>
            <!-- boost::system::system_error::~system_error() -->
            <function-decl name='~system_error' mangled-name='_ZN5boost6system12system_errorD0Ev' filepath='src/third_party/boost-1.56.0/boost/system/system_error.hpp' line='47' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost6system12system_errorD2Ev'>
              <!-- implicit parameter of type 'boost::system::system_error*' -->
              <parameter type-id='type-id-206' is-artificial='yes'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public' vtable-offset='2'>
            <!-- const char* boost::system::system_error::what() -->
            <function-decl name='what' mangled-name='_ZNK5boost6system12system_error4whatEv' filepath='src/third_party/boost-1.56.0/boost/system/system_error.hpp' line='50' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost6system12system_error4whatEv'>
              <!-- implicit parameter of type 'const boost::system::system_error*' -->
              <parameter type-id='type-id-207' is-artificial='yes'/>
              <!-- const char* -->
              <return type-id='type-id-15'/>
            </function-decl>
          </member-function>
        </class-decl>
      </namespace-decl>
      <!-- class boost::shared_ptr<boost::filesystem::filesystem_error::m_imp> -->
      <class-decl name='shared_ptr&lt;boost::filesystem::filesystem_error::m_imp&gt;' size-in-bits='128' visibility='default' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='323' column='1' id='type-id-191'>
        <member-type access='private'>
          <!-- typedef boost::detail::sp_element<boost::filesystem::filesystem_error::m_imp>::type boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>::element_type -->
          <typedef-decl name='element_type' type-id='type-id-209' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='332' column='1' id='type-id-208'/>
        </member-type>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>::element_type* boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>::px -->
          <var-decl name='px' type-id='type-id-210' visibility='default' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='723' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- boost::detail::shared_count boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>::pn -->
          <var-decl name='pn' type-id='type-id-211' visibility='default' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='724' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>::shared_ptr() -->
          <function-decl name='shared_ptr' mangled-name='_ZN5boost10shared_ptrINS_10filesystem16filesystem_error5m_impEEC2Ev' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='334' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10shared_ptrINS_10filesystem16filesystem_error5m_impEEC2Ev'>
            <!-- implicit parameter of type 'boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>*' -->
            <parameter type-id='type-id-212' is-artificial='yes'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>::shared_ptr(const boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>&) -->
          <function-decl name='shared_ptr' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='392' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>*' -->
            <parameter type-id='type-id-212' is-artificial='yes'/>
            <!-- parameter of type 'const boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>&' -->
            <parameter type-id='type-id-213'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>& boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>::operator=(const boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>&) -->
          <function-decl name='operator=' mangled-name='_ZN5boost10shared_ptrINS_10filesystem16filesystem_error5m_impEEaSERKS4_' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='500' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>*' -->
            <parameter type-id='type-id-212' is-artificial='yes'/>
            <!-- parameter of type 'const boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>&' -->
            <parameter type-id='type-id-213'/>
            <!-- boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>& -->
            <return type-id='type-id-214'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>::shared_ptr(boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>&&) -->
          <function-decl name='shared_ptr' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='563' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>*' -->
            <parameter type-id='type-id-212' is-artificial='yes'/>
            <!-- parameter of type 'boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>&&' -->
            <parameter type-id='type-id-215'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>& boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>::operator=(boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>&&) -->
          <function-decl name='operator=' mangled-name='_ZN5boost10shared_ptrINS_10filesystem16filesystem_error5m_impEEaSEOS4_' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='587' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>*' -->
            <parameter type-id='type-id-212' is-artificial='yes'/>
            <!-- parameter of type 'boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>&&' -->
            <parameter type-id='type-id-215'/>
            <!-- boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>& -->
            <return type-id='type-id-214'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>& boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>::operator=() -->
          <function-decl name='operator=' mangled-name='_ZN5boost10shared_ptrINS_10filesystem16filesystem_error5m_impEEaSEDn' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='604' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>*' -->
            <parameter type-id='type-id-212' is-artificial='yes'/>
            <!-- boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>& -->
            <return type-id='type-id-214'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>::reset() -->
          <function-decl name='reset' mangled-name='_ZN5boost10shared_ptrINS_10filesystem16filesystem_error5m_impEE5resetEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='612' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10shared_ptrINS_10filesystem16filesystem_error5m_impEE5resetEv'>
            <!-- implicit parameter of type 'boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>*' -->
            <parameter type-id='type-id-212' is-artificial='yes'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- boost::detail::sp_dereference<boost::filesystem::filesystem_error::m_imp>::type boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>::operator*() -->
          <function-decl name='operator*' mangled-name='_ZNK5boost10shared_ptrINS_10filesystem16filesystem_error5m_impEEdeEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='639' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>*' -->
            <parameter type-id='type-id-216' is-artificial='yes'/>
            <!-- typedef boost::detail::sp_dereference<boost::filesystem::filesystem_error::m_imp>::type -->
            <return type-id='type-id-217'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- boost::detail::sp_member_access<boost::filesystem::filesystem_error::m_imp>::type boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>::operator&#45;>() -->
          <function-decl name='operator-&gt;' mangled-name='_ZNK5boost10shared_ptrINS_10filesystem16filesystem_error5m_impEEptEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='646' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10shared_ptrINS_10filesystem16filesystem_error5m_impEEptEv'>
            <!-- implicit parameter of type 'const boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>*' -->
            <parameter type-id='type-id-216' is-artificial='yes'/>
            <!-- typedef boost::detail::sp_member_access<boost::filesystem::filesystem_error::m_imp>::type -->
            <return type-id='type-id-218'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>::operator[](std::ptrdiff_t) -->
          <function-decl name='operator[]' mangled-name='_ZNK5boost10shared_ptrINS_10filesystem16filesystem_error5m_impEEixEl' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='653' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>*' -->
            <parameter type-id='type-id-216' is-artificial='yes'/>
            <!-- parameter of type 'typedef std::ptrdiff_t' -->
            <parameter type-id='type-id-219'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>::element_type* boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>::get() -->
          <function-decl name='get' mangled-name='_ZNK5boost10shared_ptrINS_10filesystem16filesystem_error5m_impEE3getEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='661' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10shared_ptrINS_10filesystem16filesystem_error5m_impEE3getEv'>
            <!-- implicit parameter of type 'const boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>*' -->
            <parameter type-id='type-id-216' is-artificial='yes'/>
            <!-- boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>::element_type* -->
            <return type-id='type-id-210'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>::operator bool() -->
          <function-decl name='operator bool' mangled-name='_ZNK5boost10shared_ptrINS_10filesystem16filesystem_error5m_impEEcvbEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/operator_bool.hpp' line='11' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>*' -->
            <parameter type-id='type-id-216' is-artificial='yes'/>
            <!-- bool -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>::operator!() -->
          <function-decl name='operator!' mangled-name='_ZNK5boost10shared_ptrINS_10filesystem16filesystem_error5m_impEEntEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/operator_bool.hpp' line='60' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>*' -->
            <parameter type-id='type-id-216' is-artificial='yes'/>
            <!-- bool -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>::unique() -->
          <function-decl name='unique' mangled-name='_ZNK5boost10shared_ptrINS_10filesystem16filesystem_error5m_impEE6uniqueEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='669' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>*' -->
            <parameter type-id='type-id-216' is-artificial='yes'/>
            <!-- bool -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- long int boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>::use_count() -->
          <function-decl name='use_count' mangled-name='_ZNK5boost10shared_ptrINS_10filesystem16filesystem_error5m_impEE9use_countEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='674' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>*' -->
            <parameter type-id='type-id-216' is-artificial='yes'/>
            <!-- long int -->
            <return type-id='type-id-54'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>::swap(boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>&) -->
          <function-decl name='swap' mangled-name='_ZN5boost10shared_ptrINS_10filesystem16filesystem_error5m_impEE4swapERS4_' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='679' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10shared_ptrINS_10filesystem16filesystem_error5m_impEE4swapERS4_'>
            <!-- implicit parameter of type 'boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>*' -->
            <parameter type-id='type-id-212' is-artificial='yes'/>
            <!-- parameter of type 'boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>&' -->
            <parameter type-id='type-id-214'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void* boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>::_internal_get_deleter(const boost::detail::sp_typeinfo&) -->
          <function-decl name='_internal_get_deleter' mangled-name='_ZNK5boost10shared_ptrINS_10filesystem16filesystem_error5m_impEE21_internal_get_deleterERKSt9type_info' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='695' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>*' -->
            <parameter type-id='type-id-216' is-artificial='yes'/>
            <!-- parameter of type 'const boost::detail::sp_typeinfo&' -->
            <parameter type-id='type-id-220'/>
            <!-- void* -->
            <return type-id='type-id-55'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void* boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>::_internal_get_untyped_deleter() -->
          <function-decl name='_internal_get_untyped_deleter' mangled-name='_ZNK5boost10shared_ptrINS_10filesystem16filesystem_error5m_impEE29_internal_get_untyped_deleterEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='700' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>*' -->
            <parameter type-id='type-id-216' is-artificial='yes'/>
            <!-- void* -->
            <return type-id='type-id-55'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>::_internal_equiv(const boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>&) -->
          <function-decl name='_internal_equiv' mangled-name='_ZNK5boost10shared_ptrINS_10filesystem16filesystem_error5m_impEE15_internal_equivERKS4_' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='705' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>*' -->
            <parameter type-id='type-id-216' is-artificial='yes'/>
            <!-- parameter of type 'const boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>&' -->
            <parameter type-id='type-id-213'/>
            <!-- bool -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>::reset<boost::filesystem::filesystem_error::m_imp>(boost::filesystem::filesystem_error::m_imp*) -->
          <function-decl name='reset&lt;boost::filesystem::filesystem_error::m_imp&gt;' mangled-name='_ZN5boost10shared_ptrINS_10filesystem16filesystem_error5m_impEE5resetIS3_EEvPT_' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='617' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10shared_ptrINS_10filesystem16filesystem_error5m_impEE5resetIS3_EEvPT_'>
            <!-- implicit parameter of type 'boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>*' -->
            <parameter type-id='type-id-212' is-artificial='yes'/>
            <!-- parameter of type 'boost::filesystem::filesystem_error::m_imp*' -->
            <parameter type-id='type-id-221'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>::shared_ptr<boost::filesystem::filesystem_error::m_imp>(boost::filesystem::filesystem_error::m_imp*) -->
          <function-decl name='shared_ptr&lt;boost::filesystem::filesystem_error::m_imp&gt;' mangled-name='_ZN5boost10shared_ptrINS_10filesystem16filesystem_error5m_impEEC2IS3_EEPT_' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='347' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10shared_ptrINS_10filesystem16filesystem_error5m_impEEC2IS3_EEPT_'>
            <!-- implicit parameter of type 'boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>*' -->
            <parameter type-id='type-id-212' is-artificial='yes'/>
            <!-- parameter of type 'boost::filesystem::filesystem_error::m_imp*' -->
            <parameter type-id='type-id-221'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- namespace boost::detail -->
      <namespace-decl name='detail'>

        <!-- int boost::detail::atomic_exchange_and_add(int*, int) -->
        <function-decl name='atomic_exchange_and_add' mangled-name='_ZN5boost6detail23atomic_exchange_and_addEPii' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp' line='35' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost6detail23atomic_exchange_and_addEPii'>
          <!-- parameter of type 'int*' -->
          <parameter type-id='type-id-222' name='pw' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp' line='35' column='1'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-5' name='dv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp' line='35' column='1'/>
          <!-- int -->
          <return type-id='type-id-5'/>
        </function-decl>
        <!-- struct boost::detail::sp_element<boost::filesystem::detail::dir_itr_imp> -->
        <class-decl name='sp_element&lt;boost::filesystem::detail::dir_itr_imp&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='63' column='1' id='type-id-223'>
          <member-type access='public'>
            <!-- typedef boost::filesystem::detail::dir_itr_imp boost::detail::sp_element<boost::filesystem::detail::dir_itr_imp>::type -->
            <typedef-decl name='type' type-id='type-id-139' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='65' column='1' id='type-id-224'/>
          </member-type>
        </class-decl>
        <!-- class boost::detail::shared_count -->
        <class-decl name='shared_count' size-in-bits='64' visibility='default' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/shared_count.hpp' line='100' column='1' id='type-id-211'>
          <data-member access='private' layout-offset-in-bits='0'>
            <!-- boost::detail::sp_counted_base* boost::detail::shared_count::pi_ -->
            <var-decl name='pi_' type-id='type-id-225' visibility='default' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/shared_count.hpp' line='104' column='1'/>
          </data-member>
          <member-function access='public' constructor='yes'>
            <!-- boost::detail::shared_count::shared_count() -->
            <function-decl name='shared_count' mangled-name='_ZN5boost6detail12shared_countC2Ev' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/shared_count.hpp' line='114' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost6detail12shared_countC2Ev'>
              <!-- implicit parameter of type 'boost::detail::shared_count*' -->
              <parameter type-id='type-id-226' is-artificial='yes'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public' destructor='yes'>
            <!-- boost::detail::shared_count::~shared_count() -->
            <function-decl name='~shared_count' mangled-name='_ZN5boost6detail12shared_countD2Ev' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/shared_count.hpp' line='441' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost6detail12shared_countD2Ev'>
              <!-- implicit parameter of type 'boost::detail::shared_count*' -->
              <parameter type-id='type-id-226' is-artificial='yes'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public' constructor='yes'>
            <!-- boost::detail::shared_count::shared_count(const boost::detail::shared_count&) -->
            <function-decl name='shared_count' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/shared_count.hpp' line='449' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::detail::shared_count*' -->
              <parameter type-id='type-id-226' is-artificial='yes'/>
              <!-- parameter of type 'const boost::detail::shared_count&' -->
              <parameter type-id='type-id-227'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public' constructor='yes'>
            <!-- boost::detail::shared_count::shared_count(boost::detail::shared_count&&) -->
            <function-decl name='shared_count' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/shared_count.hpp' line='459' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::detail::shared_count*' -->
              <parameter type-id='type-id-226' is-artificial='yes'/>
              <!-- parameter of type 'boost::detail::shared_count&&' -->
              <parameter type-id='type-id-228'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public' constructor='yes'>
            <!-- boost::detail::shared_count::shared_count(const boost::detail::weak_count&) -->
            <function-decl name='shared_count' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/shared_count.hpp' line='469' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::detail::shared_count*' -->
              <parameter type-id='type-id-226' is-artificial='yes'/>
              <!-- parameter of type 'const boost::detail::weak_count&' -->
              <parameter type-id='type-id-229'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public' constructor='yes'>
            <!-- boost::detail::shared_count::shared_count(const boost::detail::weak_count&, boost::detail::sp_nothrow_tag) -->
            <function-decl name='shared_count' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/shared_count.hpp' line='470' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::detail::shared_count*' -->
              <parameter type-id='type-id-226' is-artificial='yes'/>
              <!-- parameter of type 'const boost::detail::weak_count&' -->
              <parameter type-id='type-id-229'/>
              <!-- parameter of type 'struct boost::detail::sp_nothrow_tag' -->
              <parameter type-id='type-id-230'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::detail::shared_count& boost::detail::shared_count::operator=(const boost::detail::shared_count&) -->
            <function-decl name='operator=' mangled-name='_ZN5boost6detail12shared_countaSERKS1_' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/shared_count.hpp' line='472' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::detail::shared_count*' -->
              <parameter type-id='type-id-226' is-artificial='yes'/>
              <!-- parameter of type 'const boost::detail::shared_count&' -->
              <parameter type-id='type-id-227'/>
              <!-- boost::detail::shared_count& -->
              <return type-id='type-id-231'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- void boost::detail::shared_count::swap(boost::detail::shared_count&) -->
            <function-decl name='swap' mangled-name='_ZN5boost6detail12shared_count4swapERS1_' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/shared_count.hpp' line='486' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost6detail12shared_count4swapERS1_'>
              <!-- implicit parameter of type 'boost::detail::shared_count*' -->
              <parameter type-id='type-id-226' is-artificial='yes'/>
              <!-- parameter of type 'boost::detail::shared_count&' -->
              <parameter type-id='type-id-231'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- long int boost::detail::shared_count::use_count() -->
            <function-decl name='use_count' mangled-name='_ZNK5boost6detail12shared_count9use_countEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/shared_count.hpp' line='493' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::detail::shared_count*' -->
              <parameter type-id='type-id-232' is-artificial='yes'/>
              <!-- long int -->
              <return type-id='type-id-54'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- bool boost::detail::shared_count::unique() -->
            <function-decl name='unique' mangled-name='_ZNK5boost6detail12shared_count6uniqueEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/shared_count.hpp' line='498' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::detail::shared_count*' -->
              <parameter type-id='type-id-232' is-artificial='yes'/>
              <!-- bool -->
              <return type-id='type-id-11'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- bool boost::detail::shared_count::empty() -->
            <function-decl name='empty' mangled-name='_ZNK5boost6detail12shared_count5emptyEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/shared_count.hpp' line='503' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::detail::shared_count*' -->
              <parameter type-id='type-id-232' is-artificial='yes'/>
              <!-- bool -->
              <return type-id='type-id-11'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- void* boost::detail::shared_count::get_deleter(const boost::detail::sp_typeinfo&) -->
            <function-decl name='get_deleter' mangled-name='_ZNK5boost6detail12shared_count11get_deleterERKSt9type_info' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/shared_count.hpp' line='518' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::detail::shared_count*' -->
              <parameter type-id='type-id-232' is-artificial='yes'/>
              <!-- parameter of type 'const boost::detail::sp_typeinfo&' -->
              <parameter type-id='type-id-220'/>
              <!-- void* -->
              <return type-id='type-id-55'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- void* boost::detail::shared_count::get_untyped_deleter() -->
            <function-decl name='get_untyped_deleter' mangled-name='_ZNK5boost6detail12shared_count19get_untyped_deleterEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/shared_count.hpp' line='523' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::detail::shared_count*' -->
              <parameter type-id='type-id-232' is-artificial='yes'/>
              <!-- void* -->
              <return type-id='type-id-55'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- void boost::detail::shared_count::shared_count<boost::filesystem::detail::dir_itr_imp>(boost::filesystem::detail::dir_itr_imp*) -->
            <function-decl name='shared_count&lt;boost::filesystem::detail::dir_itr_imp&gt;' mangled-name='_ZN5boost6detail12shared_countC2INS_10filesystem6detail11dir_itr_impEEEPT_' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/shared_count.hpp' line='121' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost6detail12shared_countC2INS_10filesystem6detail11dir_itr_impEEEPT_'>
              <!-- implicit parameter of type 'boost::detail::shared_count*' -->
              <parameter type-id='type-id-226' is-artificial='yes'/>
              <!-- parameter of type 'boost::filesystem::detail::dir_itr_imp*' -->
              <parameter type-id='type-id-141'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- void boost::detail::shared_count::shared_count<boost::filesystem::filesystem_error::m_imp>(boost::filesystem::filesystem_error::m_imp*) -->
            <function-decl name='shared_count&lt;boost::filesystem::filesystem_error::m_imp&gt;' mangled-name='_ZN5boost6detail12shared_countC2INS_10filesystem16filesystem_error5m_impEEEPT_' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/shared_count.hpp' line='121' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost6detail12shared_countC2INS_10filesystem16filesystem_error5m_impEEEPT_'>
              <!-- implicit parameter of type 'boost::detail::shared_count*' -->
              <parameter type-id='type-id-226' is-artificial='yes'/>
              <!-- parameter of type 'boost::filesystem::filesystem_error::m_imp*' -->
              <parameter type-id='type-id-221'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
        </class-decl>
        <!-- class boost::detail::sp_counted_base -->
        <class-decl name='sp_counted_base' size-in-bits='128' visibility='default' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp' line='97' column='1' id='type-id-233'>
          <data-member access='private' layout-offset-in-bits='64'>
            <!-- int boost::detail::sp_counted_base::use_count_ -->
            <var-decl name='use_count_' type-id='type-id-5' visibility='default' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp' line='104' column='1'/>
          </data-member>
          <data-member access='private' layout-offset-in-bits='96'>
            <!-- int boost::detail::sp_counted_base::weak_count_ -->
            <var-decl name='weak_count_' type-id='type-id-5' visibility='default' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp' line='105' column='1'/>
          </data-member>
          <member-function access='private' constructor='yes'>
            <!-- boost::detail::sp_counted_base::sp_counted_base(const boost::detail::sp_counted_base&) -->
            <function-decl name='sp_counted_base' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp' line='101' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::detail::sp_counted_base*' -->
              <parameter type-id='type-id-225' is-artificial='yes'/>
              <!-- parameter of type 'const boost::detail::sp_counted_base&' -->
              <parameter type-id='type-id-234'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='private'>
            <!-- boost::detail::sp_counted_base& boost::detail::sp_counted_base::operator=(const boost::detail::sp_counted_base&) -->
            <function-decl name='operator=' mangled-name='_ZN5boost6detail15sp_counted_baseaSERKS1_' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp' line='102' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::detail::sp_counted_base*' -->
              <parameter type-id='type-id-225' is-artificial='yes'/>
              <!-- parameter of type 'const boost::detail::sp_counted_base&' -->
              <parameter type-id='type-id-234'/>
              <!-- boost::detail::sp_counted_base& -->
              <return type-id='type-id-235'/>
            </function-decl>
          </member-function>
          <member-function access='public' constructor='yes'>
            <!-- boost::detail::sp_counted_base::sp_counted_base() -->
            <function-decl name='sp_counted_base' mangled-name='_ZN5boost6detail15sp_counted_baseC2Ev' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp' line='109' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost6detail15sp_counted_baseC2Ev'>
              <!-- implicit parameter of type 'boost::detail::sp_counted_base*' -->
              <parameter type-id='type-id-225' is-artificial='yes'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- void boost::detail::sp_counted_base::add_ref_copy() -->
            <function-decl name='add_ref_copy' mangled-name='_ZN5boost6detail15sp_counted_base12add_ref_copyEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp' line='132' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::detail::sp_counted_base*' -->
              <parameter type-id='type-id-225' is-artificial='yes'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- bool boost::detail::sp_counted_base::add_ref_lock() -->
            <function-decl name='add_ref_lock' mangled-name='_ZN5boost6detail15sp_counted_base12add_ref_lockEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp' line='137' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::detail::sp_counted_base*' -->
              <parameter type-id='type-id-225' is-artificial='yes'/>
              <!-- bool -->
              <return type-id='type-id-11'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- void boost::detail::sp_counted_base::release() -->
            <function-decl name='release' mangled-name='_ZN5boost6detail15sp_counted_base7releaseEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp' line='142' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost6detail15sp_counted_base7releaseEv'>
              <!-- implicit parameter of type 'boost::detail::sp_counted_base*' -->
              <parameter type-id='type-id-225' is-artificial='yes'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- void boost::detail::sp_counted_base::weak_add_ref() -->
            <function-decl name='weak_add_ref' mangled-name='_ZN5boost6detail15sp_counted_base12weak_add_refEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp' line='151' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::detail::sp_counted_base*' -->
              <parameter type-id='type-id-225' is-artificial='yes'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- void boost::detail::sp_counted_base::weak_release() -->
            <function-decl name='weak_release' mangled-name='_ZN5boost6detail15sp_counted_base12weak_releaseEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp' line='156' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost6detail15sp_counted_base12weak_releaseEv'>
              <!-- implicit parameter of type 'boost::detail::sp_counted_base*' -->
              <parameter type-id='type-id-225' is-artificial='yes'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- long int boost::detail::sp_counted_base::use_count() -->
            <function-decl name='use_count' mangled-name='_ZNK5boost6detail15sp_counted_base9use_countEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp' line='164' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::detail::sp_counted_base*' -->
              <parameter type-id='type-id-236' is-artificial='yes'/>
              <!-- long int -->
              <return type-id='type-id-54'/>
            </function-decl>
          </member-function>
          <member-function access='public' destructor='yes' vtable-offset='0'>
            <!-- boost::detail::sp_counted_base::~sp_counted_base() -->
            <function-decl name='~sp_counted_base' mangled-name='_ZN5boost6detail15sp_counted_baseD0Ev' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp' line='113' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost6detail15sp_counted_baseD2Ev'>
              <!-- implicit parameter of type 'boost::detail::sp_counted_base*' -->
              <parameter type-id='type-id-225' is-artificial='yes'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public' vtable-offset='2'>
            <!-- void boost::detail::sp_counted_base::dispose() -->
            <function-decl name='dispose' mangled-name='_ZN5boost6detail15sp_counted_base7disposeEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp' line='120' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::detail::sp_counted_base*' -->
              <parameter type-id='type-id-225' is-artificial='yes'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public' vtable-offset='3'>
            <!-- void boost::detail::sp_counted_base::destroy() -->
            <function-decl name='destroy' mangled-name='_ZN5boost6detail15sp_counted_base7destroyEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp' line='124' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost6detail15sp_counted_base7destroyEv'>
              <!-- implicit parameter of type 'boost::detail::sp_counted_base*' -->
              <parameter type-id='type-id-225' is-artificial='yes'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public' vtable-offset='4'>
            <!-- void* boost::detail::sp_counted_base::get_deleter(const boost::detail::sp_typeinfo&) -->
            <function-decl name='get_deleter' mangled-name='_ZN5boost6detail15sp_counted_base11get_deleterERKSt9type_info' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp' line='129' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::detail::sp_counted_base*' -->
              <parameter type-id='type-id-225' is-artificial='yes'/>
              <!-- parameter of type 'const boost::detail::sp_typeinfo&' -->
              <parameter type-id='type-id-220'/>
              <!-- void* -->
              <return type-id='type-id-55'/>
            </function-decl>
          </member-function>
          <member-function access='public' vtable-offset='5'>
            <!-- void* boost::detail::sp_counted_base::get_untyped_deleter() -->
            <function-decl name='get_untyped_deleter' mangled-name='_ZN5boost6detail15sp_counted_base19get_untyped_deleterEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp' line='130' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::detail::sp_counted_base*' -->
              <parameter type-id='type-id-225' is-artificial='yes'/>
              <!-- void* -->
              <return type-id='type-id-55'/>
            </function-decl>
          </member-function>
        </class-decl>
        <!-- typedef boost::core::typeinfo boost::detail::sp_typeinfo -->
        <typedef-decl name='sp_typeinfo' type-id='type-id-237' filepath='src/third_party/boost-1.56.0/boost/detail/sp_typeinfo.hpp' line='28' column='1' id='type-id-238'/>
        <!-- class boost::detail::weak_count -->
        <class-decl name='weak_count' size-in-bits='64' visibility='default' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/shared_count.hpp' line='530' column='1' id='type-id-239'>
          <data-member access='private' layout-offset-in-bits='0'>
            <!-- boost::detail::sp_counted_base* boost::detail::weak_count::pi_ -->
            <var-decl name='pi_' type-id='type-id-225' visibility='default' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/shared_count.hpp' line='534' column='1'/>
          </data-member>
          <member-function access='public' constructor='yes'>
            <!-- boost::detail::weak_count::weak_count() -->
            <function-decl name='weak_count' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/shared_count.hpp' line='544' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::detail::weak_count*' -->
              <parameter type-id='type-id-240' is-artificial='yes'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public' constructor='yes'>
            <!-- boost::detail::weak_count::weak_count(const boost::detail::shared_count&) -->
            <function-decl name='weak_count' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/shared_count.hpp' line='551' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::detail::weak_count*' -->
              <parameter type-id='type-id-240' is-artificial='yes'/>
              <!-- parameter of type 'const boost::detail::shared_count&' -->
              <parameter type-id='type-id-227'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public' constructor='yes'>
            <!-- boost::detail::weak_count::weak_count(const boost::detail::weak_count&) -->
            <function-decl name='weak_count' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/shared_count.hpp' line='559' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::detail::weak_count*' -->
              <parameter type-id='type-id-240' is-artificial='yes'/>
              <!-- parameter of type 'const boost::detail::weak_count&' -->
              <parameter type-id='type-id-229'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public' constructor='yes'>
            <!-- boost::detail::weak_count::weak_count(boost::detail::weak_count&&) -->
            <function-decl name='weak_count' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/shared_count.hpp' line='571' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::detail::weak_count*' -->
              <parameter type-id='type-id-240' is-artificial='yes'/>
              <!-- parameter of type 'boost::detail::weak_count&&' -->
              <parameter type-id='type-id-241'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public' destructor='yes'>
            <!-- boost::detail::weak_count::~weak_count() -->
            <function-decl name='~weak_count' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/shared_count.hpp' line='581' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::detail::weak_count*' -->
              <parameter type-id='type-id-240' is-artificial='yes'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::detail::weak_count& boost::detail::weak_count::operator=(const boost::detail::shared_count&) -->
            <function-decl name='operator=' mangled-name='_ZN5boost6detail10weak_countaSERKNS0_12shared_countE' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/shared_count.hpp' line='589' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::detail::weak_count*' -->
              <parameter type-id='type-id-240' is-artificial='yes'/>
              <!-- parameter of type 'const boost::detail::shared_count&' -->
              <parameter type-id='type-id-227'/>
              <!-- boost::detail::weak_count& -->
              <return type-id='type-id-242'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::detail::weak_count& boost::detail::weak_count::operator=(const boost::detail::weak_count&) -->
            <function-decl name='operator=' mangled-name='_ZN5boost6detail10weak_countaSERKS1_' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/shared_count.hpp' line='603' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::detail::weak_count*' -->
              <parameter type-id='type-id-240' is-artificial='yes'/>
              <!-- parameter of type 'const boost::detail::weak_count&' -->
              <parameter type-id='type-id-229'/>
              <!-- boost::detail::weak_count& -->
              <return type-id='type-id-242'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- void boost::detail::weak_count::swap(boost::detail::weak_count&) -->
            <function-decl name='swap' mangled-name='_ZN5boost6detail10weak_count4swapERS1_' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/shared_count.hpp' line='617' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::detail::weak_count*' -->
              <parameter type-id='type-id-240' is-artificial='yes'/>
              <!-- parameter of type 'boost::detail::weak_count&' -->
              <parameter type-id='type-id-242'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- long int boost::detail::weak_count::use_count() -->
            <function-decl name='use_count' mangled-name='_ZNK5boost6detail10weak_count9use_countEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/shared_count.hpp' line='624' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::detail::weak_count*' -->
              <parameter type-id='type-id-243' is-artificial='yes'/>
              <!-- long int -->
              <return type-id='type-id-54'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- bool boost::detail::weak_count::empty() -->
            <function-decl name='empty' mangled-name='_ZNK5boost6detail10weak_count5emptyEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/shared_count.hpp' line='629' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::detail::weak_count*' -->
              <parameter type-id='type-id-243' is-artificial='yes'/>
              <!-- bool -->
              <return type-id='type-id-11'/>
            </function-decl>
          </member-function>
        </class-decl>
        <!-- struct boost::detail::sp_nothrow_tag -->
        <class-decl name='sp_nothrow_tag' size-in-bits='8' is-struct='yes' visibility='default' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/shared_count.hpp' line='60' column='1' id='type-id-230'/>
        <!-- struct boost::detail::sp_dereference<boost::filesystem::detail::dir_itr_imp> -->
        <class-decl name='sp_dereference&lt;boost::filesystem::detail::dir_itr_imp&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='88' column='1' id='type-id-244'>
          <member-type access='public'>
            <!-- typedef boost::filesystem::detail::dir_itr_imp& boost::detail::sp_dereference<boost::filesystem::detail::dir_itr_imp>::type -->
            <typedef-decl name='type' type-id='type-id-246' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='90' column='1' id='type-id-245'/>
          </member-type>
        </class-decl>
        <!-- struct boost::detail::sp_member_access<boost::filesystem::detail::dir_itr_imp> -->
        <class-decl name='sp_member_access&lt;boost::filesystem::detail::dir_itr_imp&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='137' column='1' id='type-id-247'>
          <member-type access='public'>
            <!-- typedef boost::filesystem::detail::dir_itr_imp* boost::detail::sp_member_access<boost::filesystem::detail::dir_itr_imp>::type -->
            <typedef-decl name='type' type-id='type-id-141' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='139' column='1' id='type-id-248'/>
          </member-type>
        </class-decl>
        <!-- struct boost::detail::sp_array_access<boost::filesystem::detail::dir_itr_imp> -->
        <class-decl name='sp_array_access&lt;boost::filesystem::detail::dir_itr_imp&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='162' column='1' id='type-id-249'/>
        <!-- void boost::detail::sp_pointer_construct<boost::filesystem::detail::dir_itr_imp, boost::filesystem::detail::dir_itr_imp>(boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>*, boost::filesystem::detail::dir_itr_imp*, boost::detail::shared_count&) -->
        <function-decl name='sp_pointer_construct&lt;boost::filesystem::detail::dir_itr_imp, boost::filesystem::detail::dir_itr_imp&gt;' mangled-name='_ZN5boost6detail20sp_pointer_constructINS_10filesystem6detail11dir_itr_impES4_EEvPNS_10shared_ptrIT_EEPT0_RNS0_12shared_countE' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='269' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost6detail20sp_pointer_constructINS_10filesystem6detail11dir_itr_impES4_EEvPNS_10shared_ptrIT_EEPT0_RNS0_12shared_countE'>
          <!-- parameter of type 'boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>*' -->
          <parameter type-id='type-id-250' name='ppx' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='269' column='1'/>
          <!-- parameter of type 'boost::filesystem::detail::dir_itr_imp*' -->
          <parameter type-id='type-id-141' name='p' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='269' column='1'/>
          <!-- parameter of type 'boost::detail::shared_count&' -->
          <parameter type-id='type-id-231' name='pn' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='269' column='1'/>
          <!-- void -->
          <return type-id='type-id-8'/>
        </function-decl>
        <!-- void boost::detail::sp_enable_shared_from_this(...) -->
        <function-decl name='sp_enable_shared_from_this' mangled-name='_ZN5boost6detail26sp_enable_shared_from_thisEz' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='228' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost6detail26sp_enable_shared_from_thisEz'>
          <parameter is-variadic='yes'/>
          <!-- void -->
          <return type-id='type-id-8'/>
        </function-decl>
        <!-- void boost::detail::sp_pointer_construct<boost::filesystem::filesystem_error::m_imp, boost::filesystem::filesystem_error::m_imp>(boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>*, boost::filesystem::filesystem_error::m_imp*, boost::detail::shared_count&) -->
        <function-decl name='sp_pointer_construct&lt;boost::filesystem::filesystem_error::m_imp, boost::filesystem::filesystem_error::m_imp&gt;' mangled-name='_ZN5boost6detail20sp_pointer_constructINS_10filesystem16filesystem_error5m_impES4_EEvPNS_10shared_ptrIT_EEPT0_RNS0_12shared_countE' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='269' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost6detail20sp_pointer_constructINS_10filesystem16filesystem_error5m_impES4_EEvPNS_10shared_ptrIT_EEPT0_RNS0_12shared_countE'>
          <!-- parameter of type 'boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>*' -->
          <parameter type-id='type-id-212' name='ppx' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='269' column='1'/>
          <!-- parameter of type 'boost::filesystem::filesystem_error::m_imp*' -->
          <parameter type-id='type-id-221' name='p' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='269' column='1'/>
          <!-- parameter of type 'boost::detail::shared_count&' -->
          <parameter type-id='type-id-231' name='pn' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='269' column='1'/>
          <!-- void -->
          <return type-id='type-id-8'/>
        </function-decl>
        <!-- struct boost::detail::sp_element<boost::filesystem::filesystem_error::m_imp> -->
        <class-decl name='sp_element&lt;boost::filesystem::filesystem_error::m_imp&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='63' column='1' id='type-id-251'>
          <member-type access='public'>
            <!-- typedef boost::filesystem::filesystem_error::m_imp boost::detail::sp_element<boost::filesystem::filesystem_error::m_imp>::type -->
            <typedef-decl name='type' type-id='type-id-190' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='65' column='1' id='type-id-209'/>
          </member-type>
        </class-decl>
        <!-- struct boost::detail::sp_dereference<boost::filesystem::filesystem_error::m_imp> -->
        <class-decl name='sp_dereference&lt;boost::filesystem::filesystem_error::m_imp&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='88' column='1' id='type-id-252'>
          <member-type access='public'>
            <!-- typedef boost::filesystem::filesystem_error::m_imp& boost::detail::sp_dereference<boost::filesystem::filesystem_error::m_imp>::type -->
            <typedef-decl name='type' type-id='type-id-253' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='90' column='1' id='type-id-217'/>
          </member-type>
        </class-decl>
        <!-- struct boost::detail::sp_member_access<boost::filesystem::filesystem_error::m_imp> -->
        <class-decl name='sp_member_access&lt;boost::filesystem::filesystem_error::m_imp&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='137' column='1' id='type-id-254'>
          <member-type access='public'>
            <!-- typedef boost::filesystem::filesystem_error::m_imp* boost::detail::sp_member_access<boost::filesystem::filesystem_error::m_imp>::type -->
            <typedef-decl name='type' type-id='type-id-221' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='139' column='1' id='type-id-218'/>
          </member-type>
        </class-decl>
        <!-- struct boost::detail::sp_array_access<boost::filesystem::filesystem_error::m_imp> -->
        <class-decl name='sp_array_access&lt;boost::filesystem::filesystem_error::m_imp&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='162' column='1' id='type-id-255'/>
        <!-- struct boost::detail::operator_arrow_dispatch<const boost::filesystem::path &, const boost::filesystem::path *> -->
        <class-decl name='operator_arrow_dispatch&lt;const boost::filesystem::path &amp;, const boost::filesystem::path *&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='319' column='1' id='type-id-256'>
          <member-type access='public'>
            <!-- typedef const boost::filesystem::path* boost::detail::operator_arrow_dispatch<const boost::filesystem::path &, const boost::filesystem::path *>::result_type -->
            <typedef-decl name='result_type' type-id='type-id-158' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='321' column='1' id='type-id-257'/>
          </member-type>
          <member-function access='public' static='yes'>
            <!-- boost::detail::operator_arrow_dispatch<const boost::filesystem::path &, const boost::filesystem::path *>::result_type boost::detail::operator_arrow_dispatch<const boost::filesystem::path &, const boost::filesystem::path *>::apply() -->
            <function-decl name='apply' mangled-name='_ZN5boost6detail23operator_arrow_dispatchIRKNS_10filesystem4pathEPS4_E5applyES5_' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='322' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost6detail23operator_arrow_dispatchIRKNS_10filesystem4pathEPS4_E5applyES5_'>
              <!-- parameter of type 'const boost::filesystem::path&' -->
              <parameter type-id='type-id-143'/>
              <!-- typedef boost::detail::operator_arrow_dispatch<const boost::filesystem::path &, const boost::filesystem::path *>::result_type -->
              <return type-id='type-id-257'/>
            </function-decl>
          </member-function>
        </class-decl>
        <!-- struct boost::detail::operator_brackets_result<boost::filesystem::path::iterator, const boost::filesystem::path, const boost::filesystem::path &> -->
        <class-decl name='operator_brackets_result&lt;boost::filesystem::path::iterator, const boost::filesystem::path, const boost::filesystem::path &amp;&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='383' column='1' id='type-id-258'>
          <member-type access='public'>
            <!-- typedef boost::mpl::if_<boost::detail::use_operator_brackets_proxy<const boost::filesystem::path, const boost::filesystem::path &>, boost::detail::operator_brackets_proxy<boost::filesystem::path::iterator>, const boost::filesystem::path>::type boost::detail::operator_brackets_result<boost::filesystem::path::iterator, const boost::filesystem::path, const boost::filesystem::path &>::type -->
            <typedef-decl name='type' type-id='type-id-260' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='389' column='1' id='type-id-259'/>
          </member-type>
        </class-decl>
        <!-- class boost::detail::operator_brackets_proxy<boost::filesystem::path::iterator> -->
        <class-decl name='operator_brackets_proxy&lt;boost::filesystem::path::iterator&gt;' visibility='default' is-declaration-only='yes' id='type-id-261'/>
        <!-- struct boost::detail::operator_arrow_dispatch<boost::filesystem::directory_entry &, boost::filesystem::directory_entry *> -->
        <class-decl name='operator_arrow_dispatch&lt;boost::filesystem::directory_entry &amp;, boost::filesystem::directory_entry *&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='319' column='1' id='type-id-262'>
          <member-type access='public'>
            <!-- typedef boost::filesystem::directory_entry* boost::detail::operator_arrow_dispatch<boost::filesystem::directory_entry &, boost::filesystem::directory_entry *>::result_type -->
            <typedef-decl name='result_type' type-id='type-id-179' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='321' column='1' id='type-id-263'/>
          </member-type>
          <member-function access='public' static='yes'>
            <!-- boost::detail::operator_arrow_dispatch<boost::filesystem::directory_entry &, boost::filesystem::directory_entry *>::result_type boost::detail::operator_arrow_dispatch<boost::filesystem::directory_entry &, boost::filesystem::directory_entry *>::apply() -->
            <function-decl name='apply' mangled-name='_ZN5boost6detail23operator_arrow_dispatchIRNS_10filesystem15directory_entryEPS3_E5applyES4_' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='322' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost6detail23operator_arrow_dispatchIRNS_10filesystem15directory_entryEPS3_E5applyES4_'>
              <!-- parameter of type 'boost::filesystem::directory_entry&' -->
              <parameter type-id='type-id-264'/>
              <!-- typedef boost::detail::operator_arrow_dispatch<boost::filesystem::directory_entry &, boost::filesystem::directory_entry *>::result_type -->
              <return type-id='type-id-263'/>
            </function-decl>
          </member-function>
        </class-decl>
        <!-- struct boost::detail::operator_brackets_result<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::filesystem::directory_entry &> -->
        <class-decl name='operator_brackets_result&lt;boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::filesystem::directory_entry &amp;&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='383' column='1' id='type-id-265'>
          <member-type access='public'>
            <!-- typedef boost::mpl::if_<boost::detail::use_operator_brackets_proxy<boost::filesystem::directory_entry, boost::filesystem::directory_entry &>, boost::detail::operator_brackets_proxy<boost::filesystem::directory_iterator>, boost::filesystem::directory_entry>::type boost::detail::operator_brackets_result<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::filesystem::directory_entry &>::type -->
            <typedef-decl name='type' type-id='type-id-267' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='389' column='1' id='type-id-266'/>
          </member-type>
        </class-decl>
        <!-- class boost::detail::operator_brackets_proxy<boost::filesystem::directory_iterator> -->
        <class-decl name='operator_brackets_proxy&lt;boost::filesystem::directory_iterator&gt;' visibility='default' is-declaration-only='yes' id='type-id-268'/>
        <!-- struct boost::detail::addr_impl_ref<boost::filesystem::directory_entry> -->
        <class-decl name='addr_impl_ref&lt;boost::filesystem::directory_entry&gt;' size-in-bits='64' is-struct='yes' visibility='default' filepath='src/third_party/boost-1.56.0/boost/core/addressof.hpp' line='25' column='1' id='type-id-269'>
          <data-member access='public' layout-offset-in-bits='0'>
            <!-- boost::filesystem::directory_entry& boost::detail::addr_impl_ref<boost::filesystem::directory_entry>::v_ -->
            <var-decl name='v_' type-id='type-id-264' visibility='default' filepath='src/third_party/boost-1.56.0/boost/core/addressof.hpp' line='27' column='1'/>
          </data-member>
          <member-function access='public'>
            <!-- void boost::detail::addr_impl_ref<boost::filesystem::directory_entry>::addr_impl_ref(boost::filesystem::directory_entry&) -->
            <function-decl name='addr_impl_ref' mangled-name='_ZN5boost6detail13addr_impl_refINS_10filesystem15directory_entryEEC2ERS3_' filepath='src/third_party/boost-1.56.0/boost/core/addressof.hpp' line='29' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::detail::addr_impl_ref<boost::filesystem::directory_entry>*' -->
              <parameter type-id='type-id-270' is-artificial='yes'/>
              <!-- parameter of type 'boost::filesystem::directory_entry&' -->
              <parameter type-id='type-id-264'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- boost::filesystem::directory_entry& boost::detail::addr_impl_ref<boost::filesystem::directory_entry>::operator boost::filesystem::directory_entry &() -->
            <function-decl name='operator boost::filesystem::directory_entry &amp;' mangled-name='_ZNK5boost6detail13addr_impl_refINS_10filesystem15directory_entryEEcvRS3_Ev' filepath='src/third_party/boost-1.56.0/boost/core/addressof.hpp' line='30' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::detail::addr_impl_ref<boost::filesystem::directory_entry>*' -->
              <parameter type-id='type-id-271' is-artificial='yes'/>
              <!-- boost::filesystem::directory_entry& -->
              <return type-id='type-id-264'/>
            </function-decl>
          </member-function>
          <member-function access='private'>
            <!-- boost::detail::addr_impl_ref<boost::filesystem::directory_entry>& boost::detail::addr_impl_ref<boost::filesystem::directory_entry>::operator=(const boost::detail::addr_impl_ref<boost::filesystem::directory_entry>&) -->
            <function-decl name='operator=' mangled-name='_ZN5boost6detail13addr_impl_refINS_10filesystem15directory_entryEEaSERKS4_' filepath='src/third_party/boost-1.56.0/boost/core/addressof.hpp' line='33' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::detail::addr_impl_ref<boost::filesystem::directory_entry>*' -->
              <parameter type-id='type-id-270' is-artificial='yes'/>
              <!-- parameter of type 'const boost::detail::addr_impl_ref<boost::filesystem::directory_entry>&' -->
              <parameter type-id='type-id-272'/>
              <!-- boost::detail::addr_impl_ref<boost::filesystem::directory_entry>& -->
              <return type-id='type-id-273'/>
            </function-decl>
          </member-function>
        </class-decl>
        <!-- struct boost::detail::addressof_impl<boost::filesystem::directory_entry> -->
        <class-decl name='addressof_impl&lt;boost::filesystem::directory_entry&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='src/third_party/boost-1.56.0/boost/core/addressof.hpp' line='36' column='1' id='type-id-274'>
          <member-function access='public' static='yes'>
            <!-- boost::filesystem::directory_entry* boost::detail::addressof_impl<boost::filesystem::directory_entry>::f(long int) -->
            <function-decl name='f' mangled-name='_ZN5boost6detail14addressof_implINS_10filesystem15directory_entryEE1fERS3_l' filepath='src/third_party/boost-1.56.0/boost/core/addressof.hpp' line='38' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- parameter of type 'boost::filesystem::directory_entry&' -->
              <parameter type-id='type-id-264'/>
              <!-- parameter of type 'long int' -->
              <parameter type-id='type-id-54'/>
              <!-- boost::filesystem::directory_entry* -->
              <return type-id='type-id-179'/>
            </function-decl>
          </member-function>
          <member-function access='public' static='yes'>
            <!-- boost::filesystem::directory_entry* boost::detail::addressof_impl<boost::filesystem::directory_entry>::f(int) -->
            <function-decl name='f' mangled-name='_ZN5boost6detail14addressof_implINS_10filesystem15directory_entryEE1fEPS3_i' filepath='src/third_party/boost-1.56.0/boost/core/addressof.hpp' line='44' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- parameter of type 'boost::filesystem::directory_entry*' -->
              <parameter type-id='type-id-179'/>
              <!-- parameter of type 'int' -->
              <parameter type-id='type-id-5'/>
              <!-- boost::filesystem::directory_entry* -->
              <return type-id='type-id-179'/>
            </function-decl>
          </member-function>
        </class-decl>
        <!-- class boost::detail::sp_counted_impl_p<boost::filesystem::detail::dir_itr_imp> -->
        <class-decl name='sp_counted_impl_p&lt;boost::filesystem::detail::dir_itr_imp&gt;' size-in-bits='192' visibility='default' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/sp_counted_impl.hpp' line='53' column='1' id='type-id-275'>
        <!-- class boost::detail::sp_counted_base -->
          <base-class access='public' layout-offset-in-bits='0' type-id='type-id-233'/>
          <data-member access='private' layout-offset-in-bits='128'>
            <!-- boost::filesystem::detail::dir_itr_imp* boost::detail::sp_counted_impl_p<boost::filesystem::detail::dir_itr_imp>::px_ -->
            <var-decl name='px_' type-id='type-id-141' visibility='default' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/sp_counted_impl.hpp' line='57' column='1'/>
          </data-member>
          <member-function access='private'>
            <!-- void boost::detail::sp_counted_impl_p<boost::filesystem::detail::dir_itr_imp>::sp_counted_impl_p(const boost::detail::sp_counted_impl_p<boost::filesystem::detail::dir_itr_imp>&) -->
            <function-decl name='sp_counted_impl_p' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/sp_counted_impl.hpp' line='59' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::detail::sp_counted_impl_p<boost::filesystem::detail::dir_itr_imp>*' -->
              <parameter type-id='type-id-276' is-artificial='yes'/>
              <!-- parameter of type 'const boost::detail::sp_counted_impl_p<boost::filesystem::detail::dir_itr_imp>&' -->
              <parameter type-id='type-id-277'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='private'>
            <!-- boost::detail::sp_counted_impl_p<boost::filesystem::detail::dir_itr_imp>& boost::detail::sp_counted_impl_p<boost::filesystem::detail::dir_itr_imp>::operator=(const boost::detail::sp_counted_impl_p<boost::filesystem::detail::dir_itr_imp>&) -->
            <function-decl name='operator=' mangled-name='_ZN5boost6detail17sp_counted_impl_pINS_10filesystem6detail11dir_itr_impEEaSERKS5_' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/sp_counted_impl.hpp' line='60' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::detail::sp_counted_impl_p<boost::filesystem::detail::dir_itr_imp>*' -->
              <parameter type-id='type-id-276' is-artificial='yes'/>
              <!-- parameter of type 'const boost::detail::sp_counted_impl_p<boost::filesystem::detail::dir_itr_imp>&' -->
              <parameter type-id='type-id-277'/>
              <!-- boost::detail::sp_counted_impl_p<boost::filesystem::detail::dir_itr_imp>& -->
              <return type-id='type-id-278'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- void boost::detail::sp_counted_impl_p<boost::filesystem::detail::dir_itr_imp>::sp_counted_impl_p(boost::filesystem::detail::dir_itr_imp*) -->
            <function-decl name='sp_counted_impl_p' mangled-name='_ZN5boost6detail17sp_counted_impl_pINS_10filesystem6detail11dir_itr_impEEC2EPS4_' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/sp_counted_impl.hpp' line='66' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost6detail17sp_counted_impl_pINS_10filesystem6detail11dir_itr_impEEC2EPS4_'>
              <!-- implicit parameter of type 'boost::detail::sp_counted_impl_p<boost::filesystem::detail::dir_itr_imp>*' -->
              <parameter type-id='type-id-276' is-artificial='yes'/>
              <!-- parameter of type 'boost::filesystem::detail::dir_itr_imp*' -->
              <parameter type-id='type-id-141'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public' vtable-offset='2'>
            <!-- void boost::detail::sp_counted_impl_p<boost::filesystem::detail::dir_itr_imp>::dispose() -->
            <function-decl name='dispose' mangled-name='_ZN5boost6detail17sp_counted_impl_pINS_10filesystem6detail11dir_itr_impEE7disposeEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/sp_counted_impl.hpp' line='73' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost6detail17sp_counted_impl_pINS_10filesystem6detail11dir_itr_impEE7disposeEv'>
              <!-- implicit parameter of type 'boost::detail::sp_counted_impl_p<boost::filesystem::detail::dir_itr_imp>*' -->
              <parameter type-id='type-id-276' is-artificial='yes'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public' vtable-offset='4'>
            <!-- void* boost::detail::sp_counted_impl_p<boost::filesystem::detail::dir_itr_imp>::get_deleter(const boost::detail::sp_typeinfo&) -->
            <function-decl name='get_deleter' mangled-name='_ZN5boost6detail17sp_counted_impl_pINS_10filesystem6detail11dir_itr_impEE11get_deleterERKSt9type_info' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/sp_counted_impl.hpp' line='81' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost6detail17sp_counted_impl_pINS_10filesystem6detail11dir_itr_impEE11get_deleterERKSt9type_info'>
              <!-- implicit parameter of type 'boost::detail::sp_counted_impl_p<boost::filesystem::detail::dir_itr_imp>*' -->
              <parameter type-id='type-id-276' is-artificial='yes'/>
              <!-- parameter of type 'const boost::detail::sp_typeinfo&' -->
              <parameter type-id='type-id-220'/>
              <!-- void* -->
              <return type-id='type-id-55'/>
            </function-decl>
          </member-function>
          <member-function access='public' vtable-offset='5'>
            <!-- void* boost::detail::sp_counted_impl_p<boost::filesystem::detail::dir_itr_imp>::get_untyped_deleter() -->
            <function-decl name='get_untyped_deleter' mangled-name='_ZN5boost6detail17sp_counted_impl_pINS_10filesystem6detail11dir_itr_impEE19get_untyped_deleterEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/sp_counted_impl.hpp' line='86' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost6detail17sp_counted_impl_pINS_10filesystem6detail11dir_itr_impEE19get_untyped_deleterEv'>
              <!-- implicit parameter of type 'boost::detail::sp_counted_impl_p<boost::filesystem::detail::dir_itr_imp>*' -->
              <parameter type-id='type-id-276' is-artificial='yes'/>
              <!-- void* -->
              <return type-id='type-id-55'/>
            </function-decl>
          </member-function>
        </class-decl>
        <!-- class boost::detail::sp_counted_impl_p<boost::filesystem::filesystem_error::m_imp> -->
        <class-decl name='sp_counted_impl_p&lt;boost::filesystem::filesystem_error::m_imp&gt;' size-in-bits='192' visibility='default' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/sp_counted_impl.hpp' line='53' column='1' id='type-id-279'>
        <!-- class boost::detail::sp_counted_base -->
          <base-class access='public' layout-offset-in-bits='0' type-id='type-id-233'/>
          <data-member access='private' layout-offset-in-bits='128'>
            <!-- boost::filesystem::filesystem_error::m_imp* boost::detail::sp_counted_impl_p<boost::filesystem::filesystem_error::m_imp>::px_ -->
            <var-decl name='px_' type-id='type-id-221' visibility='default' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/sp_counted_impl.hpp' line='57' column='1'/>
          </data-member>
          <member-function access='private'>
            <!-- void boost::detail::sp_counted_impl_p<boost::filesystem::filesystem_error::m_imp>::sp_counted_impl_p(const boost::detail::sp_counted_impl_p<boost::filesystem::filesystem_error::m_imp>&) -->
            <function-decl name='sp_counted_impl_p' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/sp_counted_impl.hpp' line='59' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::detail::sp_counted_impl_p<boost::filesystem::filesystem_error::m_imp>*' -->
              <parameter type-id='type-id-280' is-artificial='yes'/>
              <!-- parameter of type 'const boost::detail::sp_counted_impl_p<boost::filesystem::filesystem_error::m_imp>&' -->
              <parameter type-id='type-id-281'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='private'>
            <!-- boost::detail::sp_counted_impl_p<boost::filesystem::filesystem_error::m_imp>& boost::detail::sp_counted_impl_p<boost::filesystem::filesystem_error::m_imp>::operator=(const boost::detail::sp_counted_impl_p<boost::filesystem::filesystem_error::m_imp>&) -->
            <function-decl name='operator=' mangled-name='_ZN5boost6detail17sp_counted_impl_pINS_10filesystem16filesystem_error5m_impEEaSERKS5_' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/sp_counted_impl.hpp' line='60' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::detail::sp_counted_impl_p<boost::filesystem::filesystem_error::m_imp>*' -->
              <parameter type-id='type-id-280' is-artificial='yes'/>
              <!-- parameter of type 'const boost::detail::sp_counted_impl_p<boost::filesystem::filesystem_error::m_imp>&' -->
              <parameter type-id='type-id-281'/>
              <!-- boost::detail::sp_counted_impl_p<boost::filesystem::filesystem_error::m_imp>& -->
              <return type-id='type-id-282'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- void boost::detail::sp_counted_impl_p<boost::filesystem::filesystem_error::m_imp>::sp_counted_impl_p(boost::filesystem::filesystem_error::m_imp*) -->
            <function-decl name='sp_counted_impl_p' mangled-name='_ZN5boost6detail17sp_counted_impl_pINS_10filesystem16filesystem_error5m_impEEC2EPS4_' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/sp_counted_impl.hpp' line='66' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost6detail17sp_counted_impl_pINS_10filesystem16filesystem_error5m_impEEC2EPS4_'>
              <!-- implicit parameter of type 'boost::detail::sp_counted_impl_p<boost::filesystem::filesystem_error::m_imp>*' -->
              <parameter type-id='type-id-280' is-artificial='yes'/>
              <!-- parameter of type 'boost::filesystem::filesystem_error::m_imp*' -->
              <parameter type-id='type-id-221'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public' vtable-offset='2'>
            <!-- void boost::detail::sp_counted_impl_p<boost::filesystem::filesystem_error::m_imp>::dispose() -->
            <function-decl name='dispose' mangled-name='_ZN5boost6detail17sp_counted_impl_pINS_10filesystem16filesystem_error5m_impEE7disposeEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/sp_counted_impl.hpp' line='73' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost6detail17sp_counted_impl_pINS_10filesystem16filesystem_error5m_impEE7disposeEv'>
              <!-- implicit parameter of type 'boost::detail::sp_counted_impl_p<boost::filesystem::filesystem_error::m_imp>*' -->
              <parameter type-id='type-id-280' is-artificial='yes'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public' vtable-offset='4'>
            <!-- void* boost::detail::sp_counted_impl_p<boost::filesystem::filesystem_error::m_imp>::get_deleter(const boost::detail::sp_typeinfo&) -->
            <function-decl name='get_deleter' mangled-name='_ZN5boost6detail17sp_counted_impl_pINS_10filesystem16filesystem_error5m_impEE11get_deleterERKSt9type_info' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/sp_counted_impl.hpp' line='81' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost6detail17sp_counted_impl_pINS_10filesystem16filesystem_error5m_impEE11get_deleterERKSt9type_info'>
              <!-- implicit parameter of type 'boost::detail::sp_counted_impl_p<boost::filesystem::filesystem_error::m_imp>*' -->
              <parameter type-id='type-id-280' is-artificial='yes'/>
              <!-- parameter of type 'const boost::detail::sp_typeinfo&' -->
              <parameter type-id='type-id-220'/>
              <!-- void* -->
              <return type-id='type-id-55'/>
            </function-decl>
          </member-function>
          <member-function access='public' vtable-offset='5'>
            <!-- void* boost::detail::sp_counted_impl_p<boost::filesystem::filesystem_error::m_imp>::get_untyped_deleter() -->
            <function-decl name='get_untyped_deleter' mangled-name='_ZN5boost6detail17sp_counted_impl_pINS_10filesystem16filesystem_error5m_impEE19get_untyped_deleterEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/sp_counted_impl.hpp' line='86' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost6detail17sp_counted_impl_pINS_10filesystem16filesystem_error5m_impEE19get_untyped_deleterEv'>
              <!-- implicit parameter of type 'boost::detail::sp_counted_impl_p<boost::filesystem::filesystem_error::m_imp>*' -->
              <parameter type-id='type-id-280' is-artificial='yes'/>
              <!-- void* -->
              <return type-id='type-id-55'/>
            </function-decl>
          </member-function>
        </class-decl>
      </namespace-decl>
      <!-- class boost::shared_ptr<boost::filesystem::detail::dir_itr_imp> -->
      <class-decl name='shared_ptr&lt;boost::filesystem::detail::dir_itr_imp&gt;' size-in-bits='128' visibility='default' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='323' column='1' id='type-id-196'>
        <member-type access='private'>
          <!-- typedef boost::detail::sp_element<boost::filesystem::detail::dir_itr_imp>::type boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>::element_type -->
          <typedef-decl name='element_type' type-id='type-id-224' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='332' column='1' id='type-id-283'/>
        </member-type>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>::element_type* boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>::px -->
          <var-decl name='px' type-id='type-id-284' visibility='default' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='723' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- boost::detail::shared_count boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>::pn -->
          <var-decl name='pn' type-id='type-id-211' visibility='default' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='724' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>::shared_ptr() -->
          <function-decl name='shared_ptr' mangled-name='_ZN5boost10shared_ptrINS_10filesystem6detail11dir_itr_impEEC2Ev' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='334' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10shared_ptrINS_10filesystem6detail11dir_itr_impEEC2Ev'>
            <!-- implicit parameter of type 'boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>*' -->
            <parameter type-id='type-id-250' is-artificial='yes'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>::shared_ptr(const boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>&) -->
          <function-decl name='shared_ptr' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='392' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>*' -->
            <parameter type-id='type-id-250' is-artificial='yes'/>
            <!-- parameter of type 'const boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>&' -->
            <parameter type-id='type-id-285'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>& boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>::operator=(const boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>&) -->
          <function-decl name='operator=' mangled-name='_ZN5boost10shared_ptrINS_10filesystem6detail11dir_itr_impEEaSERKS4_' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='500' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>*' -->
            <parameter type-id='type-id-250' is-artificial='yes'/>
            <!-- parameter of type 'const boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>&' -->
            <parameter type-id='type-id-285'/>
            <!-- boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>& -->
            <return type-id='type-id-286'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>::shared_ptr(boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>&&) -->
          <function-decl name='shared_ptr' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='563' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>*' -->
            <parameter type-id='type-id-250' is-artificial='yes'/>
            <!-- parameter of type 'boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>&&' -->
            <parameter type-id='type-id-287'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>& boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>::operator=(boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>&&) -->
          <function-decl name='operator=' mangled-name='_ZN5boost10shared_ptrINS_10filesystem6detail11dir_itr_impEEaSEOS4_' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='587' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>*' -->
            <parameter type-id='type-id-250' is-artificial='yes'/>
            <!-- parameter of type 'boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>&&' -->
            <parameter type-id='type-id-287'/>
            <!-- boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>& -->
            <return type-id='type-id-286'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>& boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>::operator=() -->
          <function-decl name='operator=' mangled-name='_ZN5boost10shared_ptrINS_10filesystem6detail11dir_itr_impEEaSEDn' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='604' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>*' -->
            <parameter type-id='type-id-250' is-artificial='yes'/>
            <!-- boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>& -->
            <return type-id='type-id-286'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>::reset() -->
          <function-decl name='reset' mangled-name='_ZN5boost10shared_ptrINS_10filesystem6detail11dir_itr_impEE5resetEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='612' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10shared_ptrINS_10filesystem6detail11dir_itr_impEE5resetEv'>
            <!-- implicit parameter of type 'boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>*' -->
            <parameter type-id='type-id-250' is-artificial='yes'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- boost::detail::sp_dereference<boost::filesystem::detail::dir_itr_imp>::type boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>::operator*() -->
          <function-decl name='operator*' mangled-name='_ZNK5boost10shared_ptrINS_10filesystem6detail11dir_itr_impEEdeEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='639' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>*' -->
            <parameter type-id='type-id-288' is-artificial='yes'/>
            <!-- typedef boost::detail::sp_dereference<boost::filesystem::detail::dir_itr_imp>::type -->
            <return type-id='type-id-245'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- boost::detail::sp_member_access<boost::filesystem::detail::dir_itr_imp>::type boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>::operator&#45;>() -->
          <function-decl name='operator-&gt;' mangled-name='_ZNK5boost10shared_ptrINS_10filesystem6detail11dir_itr_impEEptEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='646' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10shared_ptrINS_10filesystem6detail11dir_itr_impEEptEv'>
            <!-- implicit parameter of type 'const boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>*' -->
            <parameter type-id='type-id-288' is-artificial='yes'/>
            <!-- typedef boost::detail::sp_member_access<boost::filesystem::detail::dir_itr_imp>::type -->
            <return type-id='type-id-248'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>::operator[](std::ptrdiff_t) -->
          <function-decl name='operator[]' mangled-name='_ZNK5boost10shared_ptrINS_10filesystem6detail11dir_itr_impEEixEl' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='653' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>*' -->
            <parameter type-id='type-id-288' is-artificial='yes'/>
            <!-- parameter of type 'typedef std::ptrdiff_t' -->
            <parameter type-id='type-id-219'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>::element_type* boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>::get() -->
          <function-decl name='get' mangled-name='_ZNK5boost10shared_ptrINS_10filesystem6detail11dir_itr_impEE3getEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='661' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10shared_ptrINS_10filesystem6detail11dir_itr_impEE3getEv'>
            <!-- implicit parameter of type 'const boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>*' -->
            <parameter type-id='type-id-288' is-artificial='yes'/>
            <!-- boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>::element_type* -->
            <return type-id='type-id-284'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>::operator bool() -->
          <function-decl name='operator bool' mangled-name='_ZNK5boost10shared_ptrINS_10filesystem6detail11dir_itr_impEEcvbEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/operator_bool.hpp' line='11' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>*' -->
            <parameter type-id='type-id-288' is-artificial='yes'/>
            <!-- bool -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>::operator!() -->
          <function-decl name='operator!' mangled-name='_ZNK5boost10shared_ptrINS_10filesystem6detail11dir_itr_impEEntEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/operator_bool.hpp' line='60' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>*' -->
            <parameter type-id='type-id-288' is-artificial='yes'/>
            <!-- bool -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>::unique() -->
          <function-decl name='unique' mangled-name='_ZNK5boost10shared_ptrINS_10filesystem6detail11dir_itr_impEE6uniqueEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='669' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>*' -->
            <parameter type-id='type-id-288' is-artificial='yes'/>
            <!-- bool -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- long int boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>::use_count() -->
          <function-decl name='use_count' mangled-name='_ZNK5boost10shared_ptrINS_10filesystem6detail11dir_itr_impEE9use_countEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='674' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>*' -->
            <parameter type-id='type-id-288' is-artificial='yes'/>
            <!-- long int -->
            <return type-id='type-id-54'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>::swap(boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>&) -->
          <function-decl name='swap' mangled-name='_ZN5boost10shared_ptrINS_10filesystem6detail11dir_itr_impEE4swapERS4_' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='679' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10shared_ptrINS_10filesystem6detail11dir_itr_impEE4swapERS4_'>
            <!-- implicit parameter of type 'boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>*' -->
            <parameter type-id='type-id-250' is-artificial='yes'/>
            <!-- parameter of type 'boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>&' -->
            <parameter type-id='type-id-286'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void* boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>::_internal_get_deleter(const boost::detail::sp_typeinfo&) -->
          <function-decl name='_internal_get_deleter' mangled-name='_ZNK5boost10shared_ptrINS_10filesystem6detail11dir_itr_impEE21_internal_get_deleterERKSt9type_info' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='695' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>*' -->
            <parameter type-id='type-id-288' is-artificial='yes'/>
            <!-- parameter of type 'const boost::detail::sp_typeinfo&' -->
            <parameter type-id='type-id-220'/>
            <!-- void* -->
            <return type-id='type-id-55'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void* boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>::_internal_get_untyped_deleter() -->
          <function-decl name='_internal_get_untyped_deleter' mangled-name='_ZNK5boost10shared_ptrINS_10filesystem6detail11dir_itr_impEE29_internal_get_untyped_deleterEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='700' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>*' -->
            <parameter type-id='type-id-288' is-artificial='yes'/>
            <!-- void* -->
            <return type-id='type-id-55'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>::_internal_equiv(const boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>&) -->
          <function-decl name='_internal_equiv' mangled-name='_ZNK5boost10shared_ptrINS_10filesystem6detail11dir_itr_impEE15_internal_equivERKS4_' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='705' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>*' -->
            <parameter type-id='type-id-288' is-artificial='yes'/>
            <!-- parameter of type 'const boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>&' -->
            <parameter type-id='type-id-285'/>
            <!-- bool -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>::shared_ptr<boost::filesystem::detail::dir_itr_imp>(boost::filesystem::detail::dir_itr_imp*) -->
          <function-decl name='shared_ptr&lt;boost::filesystem::detail::dir_itr_imp&gt;' mangled-name='_ZN5boost10shared_ptrINS_10filesystem6detail11dir_itr_impEEC2IS3_EEPT_' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='347' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10shared_ptrINS_10filesystem6detail11dir_itr_impEEC2IS3_EEPT_'>
            <!-- implicit parameter of type 'boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>*' -->
            <parameter type-id='type-id-250' is-artificial='yes'/>
            <!-- parameter of type 'boost::filesystem::detail::dir_itr_imp*' -->
            <parameter type-id='type-id-141'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- namespace boost::core -->
      <namespace-decl name='core'>
        <!-- typedef std::type_info boost::core::typeinfo -->
        <typedef-decl name='typeinfo' type-id='type-id-289' filepath='src/third_party/boost-1.56.0/boost/core/typeinfo.hpp' line='134' column='1' id='type-id-237'/>
      </namespace-decl>
      <!-- class boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long> -->
      <class-decl name='iterator_facade&lt;boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &amp;, long&gt;' size-in-bits='8' visibility='default' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='592' column='1' id='type-id-157'>
        <member-type access='private'>
          <!-- typedef const boost::filesystem::path& boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>::reference -->
          <typedef-decl name='reference' type-id='type-id-143' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='630' column='1' id='type-id-290'/>
        </member-type>
        <member-type access='private'>
          <!-- typedef boost::detail::operator_arrow_dispatch<const boost::filesystem::path &, const boost::filesystem::path *>::result_type boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>::pointer -->
          <typedef-decl name='pointer' type-id='type-id-257' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='633' column='1' id='type-id-291'/>
        </member-type>
        <member-type access='private'>
          <!-- typedef long int boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>::difference_type -->
          <typedef-decl name='difference_type' type-id='type-id-54' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='631' column='1' id='type-id-292'/>
        </member-type>
        <member-function access='private'>
          <!-- boost::filesystem::path::iterator& boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>::derived() -->
          <function-decl name='derived' mangled-name='_ZN5boost15iterator_facadeINS_10filesystem4path8iteratorEKS2_NS_27bidirectional_traversal_tagERS4_lE7derivedEv' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='604' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost15iterator_facadeINS_10filesystem4path8iteratorEKS2_NS_27bidirectional_traversal_tagERS4_lE7derivedEv'>
            <!-- implicit parameter of type 'boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>*' -->
            <parameter type-id='type-id-293' is-artificial='yes'/>
            <!-- boost::filesystem::path::iterator& -->
            <return type-id='type-id-175'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- const boost::filesystem::path::iterator& boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>::derived() -->
          <function-decl name='derived' mangled-name='_ZNK5boost15iterator_facadeINS_10filesystem4path8iteratorEKS2_NS_27bidirectional_traversal_tagERS4_lE7derivedEv' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='609' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost15iterator_facadeINS_10filesystem4path8iteratorEKS2_NS_27bidirectional_traversal_tagERS4_lE7derivedEv'>
            <!-- implicit parameter of type 'const boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>*' -->
            <parameter type-id='type-id-294' is-artificial='yes'/>
            <!-- const boost::filesystem::path::iterator& -->
            <return type-id='type-id-160'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>::reference boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>::operator*() -->
          <function-decl name='operator*' mangled-name='_ZNK5boost15iterator_facadeINS_10filesystem4path8iteratorEKS2_NS_27bidirectional_traversal_tagERS4_lEdeEv' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='637' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost15iterator_facadeINS_10filesystem4path8iteratorEKS2_NS_27bidirectional_traversal_tagERS4_lEdeEv'>
            <!-- implicit parameter of type 'const boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>*' -->
            <parameter type-id='type-id-294' is-artificial='yes'/>
            <!-- typedef boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>::reference -->
            <return type-id='type-id-290'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>::pointer boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>::operator&#45;>() -->
          <function-decl name='operator-&gt;' mangled-name='_ZNK5boost15iterator_facadeINS_10filesystem4path8iteratorEKS2_NS_27bidirectional_traversal_tagERS4_lEptEv' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='642' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost15iterator_facadeINS_10filesystem4path8iteratorEKS2_NS_27bidirectional_traversal_tagERS4_lEptEv'>
            <!-- implicit parameter of type 'const boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>*' -->
            <parameter type-id='type-id-294' is-artificial='yes'/>
            <!-- typedef boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>::pointer -->
            <return type-id='type-id-291'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- boost::detail::operator_brackets_result<boost::filesystem::path::iterator, const boost::filesystem::path, const boost::filesystem::path &>::type boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>::operator[](boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>::difference_type) -->
          <function-decl name='operator[]' mangled-name='_ZNK5boost15iterator_facadeINS_10filesystem4path8iteratorEKS2_NS_27bidirectional_traversal_tagERS4_lEixEl' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='648' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>*' -->
            <parameter type-id='type-id-294' is-artificial='yes'/>
            <!-- parameter of type 'typedef boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>::difference_type' -->
            <parameter type-id='type-id-292'/>
            <!-- typedef boost::detail::operator_brackets_result<boost::filesystem::path::iterator, const boost::filesystem::path, const boost::filesystem::path &>::type -->
            <return type-id='type-id-259'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- boost::filesystem::path::iterator& boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>::operator++() -->
          <function-decl name='operator++' mangled-name='_ZN5boost15iterator_facadeINS_10filesystem4path8iteratorEKS2_NS_27bidirectional_traversal_tagERS4_lEppEv' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='658' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost15iterator_facadeINS_10filesystem4path8iteratorEKS2_NS_27bidirectional_traversal_tagERS4_lEppEv'>
            <!-- implicit parameter of type 'boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>*' -->
            <parameter type-id='type-id-293' is-artificial='yes'/>
            <!-- boost::filesystem::path::iterator& -->
            <return type-id='type-id-175'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- boost::filesystem::path::iterator& boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>::operator&#45;&#45;() -->
          <function-decl name='operator--' mangled-name='_ZN5boost15iterator_facadeINS_10filesystem4path8iteratorEKS2_NS_27bidirectional_traversal_tagERS4_lEmmEv' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='675' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost15iterator_facadeINS_10filesystem4path8iteratorEKS2_NS_27bidirectional_traversal_tagERS4_lEmmEv'>
            <!-- implicit parameter of type 'boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>*' -->
            <parameter type-id='type-id-293' is-artificial='yes'/>
            <!-- boost::filesystem::path::iterator& -->
            <return type-id='type-id-175'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- boost::filesystem::path::iterator boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>::operator&#45;&#45;(int) -->
          <function-decl name='operator--' mangled-name='_ZN5boost15iterator_facadeINS_10filesystem4path8iteratorEKS2_NS_27bidirectional_traversal_tagERS4_lEmmEi' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='681' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost15iterator_facadeINS_10filesystem4path8iteratorEKS2_NS_27bidirectional_traversal_tagERS4_lEmmEi'>
            <!-- implicit parameter of type 'boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>*' -->
            <parameter type-id='type-id-293' is-artificial='yes'/>
            <!-- parameter of type 'int' -->
            <parameter type-id='type-id-5'/>
            <!-- class boost::filesystem::path::iterator -->
            <return type-id='type-id-156'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- boost::filesystem::path::iterator& boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>::operator+=(boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>::difference_type) -->
          <function-decl name='operator+=' mangled-name='_ZN5boost15iterator_facadeINS_10filesystem4path8iteratorEKS2_NS_27bidirectional_traversal_tagERS4_lEpLEl' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='688' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>*' -->
            <parameter type-id='type-id-293' is-artificial='yes'/>
            <!-- parameter of type 'typedef boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>::difference_type' -->
            <parameter type-id='type-id-292'/>
            <!-- boost::filesystem::path::iterator& -->
            <return type-id='type-id-175'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- boost::filesystem::path::iterator& boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>::operator&#45;=(boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>::difference_type) -->
          <function-decl name='operator-=' mangled-name='_ZN5boost15iterator_facadeINS_10filesystem4path8iteratorEKS2_NS_27bidirectional_traversal_tagERS4_lEmIEl' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='694' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>*' -->
            <parameter type-id='type-id-293' is-artificial='yes'/>
            <!-- parameter of type 'typedef boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>::difference_type' -->
            <parameter type-id='type-id-292'/>
            <!-- boost::filesystem::path::iterator& -->
            <return type-id='type-id-175'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- boost::filesystem::path::iterator boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>::operator&#45;(boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>::difference_type) -->
          <function-decl name='operator-' mangled-name='_ZNK5boost15iterator_facadeINS_10filesystem4path8iteratorEKS2_NS_27bidirectional_traversal_tagERS4_lEmiEl' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='700' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>*' -->
            <parameter type-id='type-id-294' is-artificial='yes'/>
            <!-- parameter of type 'typedef boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>::difference_type' -->
            <parameter type-id='type-id-292'/>
            <!-- class boost::filesystem::path::iterator -->
            <return type-id='type-id-156'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- namespace boost::mpl -->
      <namespace-decl name='mpl'>


        <!-- struct boost::mpl::if_<boost::detail::use_operator_brackets_proxy<const boost::filesystem::path, const boost::filesystem::path &>, boost::detail::operator_brackets_proxy<boost::filesystem::path::iterator>, const boost::filesystem::path> -->
        <class-decl name='if_&lt;boost::detail::use_operator_brackets_proxy&lt;const boost::filesystem::path, const boost::filesystem::path &amp;&gt;, boost::detail::operator_brackets_proxy&lt;boost::filesystem::path::iterator&gt;, const boost::filesystem::path&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='src/third_party/boost-1.56.0/boost/mpl/if.hpp' line='55' column='1' id='type-id-295'>
          <member-type access='public'>
            <!-- typedef boost::mpl::if_c<true, boost::detail::operator_brackets_proxy<boost::filesystem::path::iterator>, const boost::filesystem::path>::type boost::mpl::if_<boost::detail::use_operator_brackets_proxy<const boost::filesystem::path, const boost::filesystem::path &>, boost::detail::operator_brackets_proxy<boost::filesystem::path::iterator>, const boost::filesystem::path>::type -->
            <typedef-decl name='type' type-id='type-id-296' filepath='src/third_party/boost-1.56.0/boost/mpl/if.hpp' line='70' column='1' id='type-id-260'/>
          </member-type>
        </class-decl>
        <!-- struct boost::mpl::if_c<true, boost::detail::operator_brackets_proxy<boost::filesystem::path::iterator>, const boost::filesystem::path> -->
        <class-decl name='if_c&lt;true, boost::detail::operator_brackets_proxy&lt;boost::filesystem::path::iterator&gt;, const boost::filesystem::path&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='src/third_party/boost-1.56.0/boost/mpl/if.hpp' line='34' column='1' id='type-id-297'>
          <member-type access='public'>
            <!-- typedef boost::detail::operator_brackets_proxy<boost::filesystem::path::iterator> boost::mpl::if_c<true, boost::detail::operator_brackets_proxy<boost::filesystem::path::iterator>, const boost::filesystem::path>::type -->
            <typedef-decl name='type' type-id='type-id-261' filepath='src/third_party/boost-1.56.0/boost/mpl/if.hpp' line='36' column='1' id='type-id-296'/>
          </member-type>
        </class-decl>
        <!-- struct boost::mpl::if_<boost::detail::use_operator_brackets_proxy<boost::filesystem::directory_entry, boost::filesystem::directory_entry &>, boost::detail::operator_brackets_proxy<boost::filesystem::directory_iterator>, boost::filesystem::directory_entry> -->
        <class-decl name='if_&lt;boost::detail::use_operator_brackets_proxy&lt;boost::filesystem::directory_entry, boost::filesystem::directory_entry &amp;&gt;, boost::detail::operator_brackets_proxy&lt;boost::filesystem::directory_iterator&gt;, boost::filesystem::directory_entry&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='src/third_party/boost-1.56.0/boost/mpl/if.hpp' line='55' column='1' id='type-id-298'>
          <member-type access='public'>
            <!-- typedef boost::mpl::if_c<true, boost::detail::operator_brackets_proxy<boost::filesystem::directory_iterator>, boost::filesystem::directory_entry>::type boost::mpl::if_<boost::detail::use_operator_brackets_proxy<boost::filesystem::directory_entry, boost::filesystem::directory_entry &>, boost::detail::operator_brackets_proxy<boost::filesystem::directory_iterator>, boost::filesystem::directory_entry>::type -->
            <typedef-decl name='type' type-id='type-id-299' filepath='src/third_party/boost-1.56.0/boost/mpl/if.hpp' line='70' column='1' id='type-id-267'/>
          </member-type>
        </class-decl>
        <!-- struct boost::mpl::if_c<true, boost::detail::operator_brackets_proxy<boost::filesystem::directory_iterator>, boost::filesystem::directory_entry> -->
        <class-decl name='if_c&lt;true, boost::detail::operator_brackets_proxy&lt;boost::filesystem::directory_iterator&gt;, boost::filesystem::directory_entry&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='src/third_party/boost-1.56.0/boost/mpl/if.hpp' line='34' column='1' id='type-id-300'>
          <member-type access='public'>
            <!-- typedef boost::detail::operator_brackets_proxy<boost::filesystem::directory_iterator> boost::mpl::if_c<true, boost::detail::operator_brackets_proxy<boost::filesystem::directory_iterator>, boost::filesystem::directory_entry>::type -->
            <typedef-decl name='type' type-id='type-id-268' filepath='src/third_party/boost-1.56.0/boost/mpl/if.hpp' line='36' column='1' id='type-id-299'/>
          </member-type>
        </class-decl>
      </namespace-decl>
      <!-- struct boost::enable_if_c<true, boost::filesystem::path &> -->
      <class-decl name='enable_if_c&lt;true, boost::filesystem::path &amp;&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='src/third_party/boost-1.56.0/boost/core/enable_if.hpp' line='28' column='1' id='type-id-301'>
        <member-type access='public'>
          <!-- typedef boost::filesystem::path& boost::enable_if_c<true, boost::filesystem::path &>::type -->
          <typedef-decl name='type' type-id='type-id-166' filepath='src/third_party/boost-1.56.0/boost/core/enable_if.hpp' line='29' column='1' id='type-id-177'/>
        </member-type>
        <member-type access='public'>
          <!-- typedef boost::filesystem::path& boost::enable_if_c<true, boost::filesystem::path &>::type -->
          <typedef-decl name='type' type-id='type-id-166' filepath='src/third_party/boost-1.56.0/boost/core/enable_if.hpp' line='29' column='1' id='type-id-177'/>
        </member-type>
      </class-decl>
      <!-- class boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long> -->
      <class-decl name='iterator_facade&lt;boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &amp;, long&gt;' size-in-bits='8' visibility='default' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='592' column='1' id='type-id-195'>
        <member-type access='private'>
          <!-- typedef boost::filesystem::directory_entry& boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>::reference -->
          <typedef-decl name='reference' type-id='type-id-264' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='630' column='1' id='type-id-199'/>
        </member-type>
        <member-type access='private'>
          <!-- typedef boost::detail::operator_arrow_dispatch<boost::filesystem::directory_entry &, boost::filesystem::directory_entry *>::result_type boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>::pointer -->
          <typedef-decl name='pointer' type-id='type-id-263' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='633' column='1' id='type-id-302'/>
        </member-type>
        <member-type access='private'>
          <!-- typedef long int boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>::difference_type -->
          <typedef-decl name='difference_type' type-id='type-id-54' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='631' column='1' id='type-id-303'/>
        </member-type>
        <member-function access='private'>
          <!-- boost::filesystem::directory_iterator& boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>::derived() -->
          <function-decl name='derived' mangled-name='_ZN5boost15iterator_facadeINS_10filesystem18directory_iteratorENS1_15directory_entryENS_25single_pass_traversal_tagERS3_lE7derivedEv' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='604' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost15iterator_facadeINS_10filesystem18directory_iteratorENS1_15directory_entryENS_25single_pass_traversal_tagERS3_lE7derivedEv'>
            <!-- implicit parameter of type 'boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>*' -->
            <parameter type-id='type-id-304' is-artificial='yes'/>
            <!-- boost::filesystem::directory_iterator& -->
            <return type-id='type-id-151'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- const boost::filesystem::directory_iterator& boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>::derived() -->
          <function-decl name='derived' mangled-name='_ZNK5boost15iterator_facadeINS_10filesystem18directory_iteratorENS1_15directory_entryENS_25single_pass_traversal_tagERS3_lE7derivedEv' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='609' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost15iterator_facadeINS_10filesystem18directory_iteratorENS1_15directory_entryENS_25single_pass_traversal_tagERS3_lE7derivedEv'>
            <!-- implicit parameter of type 'const boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>*' -->
            <parameter type-id='type-id-305' is-artificial='yes'/>
            <!-- const boost::filesystem::directory_iterator& -->
            <return type-id='type-id-200'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>::reference boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>::operator*() -->
          <function-decl name='operator*' mangled-name='_ZNK5boost15iterator_facadeINS_10filesystem18directory_iteratorENS1_15directory_entryENS_25single_pass_traversal_tagERS3_lEdeEv' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='637' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost15iterator_facadeINS_10filesystem18directory_iteratorENS1_15directory_entryENS_25single_pass_traversal_tagERS3_lEdeEv'>
            <!-- implicit parameter of type 'const boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>*' -->
            <parameter type-id='type-id-305' is-artificial='yes'/>
            <!-- typedef boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>::reference -->
            <return type-id='type-id-199'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>::pointer boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>::operator&#45;>() -->
          <function-decl name='operator-&gt;' mangled-name='_ZNK5boost15iterator_facadeINS_10filesystem18directory_iteratorENS1_15directory_entryENS_25single_pass_traversal_tagERS3_lEptEv' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='642' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost15iterator_facadeINS_10filesystem18directory_iteratorENS1_15directory_entryENS_25single_pass_traversal_tagERS3_lEptEv'>
            <!-- implicit parameter of type 'const boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>*' -->
            <parameter type-id='type-id-305' is-artificial='yes'/>
            <!-- typedef boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>::pointer -->
            <return type-id='type-id-302'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- boost::detail::operator_brackets_result<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::filesystem::directory_entry &>::type boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>::operator[](boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>::difference_type) -->
          <function-decl name='operator[]' mangled-name='_ZNK5boost15iterator_facadeINS_10filesystem18directory_iteratorENS1_15directory_entryENS_25single_pass_traversal_tagERS3_lEixEl' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='648' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>*' -->
            <parameter type-id='type-id-305' is-artificial='yes'/>
            <!-- parameter of type 'typedef boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>::difference_type' -->
            <parameter type-id='type-id-303'/>
            <!-- typedef boost::detail::operator_brackets_result<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::filesystem::directory_entry &>::type -->
            <return type-id='type-id-266'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- boost::filesystem::directory_iterator& boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>::operator++() -->
          <function-decl name='operator++' mangled-name='_ZN5boost15iterator_facadeINS_10filesystem18directory_iteratorENS1_15directory_entryENS_25single_pass_traversal_tagERS3_lEppEv' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='658' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost15iterator_facadeINS_10filesystem18directory_iteratorENS1_15directory_entryENS_25single_pass_traversal_tagERS3_lEppEv'>
            <!-- implicit parameter of type 'boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>*' -->
            <parameter type-id='type-id-304' is-artificial='yes'/>
            <!-- boost::filesystem::directory_iterator& -->
            <return type-id='type-id-151'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- boost::filesystem::directory_iterator& boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>::operator&#45;&#45;() -->
          <function-decl name='operator--' mangled-name='_ZN5boost15iterator_facadeINS_10filesystem18directory_iteratorENS1_15directory_entryENS_25single_pass_traversal_tagERS3_lEmmEv' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='675' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>*' -->
            <parameter type-id='type-id-304' is-artificial='yes'/>
            <!-- boost::filesystem::directory_iterator& -->
            <return type-id='type-id-151'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- boost::filesystem::directory_iterator boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>::operator&#45;&#45;(int) -->
          <function-decl name='operator--' mangled-name='_ZN5boost15iterator_facadeINS_10filesystem18directory_iteratorENS1_15directory_entryENS_25single_pass_traversal_tagERS3_lEmmEi' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='681' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>*' -->
            <parameter type-id='type-id-304' is-artificial='yes'/>
            <!-- parameter of type 'int' -->
            <parameter type-id='type-id-5'/>
            <!-- class boost::filesystem::directory_iterator -->
            <return type-id='type-id-194'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- boost::filesystem::directory_iterator& boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>::operator+=(boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>::difference_type) -->
          <function-decl name='operator+=' mangled-name='_ZN5boost15iterator_facadeINS_10filesystem18directory_iteratorENS1_15directory_entryENS_25single_pass_traversal_tagERS3_lEpLEl' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='688' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>*' -->
            <parameter type-id='type-id-304' is-artificial='yes'/>
            <!-- parameter of type 'typedef boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>::difference_type' -->
            <parameter type-id='type-id-303'/>
            <!-- boost::filesystem::directory_iterator& -->
            <return type-id='type-id-151'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- boost::filesystem::directory_iterator& boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>::operator&#45;=(boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>::difference_type) -->
          <function-decl name='operator-=' mangled-name='_ZN5boost15iterator_facadeINS_10filesystem18directory_iteratorENS1_15directory_entryENS_25single_pass_traversal_tagERS3_lEmIEl' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='694' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>*' -->
            <parameter type-id='type-id-304' is-artificial='yes'/>
            <!-- parameter of type 'typedef boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>::difference_type' -->
            <parameter type-id='type-id-303'/>
            <!-- boost::filesystem::directory_iterator& -->
            <return type-id='type-id-151'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- boost::filesystem::directory_iterator boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>::operator&#45;(boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>::difference_type) -->
          <function-decl name='operator-' mangled-name='_ZNK5boost15iterator_facadeINS_10filesystem18directory_iteratorENS1_15directory_entryENS_25single_pass_traversal_tagERS3_lEmiEl' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='700' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>*' -->
            <parameter type-id='type-id-305' is-artificial='yes'/>
            <!-- parameter of type 'typedef boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>::difference_type' -->
            <parameter type-id='type-id-303'/>
            <!-- class boost::filesystem::directory_iterator -->
            <return type-id='type-id-194'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- namespace boost::iterators -->
      <namespace-decl name='iterators'>
        <!-- struct boost::iterators::enabled<true> -->
        <class-decl name='enabled&lt;true&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='src/third_party/boost-1.56.0/boost/iterator/detail/enable_if.hpp' line='30' column='1' id='type-id-306'>
          <member-type access='public'>
            <!-- struct boost::iterators::enabled<true>::base<bool> -->
            <class-decl name='base&lt;bool&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='src/third_party/boost-1.56.0/boost/iterator/detail/enable_if.hpp' line='33' column='1' id='type-id-307'>
              <member-type access='public'>
                <!-- typedef bool boost::iterators::enabled<true>::base<bool>::type -->
                <typedef-decl name='type' type-id='type-id-11' filepath='src/third_party/boost-1.56.0/boost/iterator/detail/enable_if.hpp' line='35' column='1' id='type-id-308'/>
              </member-type>
            </class-decl>
          </member-type>
        </class-decl>
      </namespace-decl>
      <!-- boost::iterators::enabled<true>::base<bool>::type boost::operator!=<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long, boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>(const boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>&, const boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>&) -->
      <function-decl name='operator!=&lt;boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &amp;, long, boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &amp;, long&gt;' mangled-name='_ZN5boostneINS_10filesystem4path8iteratorEKS2_NS_27bidirectional_traversal_tagERS4_lS3_S4_S5_S6_lEENS_6detail23enable_if_interoperableIT_T4_NS_3mpl6apply2INS7_12always_bool2ES9_SA_E4typeEE4typeERKNS_15iterator_facadeIS9_T0_T1_T2_T3_EERKNSI_ISA_T5_T6_T7_T8_EE' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='833' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boostneINS_10filesystem4path8iteratorEKS2_NS_27bidirectional_traversal_tagERS4_lS3_S4_S5_S6_lEENS_6detail23enable_if_interoperableIT_T4_NS_3mpl6apply2INS7_12always_bool2ES9_SA_E4typeEE4typeERKNS_15iterator_facadeIS9_T0_T1_T2_T3_EERKNSI_ISA_T5_T6_T7_T8_EE'>
        <!-- parameter of type 'const boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>&' -->
        <parameter type-id='type-id-309' name='lhs' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='833' column='1'/>
        <!-- parameter of type 'const boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>&' -->
        <parameter type-id='type-id-309' name='rhs' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='833' column='1'/>
        <!-- typedef boost::iterators::enabled<true>::base<bool>::type -->
        <return type-id='type-id-308'/>
      </function-decl>
      <!-- void boost::checked_array_delete<char>(char*) -->
      <function-decl name='checked_array_delete&lt;char&gt;' mangled-name='_ZN5boost20checked_array_deleteIcEEvPT_' filepath='src/third_party/boost-1.56.0/boost/core/checked_delete.hpp' line='37' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost20checked_array_deleteIcEEvPT_'>
        <!-- parameter of type 'char*' -->
        <parameter type-id='type-id-40' name='x' filepath='src/third_party/boost-1.56.0/boost/core/checked_delete.hpp' line='37' column='1'/>
        <!-- void -->
        <return type-id='type-id-8'/>
      </function-decl>
      <!-- boost::iterators::enabled<true>::base<bool>::type boost::operator!=<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long, boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>(const boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>&, const boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>&) -->
      <function-decl name='operator!=&lt;boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &amp;, long, boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &amp;, long&gt;' mangled-name='_ZN5boostneINS_10filesystem18directory_iteratorENS1_15directory_entryENS_25single_pass_traversal_tagERS3_lS2_S3_S4_S5_lEENS_6detail23enable_if_interoperableIT_T4_NS_3mpl6apply2INS6_12always_bool2ES8_S9_E4typeEE4typeERKNS_15iterator_facadeIS8_T0_T1_T2_T3_EERKNSH_IS9_T5_T6_T7_T8_EE' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='833' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boostneINS_10filesystem18directory_iteratorENS1_15directory_entryENS_25single_pass_traversal_tagERS3_lS2_S3_S4_S5_lEENS_6detail23enable_if_interoperableIT_T4_NS_3mpl6apply2INS6_12always_bool2ES8_S9_E4typeEE4typeERKNS_15iterator_facadeIS8_T0_T1_T2_T3_EERKNSH_IS9_T5_T6_T7_T8_EE'>
        <!-- parameter of type 'const boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>&' -->
        <parameter type-id='type-id-310' name='lhs' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='833' column='1'/>
        <!-- parameter of type 'const boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>&' -->
        <parameter type-id='type-id-310' name='rhs' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='833' column='1'/>
        <!-- typedef boost::iterators::enabled<true>::base<bool>::type -->
        <return type-id='type-id-308'/>
      </function-decl>
      <!-- bool boost::operator==<boost::filesystem::detail::dir_itr_imp, boost::filesystem::detail::dir_itr_imp>(const boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>&, const boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>&) -->
      <function-decl name='operator==&lt;boost::filesystem::detail::dir_itr_imp, boost::filesystem::detail::dir_itr_imp&gt;' mangled-name='_ZN5boosteqINS_10filesystem6detail11dir_itr_impES3_EEbRKNS_10shared_ptrIT_EERKNS4_IT0_EE' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='728' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boosteqINS_10filesystem6detail11dir_itr_impES3_EEbRKNS_10shared_ptrIT_EERKNS4_IT0_EE'>
        <!-- parameter of type 'const boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>&' -->
        <parameter type-id='type-id-285' name='a' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='728' column='1'/>
        <!-- parameter of type 'const boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>&' -->
        <parameter type-id='type-id-285' name='b' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/shared_ptr.hpp' line='728' column='1'/>
        <!-- bool -->
        <return type-id='type-id-11'/>
      </function-decl>
      <!-- void boost::checked_delete<boost::filesystem::detail::dir_itr_imp>(boost::filesystem::detail::dir_itr_imp*) -->
      <function-decl name='checked_delete&lt;boost::filesystem::detail::dir_itr_imp&gt;' mangled-name='_ZN5boost14checked_deleteINS_10filesystem6detail11dir_itr_impEEEvPT_' filepath='src/third_party/boost-1.56.0/boost/core/checked_delete.hpp' line='29' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost14checked_deleteINS_10filesystem6detail11dir_itr_impEEEvPT_'>
        <!-- parameter of type 'boost::filesystem::detail::dir_itr_imp*' -->
        <parameter type-id='type-id-141' name='x' filepath='src/third_party/boost-1.56.0/boost/core/checked_delete.hpp' line='29' column='1'/>
        <!-- void -->
        <return type-id='type-id-8'/>
      </function-decl>
      <!-- boost::iterators::enabled<true>::base<bool>::type boost::operator==<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long, boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>(const boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>&, const boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>&) -->
      <function-decl name='operator==&lt;boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &amp;, long, boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &amp;, long&gt;' mangled-name='_ZN5boosteqINS_10filesystem18directory_iteratorENS1_15directory_entryENS_25single_pass_traversal_tagERS3_lS2_S3_S4_S5_lEENS_6detail23enable_if_interoperableIT_T4_NS_3mpl6apply2INS6_12always_bool2ES8_S9_E4typeEE4typeERKNS_15iterator_facadeIS8_T0_T1_T2_T3_EERKNSH_IS9_T5_T6_T7_T8_EE' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='832' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boosteqINS_10filesystem18directory_iteratorENS1_15directory_entryENS_25single_pass_traversal_tagERS3_lS2_S3_S4_S5_lEENS_6detail23enable_if_interoperableIT_T4_NS_3mpl6apply2INS6_12always_bool2ES8_S9_E4typeEE4typeERKNS_15iterator_facadeIS8_T0_T1_T2_T3_EERKNSH_IS9_T5_T6_T7_T8_EE'>
        <!-- parameter of type 'const boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>&' -->
        <parameter type-id='type-id-310' name='lhs' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='833' column='1'/>
        <!-- parameter of type 'const boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>&' -->
        <parameter type-id='type-id-310' name='rhs' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='833' column='1'/>
        <!-- typedef boost::iterators::enabled<true>::base<bool>::type -->
        <return type-id='type-id-308'/>
      </function-decl>
      <!-- void boost::checked_delete<boost::filesystem::filesystem_error::m_imp>(boost::filesystem::filesystem_error::m_imp*) -->
      <function-decl name='checked_delete&lt;boost::filesystem::filesystem_error::m_imp&gt;' mangled-name='_ZN5boost14checked_deleteINS_10filesystem16filesystem_error5m_impEEEvPT_' filepath='src/third_party/boost-1.56.0/boost/core/checked_delete.hpp' line='29' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost14checked_deleteINS_10filesystem16filesystem_error5m_impEEEvPT_'>
        <!-- parameter of type 'boost::filesystem::filesystem_error::m_imp*' -->
        <parameter type-id='type-id-221' name='x' filepath='src/third_party/boost-1.56.0/boost/core/checked_delete.hpp' line='29' column='1'/>
        <!-- void -->
        <return type-id='type-id-8'/>
      </function-decl>
      <!-- class boost::scoped_array<char> -->
      <class-decl name='scoped_array&lt;char&gt;' size-in-bits='64' visibility='default' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/scoped_array.hpp' line='39' column='1' id='type-id-311'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- char* boost::scoped_array<char>::px -->
          <var-decl name='px' type-id='type-id-40' visibility='default' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/scoped_array.hpp' line='43' column='1'/>
        </data-member>
        <member-function access='private'>
          <!-- void boost::scoped_array<char>::scoped_array(const boost::scoped_array<char>&) -->
          <function-decl name='scoped_array' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/scoped_array.hpp' line='45' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'boost::scoped_array<char>*' -->
            <parameter type-id='type-id-312' is-artificial='yes'/>
            <!-- parameter of type 'const boost::scoped_array<char>&' -->
            <parameter type-id='type-id-313'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- boost::scoped_array<char>& boost::scoped_array<char>::operator=(const boost::scoped_array<char>&) -->
          <function-decl name='operator=' mangled-name='_ZN5boost12scoped_arrayIcEaSERKS1_' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/scoped_array.hpp' line='46' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'boost::scoped_array<char>*' -->
            <parameter type-id='type-id-312' is-artificial='yes'/>
            <!-- parameter of type 'const boost::scoped_array<char>&' -->
            <parameter type-id='type-id-313'/>
            <!-- boost::scoped_array<char>& -->
            <return type-id='type-id-314'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void boost::scoped_array<char>::operator==(const boost::scoped_array<char>&) -->
          <function-decl name='operator==' mangled-name='_ZNK5boost12scoped_arrayIcEeqERKS1_' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/scoped_array.hpp' line='50' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const boost::scoped_array<char>*' -->
            <parameter type-id='type-id-315' is-artificial='yes'/>
            <!-- parameter of type 'const boost::scoped_array<char>&' -->
            <parameter type-id='type-id-313'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void boost::scoped_array<char>::operator!=(const boost::scoped_array<char>&) -->
          <function-decl name='operator!=' mangled-name='_ZNK5boost12scoped_arrayIcEneERKS1_' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/scoped_array.hpp' line='51' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const boost::scoped_array<char>*' -->
            <parameter type-id='type-id-315' is-artificial='yes'/>
            <!-- parameter of type 'const boost::scoped_array<char>&' -->
            <parameter type-id='type-id-313'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void boost::scoped_array<char>::scoped_array(char*) -->
          <function-decl name='scoped_array' mangled-name='_ZN5boost12scoped_arrayIcEC2EPc' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/scoped_array.hpp' line='57' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost12scoped_arrayIcEC2EPc'>
            <!-- implicit parameter of type 'boost::scoped_array<char>*' -->
            <parameter type-id='type-id-312' is-artificial='yes'/>
            <!-- parameter of type 'char*' -->
            <parameter type-id='type-id-40'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- boost::scoped_array<char>::~scoped_array() -->
          <function-decl name='~scoped_array' mangled-name='_ZN5boost12scoped_arrayIcED2Ev' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/scoped_array.hpp' line='64' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost12scoped_arrayIcED2Ev'>
            <!-- implicit parameter of type 'boost::scoped_array<char>*' -->
            <parameter type-id='type-id-312' is-artificial='yes'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void boost::scoped_array<char>::reset(char*) -->
          <function-decl name='reset' mangled-name='_ZN5boost12scoped_arrayIcE5resetEPc' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/scoped_array.hpp' line='72' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'boost::scoped_array<char>*' -->
            <parameter type-id='type-id-312' is-artificial='yes'/>
            <!-- parameter of type 'char*' -->
            <parameter type-id='type-id-40'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- char& boost::scoped_array<char>::operator[](std::ptrdiff_t) -->
          <function-decl name='operator[]' mangled-name='_ZNK5boost12scoped_arrayIcEixEl' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/scoped_array.hpp' line='78' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const boost::scoped_array<char>*' -->
            <parameter type-id='type-id-315' is-artificial='yes'/>
            <!-- parameter of type 'typedef std::ptrdiff_t' -->
            <parameter type-id='type-id-219'/>
            <!-- char& -->
            <return type-id='type-id-316'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- char* boost::scoped_array<char>::get() -->
          <function-decl name='get' mangled-name='_ZNK5boost12scoped_arrayIcE3getEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/scoped_array.hpp' line='85' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost12scoped_arrayIcE3getEv'>
            <!-- implicit parameter of type 'const boost::scoped_array<char>*' -->
            <parameter type-id='type-id-315' is-artificial='yes'/>
            <!-- char* -->
            <return type-id='type-id-40'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool boost::scoped_array<char>::operator bool() -->
          <function-decl name='operator bool' mangled-name='_ZNK5boost12scoped_arrayIcEcvbEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/operator_bool.hpp' line='11' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const boost::scoped_array<char>*' -->
            <parameter type-id='type-id-315' is-artificial='yes'/>
            <!-- bool -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool boost::scoped_array<char>::operator!() -->
          <function-decl name='operator!' mangled-name='_ZNK5boost12scoped_arrayIcEntEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/operator_bool.hpp' line='60' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const boost::scoped_array<char>*' -->
            <parameter type-id='type-id-315' is-artificial='yes'/>
            <!-- bool -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void boost::scoped_array<char>::swap(boost::scoped_array<char>&) -->
          <function-decl name='swap' mangled-name='_ZN5boost12scoped_arrayIcE4swapERS1_' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/scoped_array.hpp' line='93' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'boost::scoped_array<char>*' -->
            <parameter type-id='type-id-312' is-artificial='yes'/>
            <!-- parameter of type 'boost::scoped_array<char>&' -->
            <parameter type-id='type-id-314'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class boost::iterator_core_access -->
      <class-decl name='iterator_core_access' size-in-bits='8' visibility='default' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='469' column='1' id='type-id-317'>
        <member-function access='private' constructor='yes'>
          <!-- boost::iterator_core_access::iterator_core_access() -->
          <function-decl name='iterator_core_access' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='578' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'boost::iterator_core_access*' -->
            <parameter type-id='type-id-318' is-artificial='yes'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='private' static='yes'>
          <!-- boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>::reference boost::iterator_core_access::dereference<boost::filesystem::path::iterator>() -->
          <function-decl name='dereference&lt;boost::filesystem::path::iterator&gt;' mangled-name='_ZN5boost20iterator_core_access11dereferenceINS_10filesystem4path8iteratorEEENT_9referenceERKS5_' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='512' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost20iterator_core_access11dereferenceINS_10filesystem4path8iteratorEEENT_9referenceERKS5_'>
            <!-- parameter of type 'const boost::filesystem::path::iterator&' -->
            <parameter type-id='type-id-160'/>
            <!-- typedef boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>::reference -->
            <return type-id='type-id-290'/>
          </function-decl>
        </member-function>
        <member-function access='private' static='yes'>
          <!-- void boost::iterator_core_access::increment<boost::filesystem::path::iterator>() -->
          <function-decl name='increment&lt;boost::filesystem::path::iterator&gt;' mangled-name='_ZN5boost20iterator_core_access9incrementINS_10filesystem4path8iteratorEEEvRT_' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='518' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost20iterator_core_access9incrementINS_10filesystem4path8iteratorEEEvRT_'>
            <!-- parameter of type 'boost::filesystem::path::iterator&' -->
            <parameter type-id='type-id-175'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='private' static='yes'>
          <!-- bool boost::iterator_core_access::equal<boost::filesystem::path::iterator, boost::filesystem::path::iterator>(const boost::filesystem::path::iterator&, mpl_::true_) -->
          <function-decl name='equal&lt;boost::filesystem::path::iterator, boost::filesystem::path::iterator&gt;' mangled-name='_ZN5boost20iterator_core_access5equalINS_10filesystem4path8iteratorES4_EEbRKT_RKT0_N4mpl_5bool_ILb1EEE' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='530' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost20iterator_core_access5equalINS_10filesystem4path8iteratorES4_EEbRKT_RKT0_N4mpl_5bool_ILb1EEE'>
            <!-- parameter of type 'const boost::filesystem::path::iterator&' -->
            <parameter type-id='type-id-160'/>
            <!-- parameter of type 'const boost::filesystem::path::iterator&' -->
            <parameter type-id='type-id-160'/>
            <!-- parameter of type 'typedef mpl_::true_' -->
            <parameter type-id='type-id-319'/>
            <!-- bool -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
        <member-function access='private' static='yes'>
          <!-- void boost::iterator_core_access::increment<boost::filesystem::directory_iterator>() -->
          <function-decl name='increment&lt;boost::filesystem::directory_iterator&gt;' mangled-name='_ZN5boost20iterator_core_access9incrementINS_10filesystem18directory_iteratorEEEvRT_' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='518' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost20iterator_core_access9incrementINS_10filesystem18directory_iteratorEEEvRT_'>
            <!-- parameter of type 'boost::filesystem::directory_iterator&' -->
            <parameter type-id='type-id-151'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='private' static='yes'>
          <!-- boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>::reference boost::iterator_core_access::dereference<boost::filesystem::directory_iterator>() -->
          <function-decl name='dereference&lt;boost::filesystem::directory_iterator&gt;' mangled-name='_ZN5boost20iterator_core_access11dereferenceINS_10filesystem18directory_iteratorEEENT_9referenceERKS4_' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='512' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost20iterator_core_access11dereferenceINS_10filesystem18directory_iteratorEEENT_9referenceERKS4_'>
            <!-- parameter of type 'const boost::filesystem::directory_iterator&' -->
            <parameter type-id='type-id-200'/>
            <!-- typedef boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>::reference -->
            <return type-id='type-id-199'/>
          </function-decl>
        </member-function>
        <member-function access='private' static='yes'>
          <!-- bool boost::iterator_core_access::equal<boost::filesystem::directory_iterator, boost::filesystem::directory_iterator>(const boost::filesystem::directory_iterator&, mpl_::true_) -->
          <function-decl name='equal&lt;boost::filesystem::directory_iterator, boost::filesystem::directory_iterator&gt;' mangled-name='_ZN5boost20iterator_core_access5equalINS_10filesystem18directory_iteratorES3_EEbRKT_RKT0_N4mpl_5bool_ILb1EEE' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='530' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost20iterator_core_access5equalINS_10filesystem18directory_iteratorES3_EEbRKT_RKT0_N4mpl_5bool_ILb1EEE'>
            <!-- parameter of type 'const boost::filesystem::directory_iterator&' -->
            <parameter type-id='type-id-200'/>
            <!-- parameter of type 'const boost::filesystem::directory_iterator&' -->
            <parameter type-id='type-id-200'/>
            <!-- parameter of type 'typedef mpl_::true_' -->
            <parameter type-id='type-id-319'/>
            <!-- bool -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
        <member-function access='private' static='yes'>
          <!-- void boost::iterator_core_access::decrement<boost::filesystem::path::iterator>() -->
          <function-decl name='decrement&lt;boost::filesystem::path::iterator&gt;' mangled-name='_ZN5boost20iterator_core_access9decrementINS_10filesystem4path8iteratorEEEvRT_' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='524' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost20iterator_core_access9decrementINS_10filesystem4path8iteratorEEEvRT_'>
            <!-- parameter of type 'boost::filesystem::path::iterator&' -->
            <parameter type-id='type-id-175'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
      </class-decl>
    </namespace-decl>
    <!-- const boost::filesystem::path::value_type -->
    <qualified-type-def type-id='type-id-152' const='yes' id='type-id-162'/>
    <!-- namespace std -->
    <namespace-decl name='std'>


      <!-- void std::swap<boost::filesystem::detail::dir_itr_imp *>(boost::filesystem::detail::dir_itr_imp*&, boost::filesystem::detail::dir_itr_imp*&) -->
      <function-decl name='swap&lt;boost::filesystem::detail::dir_itr_imp *&gt;' mangled-name='_ZSt4swapIPN5boost10filesystem6detail11dir_itr_impEEvRT_S6_' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/move.h' line='166' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZSt4swapIPN5boost10filesystem6detail11dir_itr_impEEvRT_S6_'>
        <!-- parameter of type 'boost::filesystem::detail::dir_itr_imp*&' -->
        <parameter type-id='type-id-320' name='__a' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/move.h' line='554' column='1'/>
        <!-- parameter of type 'boost::filesystem::detail::dir_itr_imp*&' -->
        <parameter type-id='type-id-320' name='__b' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/move.h' line='554' column='1'/>
        <!-- void -->
        <return type-id='type-id-8'/>
      </function-decl>
      <!-- struct std::remove_reference<boost::filesystem::detail::dir_itr_imp *&> -->
      <class-decl name='remove_reference&lt;boost::filesystem::detail::dir_itr_imp *&amp;&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/type_traits' line='1504' column='1' id='type-id-321'>
        <member-type access='public'>
          <!-- typedef boost::filesystem::detail::dir_itr_imp* std::remove_reference<boost::filesystem::detail::dir_itr_imp *&>::type -->
          <typedef-decl name='type' type-id='type-id-141' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/type_traits' line='1505' column='1' id='type-id-322'/>
        </member-type>
      </class-decl>
      <!-- std::remove_reference<boost::filesystem::detail::dir_itr_imp *&>::type&& std::move<boost::filesystem::detail::dir_itr_imp *&>(boost::filesystem::detail::dir_itr_imp*&) -->
      <function-decl name='move&lt;boost::filesystem::detail::dir_itr_imp *&amp;&gt;' mangled-name='_ZSt4moveIRPN5boost10filesystem6detail11dir_itr_impEEONSt16remove_referenceIT_E4typeEOS7_' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/move.h' line='101' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZSt4moveIRPN5boost10filesystem6detail11dir_itr_impEEONSt16remove_referenceIT_E4typeEOS7_'>
        <!-- parameter of type 'boost::filesystem::detail::dir_itr_imp*&' -->
        <parameter type-id='type-id-320' name='__t' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/move.h' line='101' column='1'/>
        <!-- std::remove_reference<boost::filesystem::detail::dir_itr_imp *&>::type&& -->
        <return type-id='type-id-323'/>
      </function-decl>
      <!-- class std::allocator<char> -->
      <class-decl name='allocator&lt;char&gt;' visibility='default' is-declaration-only='yes' id='type-id-137'>
        <member-type access='private'>
          <!-- typedef std::size_t std::allocator<char>::size_type -->
          <typedef-decl name='size_type' type-id='type-id-138' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/allocator.h' line='95' column='1' id='type-id-32'/>
        </member-type>
      </class-decl>
      <!-- bool std::operator==<char>(const std::allocator<char>&, const std::allocator<char>&) -->
      <function-decl name='operator==&lt;char&gt;' mangled-name='_ZSteqIcEbRKSaIT_ES3_' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/allocator.h' line='133' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZSteqIcEbRKSaIT_ES3_'>
        <!-- parameter of type 'const std::allocator<char>&' -->
        <parameter type-id='type-id-41' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/allocator.h' line='133' column='1'/>
        <!-- parameter of type 'const std::allocator<char>&' -->
        <parameter type-id='type-id-41' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/allocator.h' line='133' column='1'/>
        <!-- bool -->
        <return type-id='type-id-11'/>
      </function-decl>
      <!-- struct std::iterator_traits<char *> -->
      <class-decl name='iterator_traits&lt;char *&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator_base_types.h' line='175' column='1' id='type-id-324'>
        <member-type access='public'>
          <!-- typedef std::ptrdiff_t std::iterator_traits<char *>::difference_type -->
          <typedef-decl name='difference_type' type-id='type-id-219' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator_base_types.h' line='179' column='1' id='type-id-325'/>
        </member-type>
        <member-type access='public'>
          <!-- typedef std::random_access_iterator_tag std::iterator_traits<char *>::iterator_category -->
          <typedef-decl name='iterator_category' type-id='type-id-327' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator_base_types.h' line='177' column='1' id='type-id-326'/>
        </member-type>
        <member-type access='public'>
          <!-- typedef char& std::iterator_traits<char *>::reference -->
          <typedef-decl name='reference' type-id='type-id-316' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator_base_types.h' line='181' column='1' id='type-id-328'/>
        </member-type>
        <member-type access='public'>
          <!-- typedef char* std::iterator_traits<char *>::pointer -->
          <typedef-decl name='pointer' type-id='type-id-40' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator_base_types.h' line='180' column='1' id='type-id-329'/>
        </member-type>
        <member-type access='public'>
          <!-- typedef std::ptrdiff_t std::iterator_traits<char *>::difference_type -->
          <typedef-decl name='difference_type' type-id='type-id-219' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator_base_types.h' line='179' column='1' id='type-id-325'/>
        </member-type>
      </class-decl>
      <!-- typedef long int std::ptrdiff_t -->
      <typedef-decl name='ptrdiff_t' type-id='type-id-54' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/x86_64-linux-gnu/c++/4.9/bits/c++config.h' line='189' column='1' id='type-id-219'/>
      <!-- struct std::random_access_iterator_tag -->
      <class-decl name='random_access_iterator_tag' size-in-bits='8' is-struct='yes' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator_base_types.h' line='103' column='1' id='type-id-327'>
      <!-- struct std::bidirectional_iterator_tag -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-330'/>
      </class-decl>
      <!-- struct std::bidirectional_iterator_tag -->
      <class-decl name='bidirectional_iterator_tag' size-in-bits='8' is-struct='yes' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator_base_types.h' line='99' column='1' id='type-id-330'>
      <!-- struct std::forward_iterator_tag -->
        <base-class access='public' layout-offset-in-bits='0' type-id='type-id-46'/>
      </class-decl>
      <!-- std::iterator_traits<char *>::difference_type std::distance<char *>(char*, char*) -->
      <function-decl name='distance&lt;char *&gt;' mangled-name='_ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator_base_funcs.h' line='114' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_'>
        <!-- parameter of type 'char*' -->
        <parameter type-id='type-id-40' name='__first' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator_base_funcs.h' line='114' column='1'/>
        <!-- parameter of type 'char*' -->
        <parameter type-id='type-id-40' name='__last' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator_base_funcs.h' line='114' column='1'/>
        <!-- typedef std::iterator_traits<char *>::difference_type -->
        <return type-id='type-id-325'/>
      </function-decl>
      <!-- std::iterator_traits<char *>::difference_type std::__distance<char *>(char*, char*, std::random_access_iterator_tag) -->
      <function-decl name='__distance&lt;char *&gt;' mangled-name='_ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator_base_funcs.h' line='90' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag'>
        <!-- parameter of type 'char*' -->
        <parameter type-id='type-id-40' name='__first' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator_base_funcs.h' line='90' column='1'/>
        <!-- parameter of type 'char*' -->
        <parameter type-id='type-id-40' name='__last' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator_base_funcs.h' line='90' column='1'/>
        <!-- parameter of type 'struct std::random_access_iterator_tag' -->
        <parameter type-id='type-id-327' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator_base_funcs.h' line='91' column='1'/>
        <!-- typedef std::iterator_traits<char *>::difference_type -->
        <return type-id='type-id-325'/>
      </function-decl>
      <!-- std::iterator_traits<char *>::iterator_category std::__iterator_category<char *>(char* const&) -->
      <function-decl name='__iterator_category&lt;char *&gt;' mangled-name='_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator_base_types.h' line='201' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_'>
        <!-- parameter of type 'char* const&' -->
        <parameter type-id='type-id-176' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator_base_types.h' line='201' column='1'/>
        <!-- typedef std::iterator_traits<char *>::iterator_category -->
        <return type-id='type-id-326'/>
      </function-decl>
      <!-- class std::runtime_error -->
      <class-decl name='runtime_error' visibility='default' is-declaration-only='yes' id='type-id-205'/>
      <!-- class std::type_info -->
      <class-decl name='type_info' visibility='default' is-declaration-only='yes' id='type-id-289'/>
      <!-- void std::swap<boost::filesystem::filesystem_error::m_imp *>(boost::filesystem::filesystem_error::m_imp*&, boost::filesystem::filesystem_error::m_imp*&) -->
      <function-decl name='swap&lt;boost::filesystem::filesystem_error::m_imp *&gt;' mangled-name='_ZSt4swapIPN5boost10filesystem16filesystem_error5m_impEEvRT_S6_' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/move.h' line='166' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZSt4swapIPN5boost10filesystem16filesystem_error5m_impEEvRT_S6_'>
        <!-- parameter of type 'boost::filesystem::filesystem_error::m_imp*&' -->
        <parameter type-id='type-id-331' name='__a' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/move.h' line='554' column='1'/>
        <!-- parameter of type 'boost::filesystem::filesystem_error::m_imp*&' -->
        <parameter type-id='type-id-331' name='__b' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/move.h' line='554' column='1'/>
        <!-- void -->
        <return type-id='type-id-8'/>
      </function-decl>
      <!-- struct std::remove_reference<boost::filesystem::filesystem_error::m_imp *&> -->
      <class-decl name='remove_reference&lt;boost::filesystem::filesystem_error::m_imp *&amp;&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/type_traits' line='1504' column='1' id='type-id-332'>
        <member-type access='public'>
          <!-- typedef boost::filesystem::filesystem_error::m_imp* std::remove_reference<boost::filesystem::filesystem_error::m_imp *&>::type -->
          <typedef-decl name='type' type-id='type-id-221' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/type_traits' line='1505' column='1' id='type-id-333'/>
        </member-type>
      </class-decl>
      <!-- std::remove_reference<boost::filesystem::filesystem_error::m_imp *&>::type&& std::move<boost::filesystem::filesystem_error::m_imp *&>(boost::filesystem::filesystem_error::m_imp*&) -->
      <function-decl name='move&lt;boost::filesystem::filesystem_error::m_imp *&amp;&gt;' mangled-name='_ZSt4moveIRPN5boost10filesystem16filesystem_error5m_impEEONSt16remove_referenceIT_E4typeEOS7_' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/move.h' line='101' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZSt4moveIRPN5boost10filesystem16filesystem_error5m_impEEONSt16remove_referenceIT_E4typeEOS7_'>
        <!-- parameter of type 'boost::filesystem::filesystem_error::m_imp*&' -->
        <parameter type-id='type-id-331' name='__t' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/move.h' line='101' column='1'/>
        <!-- std::remove_reference<boost::filesystem::filesystem_error::m_imp *&>::type&& -->
        <return type-id='type-id-334'/>
      </function-decl>
      <!-- class std::codecvt<wchar_t, char, __mbstate_t> -->
      <class-decl name='codecvt&lt;wchar_t, char, __mbstate_t&gt;' visibility='default' is-declaration-only='yes' id='type-id-155'/>
      <!-- class std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > -->
      <class-decl name='basic_string&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt;' visibility='default' is-declaration-only='yes' id='type-id-335'>
        <member-type access='private'>
          <!-- typedef std::allocator<wchar_t>::size_type std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::size_type -->
          <typedef-decl name='size_type' type-id='type-id-337' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='121' column='1' id='type-id-336'/>
        </member-type>
        <member-function access='public'>
          <!-- std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >& std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append<wchar_t *>(wchar_t*, wchar_t*) -->
          <function-decl name='append&lt;wchar_t *&gt;' mangled-name='_ZNSbIwSt11char_traitsIwESaIwEE6appendIPwEERS2_T_S6_' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='1061' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNSbIwSt11char_traitsIwESaIwEE6appendIPwEERS2_T_S6_'>
            <!-- implicit parameter of type 'std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >*' -->
            <parameter type-id='type-id-338' is-artificial='yes'/>
            <!-- parameter of type 'wchar_t*' -->
            <parameter type-id='type-id-66'/>
            <!-- parameter of type 'wchar_t*' -->
            <parameter type-id='type-id-66'/>
            <!-- std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >& -->
            <return type-id='type-id-339'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- typedef std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > std::wstring -->
      <typedef-decl name='wstring' type-id='type-id-335' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stringfwd.h' line='68' column='1' id='type-id-340'/>
      <!-- class std::locale -->
      <class-decl name='locale' size-in-bits='64' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='62' column='1' id='type-id-172'>
        <member-type access='private'>
          <!-- typedef int std::locale::category -->
          <typedef-decl name='category' type-id='type-id-5' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='67' column='1' id='type-id-341'/>
        </member-type>
        <member-type access='private'>
          <!-- class std::locale::_Impl -->
          <class-decl name='_Impl' size-in-bits='320' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='475' column='1' id='type-id-342'>
            <data-member access='private' layout-offset-in-bits='0'>
              <!-- _Atomic_word std::locale::_Impl::_M_refcount -->
              <var-decl name='_M_refcount' type-id='type-id-42' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='495' column='1'/>
            </data-member>
            <data-member access='private' layout-offset-in-bits='64'>
              <!-- const std::locale::facet** std::locale::_Impl::_M_facets -->
              <var-decl name='_M_facets' type-id='type-id-343' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='496' column='1'/>
            </data-member>
            <data-member access='private' layout-offset-in-bits='128'>
              <!-- std::size_t std::locale::_Impl::_M_facets_size -->
              <var-decl name='_M_facets_size' type-id='type-id-138' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='497' column='1'/>
            </data-member>
            <data-member access='private' layout-offset-in-bits='192'>
              <!-- const std::locale::facet** std::locale::_Impl::_M_caches -->
              <var-decl name='_M_caches' type-id='type-id-343' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='498' column='1'/>
            </data-member>
            <data-member access='private' layout-offset-in-bits='256'>
              <!-- char** std::locale::_Impl::_M_names -->
              <var-decl name='_M_names' type-id='type-id-70' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='499' column='1'/>
            </data-member>
            <data-member access='private' static='yes'>
              <!-- static const std::locale::id* const std::locale::_Impl::_S_id_ctype[] -->
              <var-decl name='_S_id_ctype' type-id='type-id-344' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='500' column='1'/>
            </data-member>
            <data-member access='private' static='yes'>
              <!-- static const std::locale::id* const std::locale::_Impl::_S_id_numeric[] -->
              <var-decl name='_S_id_numeric' type-id='type-id-344' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='501' column='1'/>
            </data-member>
            <data-member access='private' static='yes'>
              <!-- static const std::locale::id* const std::locale::_Impl::_S_id_collate[] -->
              <var-decl name='_S_id_collate' type-id='type-id-344' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='502' column='1'/>
            </data-member>
            <data-member access='private' static='yes'>
              <!-- static const std::locale::id* const std::locale::_Impl::_S_id_time[] -->
              <var-decl name='_S_id_time' type-id='type-id-344' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='503' column='1'/>
            </data-member>
            <data-member access='private' static='yes'>
              <!-- static const std::locale::id* const std::locale::_Impl::_S_id_monetary[] -->
              <var-decl name='_S_id_monetary' type-id='type-id-344' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='504' column='1'/>
            </data-member>
            <data-member access='private' static='yes'>
              <!-- static const std::locale::id* const std::locale::_Impl::_S_id_messages[] -->
              <var-decl name='_S_id_messages' type-id='type-id-344' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='505' column='1'/>
            </data-member>
            <data-member access='private' static='yes'>
              <!-- static const std::locale::id* const* const std::locale::_Impl::_S_facet_categories[] -->
              <var-decl name='_S_facet_categories' type-id='type-id-345' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='506' column='1'/>
            </data-member>
            <member-function access='private'>
              <!-- void std::locale::_Impl::_M_add_reference() -->
              <function-decl name='_M_add_reference' mangled-name='_ZNSt6locale5_Impl16_M_add_referenceEv' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='509' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'std::locale::_Impl*' -->
                <parameter type-id='type-id-346' is-artificial='yes'/>
                <!-- void -->
                <return type-id='type-id-8'/>
              </function-decl>
            </member-function>
            <member-function access='private'>
              <!-- void std::locale::_Impl::_M_remove_reference() -->
              <function-decl name='_M_remove_reference' mangled-name='_ZNSt6locale5_Impl19_M_remove_referenceEv' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='513' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'std::locale::_Impl*' -->
                <parameter type-id='type-id-346' is-artificial='yes'/>
                <!-- void -->
                <return type-id='type-id-8'/>
              </function-decl>
            </member-function>
            <member-function access='private' constructor='yes'>
              <!-- std::locale::_Impl::_Impl(const std::locale::_Impl&, std::size_t) -->
              <function-decl name='_Impl' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='527' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'std::locale::_Impl*' -->
                <parameter type-id='type-id-346' is-artificial='yes'/>
                <!-- parameter of type 'const std::locale::_Impl&' -->
                <parameter type-id='type-id-347'/>
                <!-- parameter of type 'typedef std::size_t' -->
                <parameter type-id='type-id-138'/>
                <!-- void -->
                <return type-id='type-id-8'/>
              </function-decl>
            </member-function>
            <member-function access='private' constructor='yes'>
              <!-- std::locale::_Impl::_Impl(const char*, std::size_t) -->
              <function-decl name='_Impl' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='528' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'std::locale::_Impl*' -->
                <parameter type-id='type-id-346' is-artificial='yes'/>
                <!-- parameter of type 'const char*' -->
                <parameter type-id='type-id-15'/>
                <!-- parameter of type 'typedef std::size_t' -->
                <parameter type-id='type-id-138'/>
                <!-- void -->
                <return type-id='type-id-8'/>
              </function-decl>
            </member-function>
            <member-function access='private' constructor='yes'>
              <!-- std::locale::_Impl::_Impl(std::size_t) -->
              <function-decl name='_Impl' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='529' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'std::locale::_Impl*' -->
                <parameter type-id='type-id-346' is-artificial='yes'/>
                <!-- parameter of type 'typedef std::size_t' -->
                <parameter type-id='type-id-138'/>
                <!-- void -->
                <return type-id='type-id-8'/>
              </function-decl>
            </member-function>
            <member-function access='private' destructor='yes'>
              <!-- std::locale::_Impl::~_Impl() -->
              <function-decl name='~_Impl' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='531' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'std::locale::_Impl*' -->
                <parameter type-id='type-id-346' is-artificial='yes'/>
                <!-- void -->
                <return type-id='type-id-8'/>
              </function-decl>
            </member-function>
            <member-function access='private' constructor='yes'>
              <!-- std::locale::_Impl::_Impl(const std::locale::_Impl&) -->
              <function-decl name='_Impl' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='533' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'std::locale::_Impl*' -->
                <parameter type-id='type-id-346' is-artificial='yes'/>
                <!-- parameter of type 'const std::locale::_Impl&' -->
                <parameter type-id='type-id-347'/>
                <!-- void -->
                <return type-id='type-id-8'/>
              </function-decl>
            </member-function>
            <member-function access='private'>
              <!-- void std::locale::_Impl::operator=(const std::locale::_Impl&) -->
              <function-decl name='operator=' mangled-name='_ZNSt6locale5_ImplaSERKS0_' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='536' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'std::locale::_Impl*' -->
                <parameter type-id='type-id-346' is-artificial='yes'/>
                <!-- parameter of type 'const std::locale::_Impl&' -->
                <parameter type-id='type-id-347'/>
                <!-- void -->
                <return type-id='type-id-8'/>
              </function-decl>
            </member-function>
            <member-function access='private'>
              <!-- bool std::locale::_Impl::_M_check_same_name() -->
              <function-decl name='_M_check_same_name' mangled-name='_ZNSt6locale5_Impl18_M_check_same_nameEv' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='539' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'std::locale::_Impl*' -->
                <parameter type-id='type-id-346' is-artificial='yes'/>
                <!-- bool -->
                <return type-id='type-id-11'/>
              </function-decl>
            </member-function>
            <member-function access='private'>
              <!-- void std::locale::_Impl::_M_replace_categories(const std::locale::_Impl*, std::locale::category) -->
              <function-decl name='_M_replace_categories' mangled-name='_ZNSt6locale5_Impl21_M_replace_categoriesEPKS0_i' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='550' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'std::locale::_Impl*' -->
                <parameter type-id='type-id-346' is-artificial='yes'/>
                <!-- parameter of type 'const std::locale::_Impl*' -->
                <parameter type-id='type-id-348'/>
                <!-- parameter of type 'typedef std::locale::category' -->
                <parameter type-id='type-id-341'/>
                <!-- void -->
                <return type-id='type-id-8'/>
              </function-decl>
            </member-function>
            <member-function access='private'>
              <!-- void std::locale::_Impl::_M_replace_category(const std::locale::_Impl*, const std::locale::id* const*) -->
              <function-decl name='_M_replace_category' mangled-name='_ZNSt6locale5_Impl19_M_replace_categoryEPKS0_PKPKNS_2idE' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='553' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'std::locale::_Impl*' -->
                <parameter type-id='type-id-346' is-artificial='yes'/>
                <!-- parameter of type 'const std::locale::_Impl*' -->
                <parameter type-id='type-id-348'/>
                <!-- parameter of type 'const std::locale::id* const*' -->
                <parameter type-id='type-id-349'/>
                <!-- void -->
                <return type-id='type-id-8'/>
              </function-decl>
            </member-function>
            <member-function access='private'>
              <!-- void std::locale::_Impl::_M_replace_facet(const std::locale::_Impl*, const std::locale::id*) -->
              <function-decl name='_M_replace_facet' mangled-name='_ZNSt6locale5_Impl16_M_replace_facetEPKS0_PKNS_2idE' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='556' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'std::locale::_Impl*' -->
                <parameter type-id='type-id-346' is-artificial='yes'/>
                <!-- parameter of type 'const std::locale::_Impl*' -->
                <parameter type-id='type-id-348'/>
                <!-- parameter of type 'const std::locale::id*' -->
                <parameter type-id='type-id-350'/>
                <!-- void -->
                <return type-id='type-id-8'/>
              </function-decl>
            </member-function>
            <member-function access='private'>
              <!-- void std::locale::_Impl::_M_install_facet(const std::locale::id*, const std::locale::facet*) -->
              <function-decl name='_M_install_facet' mangled-name='_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='559' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'std::locale::_Impl*' -->
                <parameter type-id='type-id-346' is-artificial='yes'/>
                <!-- parameter of type 'const std::locale::id*' -->
                <parameter type-id='type-id-350'/>
                <!-- parameter of type 'const std::locale::facet*' -->
                <parameter type-id='type-id-351'/>
                <!-- void -->
                <return type-id='type-id-8'/>
              </function-decl>
            </member-function>
            <member-function access='private'>
              <!-- void std::locale::_Impl::_M_install_cache(const std::locale::facet*, std::size_t) -->
              <function-decl name='_M_install_cache' mangled-name='_ZNSt6locale5_Impl16_M_install_cacheEPKNS_5facetEm' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='567' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'std::locale::_Impl*' -->
                <parameter type-id='type-id-346' is-artificial='yes'/>
                <!-- parameter of type 'const std::locale::facet*' -->
                <parameter type-id='type-id-351'/>
                <!-- parameter of type 'typedef std::size_t' -->
                <parameter type-id='type-id-138'/>
                <!-- void -->
                <return type-id='type-id-8'/>
              </function-decl>
            </member-function>
          </class-decl>
        </member-type>
        <member-type access='private'>
          <!-- class std::locale::facet -->
          <class-decl name='facet' visibility='default' is-declaration-only='yes' id='type-id-352'/>
        </member-type>
        <member-type access='private'>
          <!-- class std::locale::id -->
          <class-decl name='id' size-in-bits='64' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='436' column='1' id='type-id-353'>
            <data-member access='private' layout-offset-in-bits='0'>
              <!-- std::size_t std::locale::id::_M_index -->
              <var-decl name='_M_index' type-id='type-id-138' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='453' column='1'/>
            </data-member>
            <data-member access='private' static='yes'>
              <!-- static _Atomic_word std::locale::id::_S_refcount -->
              <var-decl name='_S_refcount' type-id='type-id-42' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='456' column='1'/>
            </data-member>
            <member-function access='private'>
              <!-- void std::locale::id::operator=(const std::locale::id&) -->
              <function-decl name='operator=' mangled-name='_ZNSt6locale2idaSERKS0_' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='459' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'std::locale::id*' -->
                <parameter type-id='type-id-354' is-artificial='yes'/>
                <!-- parameter of type 'const std::locale::id&' -->
                <parameter type-id='type-id-355'/>
                <!-- void -->
                <return type-id='type-id-8'/>
              </function-decl>
            </member-function>
            <member-function access='private' constructor='yes'>
              <!-- std::locale::id::id(const std::locale::id&) -->
              <function-decl name='id' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='461' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'std::locale::id*' -->
                <parameter type-id='type-id-354' is-artificial='yes'/>
                <!-- parameter of type 'const std::locale::id&' -->
                <parameter type-id='type-id-355'/>
                <!-- void -->
                <return type-id='type-id-8'/>
              </function-decl>
            </member-function>
            <member-function access='public' constructor='yes'>
              <!-- std::locale::id::id() -->
              <function-decl name='id' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='467' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'std::locale::id*' -->
                <parameter type-id='type-id-354' is-artificial='yes'/>
                <!-- void -->
                <return type-id='type-id-8'/>
              </function-decl>
            </member-function>
            <member-function access='public'>
              <!-- std::size_t std::locale::id::_M_id() -->
              <function-decl name='_M_id' mangled-name='_ZNKSt6locale2id5_M_idEv' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='470' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'const std::locale::id*' -->
                <parameter type-id='type-id-350' is-artificial='yes'/>
                <!-- typedef std::size_t -->
                <return type-id='type-id-138'/>
              </function-decl>
            </member-function>
          </class-decl>
        </member-type>
        <data-member access='public' static='yes'>
          <!-- static const std::locale::category std::locale::none -->
          <var-decl name='none' type-id='type-id-356' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='98' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const std::locale::category std::locale::ctype -->
          <var-decl name='ctype' type-id='type-id-356' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='99' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const std::locale::category std::locale::numeric -->
          <var-decl name='numeric' type-id='type-id-356' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='100' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const std::locale::category std::locale::collate -->
          <var-decl name='collate' type-id='type-id-356' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='101' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const std::locale::category std::locale::time -->
          <var-decl name='time' type-id='type-id-356' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='102' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const std::locale::category std::locale::monetary -->
          <var-decl name='monetary' type-id='type-id-356' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='103' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const std::locale::category std::locale::messages -->
          <var-decl name='messages' type-id='type-id-356' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='104' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const std::locale::category std::locale::all -->
          <var-decl name='all' type-id='type-id-356' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='105' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- std::locale::_Impl* std::locale::_M_impl -->
          <var-decl name='_M_impl' type-id='type-id-346' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='280' column='1'/>
        </data-member>
        <data-member access='private' static='yes'>
          <!-- static std::locale::_Impl* std::locale::_S_classic -->
          <var-decl name='_S_classic' type-id='type-id-346' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='283' column='1'/>
        </data-member>
        <data-member access='private' static='yes'>
          <!-- static std::locale::_Impl* std::locale::_S_global -->
          <var-decl name='_S_global' type-id='type-id-346' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='286' column='1'/>
        </data-member>
        <data-member access='private' static='yes'>
          <!-- static const char* const* const std::locale::_S_categories -->
          <var-decl name='_S_categories' type-id='type-id-357' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='292' column='1'/>
        </data-member>
        <data-member access='private' static='yes'>
          <!-- static __gthread_once_t std::locale::_S_once -->
          <var-decl name='_S_once' type-id='type-id-358' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='307' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- std::locale::locale() -->
          <function-decl name='locale' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='117' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'std::locale*' -->
            <parameter type-id='type-id-359' is-artificial='yes'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- std::locale::locale(const std::locale&) -->
          <function-decl name='locale' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='126' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'std::locale*' -->
            <parameter type-id='type-id-359' is-artificial='yes'/>
            <!-- parameter of type 'const std::locale&' -->
            <parameter type-id='type-id-171'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- std::locale::locale(const char*) -->
          <function-decl name='locale' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='137' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'std::locale*' -->
            <parameter type-id='type-id-359' is-artificial='yes'/>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='type-id-15'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- std::locale::locale(const std::locale&, const char*, std::locale::category) -->
          <function-decl name='locale' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='151' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'std::locale*' -->
            <parameter type-id='type-id-359' is-artificial='yes'/>
            <!-- parameter of type 'const std::locale&' -->
            <parameter type-id='type-id-171'/>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='type-id-15'/>
            <!-- parameter of type 'typedef std::locale::category' -->
            <parameter type-id='type-id-341'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- std::locale::locale(const std::locale&, const std::locale&, std::locale::category) -->
          <function-decl name='locale' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='164' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'std::locale*' -->
            <parameter type-id='type-id-359' is-artificial='yes'/>
            <!-- parameter of type 'const std::locale&' -->
            <parameter type-id='type-id-171'/>
            <!-- parameter of type 'const std::locale&' -->
            <parameter type-id='type-id-171'/>
            <!-- parameter of type 'typedef std::locale::category' -->
            <parameter type-id='type-id-341'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- std::locale::~locale() -->
          <function-decl name='~locale' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='181' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'std::locale*' -->
            <parameter type-id='type-id-359' is-artificial='yes'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- const std::locale& std::locale::operator=(const std::locale&) -->
          <function-decl name='operator=' mangled-name='_ZNSt6localeaSERKS_' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='192' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'std::locale*' -->
            <parameter type-id='type-id-359' is-artificial='yes'/>
            <!-- parameter of type 'const std::locale&' -->
            <parameter type-id='type-id-171'/>
            <!-- const std::locale& -->
            <return type-id='type-id-171'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- std::string std::locale::name() -->
          <function-decl name='name' mangled-name='_ZNKSt6locale4nameEv' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='216' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const std::locale*' -->
            <parameter type-id='type-id-360' is-artificial='yes'/>
            <!-- typedef std::string -->
            <return type-id='type-id-10'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool std::locale::operator==(const std::locale&) -->
          <function-decl name='operator==' mangled-name='_ZNKSt6localeeqERKS_' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='226' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const std::locale*' -->
            <parameter type-id='type-id-360' is-artificial='yes'/>
            <!-- parameter of type 'const std::locale&' -->
            <parameter type-id='type-id-171'/>
            <!-- bool -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool std::locale::operator!=(const std::locale&) -->
          <function-decl name='operator!=' mangled-name='_ZNKSt6localeneERKS_' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='235' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const std::locale*' -->
            <parameter type-id='type-id-360' is-artificial='yes'/>
            <!-- parameter of type 'const std::locale&' -->
            <parameter type-id='type-id-171'/>
            <!-- bool -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- std::locale std::locale::global() -->
          <function-decl name='global' mangled-name='_ZNSt6locale6globalERKS_' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='270' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- parameter of type 'const std::locale&' -->
            <parameter type-id='type-id-171'/>
            <!-- class std::locale -->
            <return type-id='type-id-172'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- const std::locale& std::locale::classic() -->
          <function-decl name='classic' mangled-name='_ZNSt6locale7classicEv' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='276' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- const std::locale& -->
            <return type-id='type-id-171'/>
          </function-decl>
        </member-function>
        <member-function access='private' constructor='yes'>
          <!-- std::locale::locale(std::locale::_Impl*) -->
          <function-decl name='locale' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='311' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'std::locale*' -->
            <parameter type-id='type-id-359' is-artificial='yes'/>
            <!-- parameter of type 'std::locale::_Impl*' -->
            <parameter type-id='type-id-346'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='private' static='yes'>
          <!-- void std::locale::_S_initialize() -->
          <function-decl name='_S_initialize' mangled-name='_ZNSt6locale13_S_initializeEv' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='314' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='private' static='yes'>
          <!-- void std::locale::_S_initialize_once() -->
          <function-decl name='_S_initialize_once' mangled-name='_ZNSt6locale18_S_initialize_onceEv' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='317' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='private' static='yes'>
          <!-- std::locale::category std::locale::_S_normalize_category() -->
          <function-decl name='_S_normalize_category' mangled-name='_ZNSt6locale21_S_normalize_categoryEi' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='320' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- parameter of type 'typedef std::locale::category' -->
            <parameter type-id='type-id-341'/>
            <!-- typedef std::locale::category -->
            <return type-id='type-id-341'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void std::locale::_M_coalesce(const std::locale&, const std::locale&, std::locale::category) -->
          <function-decl name='_M_coalesce' mangled-name='_ZNSt6locale11_M_coalesceERKS_S1_i' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h' line='323' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'std::locale*' -->
            <parameter type-id='type-id-359' is-artificial='yes'/>
            <!-- parameter of type 'const std::locale&' -->
            <parameter type-id='type-id-171'/>
            <!-- parameter of type 'const std::locale&' -->
            <parameter type-id='type-id-171'/>
            <!-- parameter of type 'typedef std::locale::category' -->
            <parameter type-id='type-id-341'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
      </class-decl>
    </namespace-decl>
    <!-- unnamed&#45;enum&#45;underlying&#45;type -->
    <type-decl name='unnamed-enum-underlying-type' is-anonymous='yes' size-in-bits='32' alignment-in-bits='32' id='type-id-187'/>
    <!-- boost::filesystem::file_status* -->
    <pointer-type-def type-id='type-id-144' size-in-bits='64' id='type-id-184'/>
    <!-- const boost::filesystem::file_status -->
    <qualified-type-def type-id='type-id-144' const='yes' id='type-id-361'/>
    <!-- const boost::filesystem::file_status* -->
    <pointer-type-def type-id='type-id-361' size-in-bits='64' id='type-id-185'/>
    <!-- const boost::filesystem::file_status& -->
    <reference-type-def kind='lvalue' type-id='type-id-361' size-in-bits='64' id='type-id-186'/>
    <!-- boost::filesystem::directory_entry* -->
    <pointer-type-def type-id='type-id-140' size-in-bits='64' id='type-id-179'/>
    <!-- const boost::filesystem::path -->
    <qualified-type-def type-id='type-id-142' const='yes' id='type-id-362'/>
    <!-- const boost::filesystem::path& -->
    <reference-type-def kind='lvalue' type-id='type-id-362' size-in-bits='64' id='type-id-143'/>
    <!-- const boost::filesystem::directory_entry -->
    <qualified-type-def type-id='type-id-140' const='yes' id='type-id-363'/>
    <!-- const boost::filesystem::directory_entry* -->
    <pointer-type-def type-id='type-id-363' size-in-bits='64' id='type-id-180'/>
    <!-- boost::system::error_code& -->
    <reference-type-def kind='lvalue' type-id='type-id-18' size-in-bits='64' id='type-id-181'/>
    <!-- const boost::filesystem::directory_entry& -->
    <reference-type-def kind='lvalue' type-id='type-id-363' size-in-bits='64' id='type-id-182'/>
    <!-- boost::filesystem::detail::dir_itr_imp* -->
    <pointer-type-def type-id='type-id-139' size-in-bits='64' id='type-id-141'/>
    <!-- boost::filesystem::detail::dir_itr_imp*& -->
    <reference-type-def kind='lvalue' type-id='type-id-141' size-in-bits='64' id='type-id-320'/>
    <!-- std::remove_reference<boost::filesystem::detail::dir_itr_imp *&>::type&& -->
    <reference-type-def kind='rvalue' type-id='type-id-322' size-in-bits='64' id='type-id-323'/>
    <!-- char* const -->
    <qualified-type-def type-id='type-id-40' const='yes' id='type-id-364'/>
    <!-- char* const& -->
    <reference-type-def kind='lvalue' type-id='type-id-364' size-in-bits='64' id='type-id-176'/>
    <!-- boost::system::system_error* -->
    <pointer-type-def type-id='type-id-189' size-in-bits='64' id='type-id-206'/>
    <!-- const std::string -->
    <qualified-type-def type-id='type-id-10' const='yes' id='type-id-173'/>
    <!-- const std::string& -->
    <reference-type-def kind='lvalue' type-id='type-id-173' size-in-bits='64' id='type-id-169'/>
    <!-- const boost::system::system_error -->
    <qualified-type-def type-id='type-id-189' const='yes' id='type-id-365'/>
    <!-- const boost::system::system_error* -->
    <pointer-type-def type-id='type-id-365' size-in-bits='64' id='type-id-207'/>
    <!-- int* -->
    <pointer-type-def type-id='type-id-5' size-in-bits='64' id='type-id-222'/>
    <!-- boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>::element_type* -->
    <pointer-type-def type-id='type-id-283' size-in-bits='64' id='type-id-284'/>
    <!-- boost::detail::sp_counted_base* -->
    <pointer-type-def type-id='type-id-233' size-in-bits='64' id='type-id-225'/>
    <!-- const boost::detail::sp_counted_base -->
    <qualified-type-def type-id='type-id-233' const='yes' id='type-id-366'/>
    <!-- const boost::detail::sp_counted_base& -->
    <reference-type-def kind='lvalue' type-id='type-id-366' size-in-bits='64' id='type-id-234'/>
    <!-- boost::detail::sp_counted_base& -->
    <reference-type-def kind='lvalue' type-id='type-id-233' size-in-bits='64' id='type-id-235'/>
    <!-- const boost::detail::sp_typeinfo -->
    <qualified-type-def type-id='type-id-238' const='yes' id='type-id-367'/>
    <!-- const boost::detail::sp_typeinfo& -->
    <reference-type-def kind='lvalue' type-id='type-id-367' size-in-bits='64' id='type-id-220'/>
    <!-- const boost::detail::sp_counted_base* -->
    <pointer-type-def type-id='type-id-366' size-in-bits='64' id='type-id-236'/>
    <!-- boost::detail::shared_count* -->
    <pointer-type-def type-id='type-id-211' size-in-bits='64' id='type-id-226'/>
    <!-- const boost::detail::shared_count -->
    <qualified-type-def type-id='type-id-211' const='yes' id='type-id-368'/>
    <!-- const boost::detail::shared_count& -->
    <reference-type-def kind='lvalue' type-id='type-id-368' size-in-bits='64' id='type-id-227'/>
    <!-- boost::detail::shared_count&& -->
    <reference-type-def kind='rvalue' type-id='type-id-211' size-in-bits='64' id='type-id-228'/>
    <!-- boost::detail::weak_count* -->
    <pointer-type-def type-id='type-id-239' size-in-bits='64' id='type-id-240'/>
    <!-- const boost::detail::weak_count -->
    <qualified-type-def type-id='type-id-239' const='yes' id='type-id-369'/>
    <!-- const boost::detail::weak_count& -->
    <reference-type-def kind='lvalue' type-id='type-id-369' size-in-bits='64' id='type-id-229'/>
    <!-- boost::detail::weak_count&& -->
    <reference-type-def kind='rvalue' type-id='type-id-239' size-in-bits='64' id='type-id-241'/>
    <!-- boost::detail::weak_count& -->
    <reference-type-def kind='lvalue' type-id='type-id-239' size-in-bits='64' id='type-id-242'/>
    <!-- const boost::detail::weak_count* -->
    <pointer-type-def type-id='type-id-369' size-in-bits='64' id='type-id-243'/>
    <!-- boost::detail::shared_count& -->
    <reference-type-def kind='lvalue' type-id='type-id-211' size-in-bits='64' id='type-id-231'/>
    <!-- const boost::detail::shared_count* -->
    <pointer-type-def type-id='type-id-368' size-in-bits='64' id='type-id-232'/>
    <!-- boost::filesystem::filesystem_error::m_imp* -->
    <pointer-type-def type-id='type-id-190' size-in-bits='64' id='type-id-221'/>
    <!-- boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>* -->
    <pointer-type-def type-id='type-id-196' size-in-bits='64' id='type-id-250'/>
    <!-- const boost::shared_ptr<boost::filesystem::detail::dir_itr_imp> -->
    <qualified-type-def type-id='type-id-196' const='yes' id='type-id-370'/>
    <!-- const boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>& -->
    <reference-type-def kind='lvalue' type-id='type-id-370' size-in-bits='64' id='type-id-285'/>
    <!-- boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>& -->
    <reference-type-def kind='lvalue' type-id='type-id-196' size-in-bits='64' id='type-id-286'/>
    <!-- boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>&& -->
    <reference-type-def kind='rvalue' type-id='type-id-196' size-in-bits='64' id='type-id-287'/>
    <!-- boost::filesystem::detail::dir_itr_imp& -->
    <reference-type-def kind='lvalue' type-id='type-id-139' size-in-bits='64' id='type-id-246'/>
    <!-- const boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>* -->
    <pointer-type-def type-id='type-id-370' size-in-bits='64' id='type-id-288'/>
    <!-- boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>* -->
    <pointer-type-def type-id='type-id-191' size-in-bits='64' id='type-id-212'/>
    <!-- boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>::element_type* -->
    <pointer-type-def type-id='type-id-208' size-in-bits='64' id='type-id-210'/>
    <!-- const boost::shared_ptr<boost::filesystem::filesystem_error::m_imp> -->
    <qualified-type-def type-id='type-id-191' const='yes' id='type-id-371'/>
    <!-- const boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>& -->
    <reference-type-def kind='lvalue' type-id='type-id-371' size-in-bits='64' id='type-id-213'/>
    <!-- boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>& -->
    <reference-type-def kind='lvalue' type-id='type-id-191' size-in-bits='64' id='type-id-214'/>
    <!-- boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>&& -->
    <reference-type-def kind='rvalue' type-id='type-id-191' size-in-bits='64' id='type-id-215'/>
    <!-- boost::filesystem::filesystem_error::m_imp& -->
    <reference-type-def kind='lvalue' type-id='type-id-190' size-in-bits='64' id='type-id-253'/>
    <!-- const boost::shared_ptr<boost::filesystem::filesystem_error::m_imp>* -->
    <pointer-type-def type-id='type-id-371' size-in-bits='64' id='type-id-216'/>
    <!-- boost::filesystem::filesystem_error* -->
    <pointer-type-def type-id='type-id-188' size-in-bits='64' id='type-id-192'/>
    <!-- const boost::filesystem::filesystem_error -->
    <qualified-type-def type-id='type-id-188' const='yes' id='type-id-372'/>
    <!-- const boost::filesystem::filesystem_error* -->
    <pointer-type-def type-id='type-id-372' size-in-bits='64' id='type-id-193'/>
    <!-- boost::filesystem::filesystem_error::m_imp*& -->
    <reference-type-def kind='lvalue' type-id='type-id-221' size-in-bits='64' id='type-id-331'/>
    <!-- std::remove_reference<boost::filesystem::filesystem_error::m_imp *&>::type&& -->
    <reference-type-def kind='rvalue' type-id='type-id-333' size-in-bits='64' id='type-id-334'/>
    <!-- boost::filesystem::path* -->
    <pointer-type-def type-id='type-id-142' size-in-bits='64' id='type-id-163'/>
    <!-- const boost::filesystem::path::value_type* -->
    <pointer-type-def type-id='type-id-162' size-in-bits='64' id='type-id-164'/>
    <!-- const std::basic_string<char, std::char_traits<char>, std::allocator<char> > -->
    <qualified-type-def type-id='type-id-30' const='yes' id='type-id-373'/>
    <!-- const std::basic_string<char, std::char_traits<char>, std::allocator<char> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-373' size-in-bits='64' id='type-id-165'/>
    <!-- boost::filesystem::path& -->
    <reference-type-def kind='lvalue' type-id='type-id-142' size-in-bits='64' id='type-id-166'/>
    <!-- const boost::filesystem::path::codecvt_type -->
    <qualified-type-def type-id='type-id-154' const='yes' id='type-id-374'/>
    <!-- const boost::filesystem::path::codecvt_type& -->
    <reference-type-def kind='lvalue' type-id='type-id-374' size-in-bits='64' id='type-id-167'/>
    <!-- const boost::filesystem::path::string_type -->
    <qualified-type-def type-id='type-id-153' const='yes' id='type-id-174'/>
    <!-- const boost::filesystem::path::string_type& -->
    <reference-type-def kind='lvalue' type-id='type-id-174' size-in-bits='64' id='type-id-168'/>
    <!-- const boost::filesystem::path* -->
    <pointer-type-def type-id='type-id-362' size-in-bits='64' id='type-id-158'/>
    <!-- const std::wstring -->
    <qualified-type-def type-id='type-id-340' const='yes' id='type-id-170'/>
    <!-- boost::filesystem::path::iterator& -->
    <reference-type-def kind='lvalue' type-id='type-id-156' size-in-bits='64' id='type-id-175'/>
    <!-- boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>* -->
    <pointer-type-def type-id='type-id-157' size-in-bits='64' id='type-id-293'/>
    <!-- const boost::filesystem::path::iterator -->
    <qualified-type-def type-id='type-id-156' const='yes' id='type-id-375'/>
    <!-- const boost::filesystem::path::iterator& -->
    <reference-type-def kind='lvalue' type-id='type-id-375' size-in-bits='64' id='type-id-160'/>
    <!-- const boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long> -->
    <qualified-type-def type-id='type-id-157' const='yes' id='type-id-376'/>
    <!-- const boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>* -->
    <pointer-type-def type-id='type-id-376' size-in-bits='64' id='type-id-294'/>
    <!-- const boost::filesystem::path::iterator* -->
    <pointer-type-def type-id='type-id-375' size-in-bits='64' id='type-id-159'/>
    <!-- boost::filesystem::path::iterator* -->
    <pointer-type-def type-id='type-id-156' size-in-bits='64' id='type-id-161'/>
    <!-- const std::locale::category -->
    <qualified-type-def type-id='type-id-341' const='yes' id='type-id-356'/>
    <!-- const std::locale::facet -->
    <qualified-type-def type-id='type-id-352' const='yes' id='type-id-377'/>
    <!-- const std::locale::facet* -->
    <pointer-type-def type-id='type-id-377' size-in-bits='64' id='type-id-351'/>
    <!-- const std::locale::facet** -->
    <pointer-type-def type-id='type-id-351' size-in-bits='64' id='type-id-343'/>
    <!-- std::locale::id* -->
    <pointer-type-def type-id='type-id-353' size-in-bits='64' id='type-id-354'/>
    <!-- const std::locale::id -->
    <qualified-type-def type-id='type-id-353' const='yes' id='type-id-378'/>
    <!-- const std::locale::id& -->
    <reference-type-def kind='lvalue' type-id='type-id-378' size-in-bits='64' id='type-id-355'/>
    <!-- const std::locale::id* -->
    <pointer-type-def type-id='type-id-378' size-in-bits='64' id='type-id-350'/>
    <!-- const std::locale::id* const -->
    <qualified-type-def type-id='type-id-350' const='yes' id='type-id-379'/>
    <!-- const id* const[] -->
    <array-type-def dimensions='0' type-id='type-id-379' size-in-bits='infinite' id='type-id-344'/>
    <!-- const std::locale::id* const* -->
    <pointer-type-def type-id='type-id-379' size-in-bits='64' id='type-id-349'/>
    <!-- const std::locale::id* const* const -->
    <qualified-type-def type-id='type-id-349' const='yes' id='type-id-380'/>
    <!-- const id* const* const[] -->
    <array-type-def dimensions='0' type-id='type-id-380' size-in-bits='infinite' id='type-id-345'/>
    <!-- std::locale::_Impl* -->
    <pointer-type-def type-id='type-id-342' size-in-bits='64' id='type-id-346'/>
    <!-- const std::locale::_Impl -->
    <qualified-type-def type-id='type-id-342' const='yes' id='type-id-381'/>
    <!-- const std::locale::_Impl& -->
    <reference-type-def kind='lvalue' type-id='type-id-381' size-in-bits='64' id='type-id-347'/>
    <!-- const std::locale::_Impl* -->
    <pointer-type-def type-id='type-id-381' size-in-bits='64' id='type-id-348'/>
    <!-- const char* const -->
    <qualified-type-def type-id='type-id-15' const='yes' id='type-id-382'/>
    <!-- const char* const* -->
    <pointer-type-def type-id='type-id-382' size-in-bits='64' id='type-id-383'/>
    <!-- const char* const* const -->
    <qualified-type-def type-id='type-id-383' const='yes' id='type-id-357'/>
    <!-- typedef int pthread_once_t -->
    <typedef-decl name='pthread_once_t' type-id='type-id-5' filepath='/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h' line='168' column='1' id='type-id-384'/>
    <!-- typedef pthread_once_t __gthread_once_t -->
    <typedef-decl name='__gthread_once_t' type-id='type-id-384' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/x86_64-linux-gnu/c++/4.9/bits/gthr-default.h' line='49' column='1' id='type-id-358'/>
    <!-- std::locale* -->
    <pointer-type-def type-id='type-id-172' size-in-bits='64' id='type-id-359'/>
    <!-- const std::locale -->
    <qualified-type-def type-id='type-id-172' const='yes' id='type-id-385'/>
    <!-- const std::locale& -->
    <reference-type-def kind='lvalue' type-id='type-id-385' size-in-bits='64' id='type-id-171'/>
    <!-- const std::locale* -->
    <pointer-type-def type-id='type-id-385' size-in-bits='64' id='type-id-360'/>
    <!-- typedef unsigned long int uintmax_t -->
    <typedef-decl name='uintmax_t' type-id='type-id-56' filepath='/usr/include/stdint.h' line='135' column='1' id='type-id-146'/>
    <!-- typedef unsigned int __mode_t -->
    <typedef-decl name='__mode_t' type-id='type-id-69' filepath='/usr/include/x86_64-linux-gnu/bits/types.h' line='129' column='1' id='type-id-386'/>
    <!-- typedef __mode_t mode_t -->
    <typedef-decl name='mode_t' type-id='type-id-386' filepath='/usr/include/x86_64-linux-gnu/sys/types.h' line='70' column='1' id='type-id-148'/>
    <!-- void*& -->
    <reference-type-def kind='lvalue' type-id='type-id-55' size-in-bits='64' id='type-id-150'/>
    <!-- boost::filesystem::directory_iterator& -->
    <reference-type-def kind='lvalue' type-id='type-id-194' size-in-bits='64' id='type-id-151'/>
    <!-- boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>* -->
    <pointer-type-def type-id='type-id-195' size-in-bits='64' id='type-id-304'/>
    <!-- const boost::filesystem::directory_iterator -->
    <qualified-type-def type-id='type-id-194' const='yes' id='type-id-387'/>
    <!-- const boost::filesystem::directory_iterator& -->
    <reference-type-def kind='lvalue' type-id='type-id-387' size-in-bits='64' id='type-id-200'/>
    <!-- const boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long> -->
    <qualified-type-def type-id='type-id-195' const='yes' id='type-id-388'/>
    <!-- const boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>* -->
    <pointer-type-def type-id='type-id-388' size-in-bits='64' id='type-id-305'/>
    <!-- boost::filesystem::directory_entry& -->
    <reference-type-def kind='lvalue' type-id='type-id-140' size-in-bits='64' id='type-id-264'/>
    <!-- boost::filesystem::directory_iterator* -->
    <pointer-type-def type-id='type-id-194' size-in-bits='64' id='type-id-197'/>
    <!-- const boost::filesystem::directory_iterator* -->
    <pointer-type-def type-id='type-id-387' size-in-bits='64' id='type-id-198'/>
    <!-- boost::filesystem::perms& -->
    <reference-type-def kind='lvalue' type-id='type-id-147' size-in-bits='64' id='type-id-201'/>
    <!-- std::string& -->
    <reference-type-def kind='lvalue' type-id='type-id-10' size-in-bits='64' id='type-id-203'/>
    <!-- const boost::filesystem::path_traits::codecvt_type -->
    <qualified-type-def type-id='type-id-202' const='yes' id='type-id-389'/>
    <!-- const boost::filesystem::path_traits::codecvt_type& -->
    <reference-type-def kind='lvalue' type-id='type-id-389' size-in-bits='64' id='type-id-204'/>
    <!-- const boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>& -->
    <reference-type-def kind='lvalue' type-id='type-id-376' size-in-bits='64' id='type-id-309'/>
    <!-- const boost::iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>& -->
    <reference-type-def kind='lvalue' type-id='type-id-388' size-in-bits='64' id='type-id-310'/>
    <!-- namespace mpl_ -->
    <namespace-decl name='mpl_'>

      <!-- struct mpl_::bool_<true> -->
      <class-decl name='bool_&lt;true&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='src/third_party/boost-1.56.0/boost/mpl/bool.hpp' line='23' column='1' id='type-id-390'>
        <data-member access='public' static='yes'>
          <!-- static const bool mpl_::bool_<true>::value -->
          <var-decl name='value' type-id='type-id-391' visibility='default' filepath='src/third_party/boost-1.56.0/boost/mpl/bool.hpp' line='25' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- bool mpl_::bool_<true>::operator bool() -->
          <function-decl name='operator bool' mangled-name='_ZNK4mpl_5bool_ILb1EEcvbEv' filepath='src/third_party/boost-1.56.0/boost/mpl/bool.hpp' line='29' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const mpl_::bool_<true>*' -->
            <parameter type-id='type-id-392' is-artificial='yes'/>
            <!-- bool -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- typedef mpl_::bool_<true> mpl_::true_ -->
      <typedef-decl name='true_' type-id='type-id-390' filepath='src/third_party/boost-1.56.0/boost/mpl/bool_fwd.hpp' line='24' column='1' id='type-id-319'/>
    </namespace-decl>

    <!-- namespace __gnu_cxx -->
    <namespace-decl name='__gnu_cxx'>
      <!-- lldiv_t __gnu_cxx::div(long long int, long long int) -->
      <function-decl name='div' mangled-name='_ZN9__gnu_cxx3divExx' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/cstdlib' line='214' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'long long int' -->
        <parameter type-id='type-id-76'/>
        <!-- parameter of type 'long long int' -->
        <parameter type-id='type-id-76'/>
        <!-- typedef lldiv_t -->
        <return type-id='type-id-77'/>
      </function-decl>
      <!-- bool __gnu_cxx::__is_null_pointer<char>(char*) -->
      <function-decl name='__is_null_pointer&lt;char&gt;' mangled-name='_ZN9__gnu_cxx17__is_null_pointerIcEEbPT_' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/ext/type_traits.h' line='150' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN9__gnu_cxx17__is_null_pointerIcEEbPT_'>
        <!-- parameter of type 'char*' -->
        <parameter type-id='type-id-40' name='__ptr' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/ext/type_traits.h' line='150' column='1'/>
        <!-- bool -->
        <return type-id='type-id-11'/>
      </function-decl>
    </namespace-decl>
    <!-- void abort() -->
    <function-decl name='abort' filepath='/usr/include/stdlib.h' line='515' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int abs(int) -->
    <function-decl name='abs' filepath='/usr/include/stdlib.h' line='774' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int atexit(void ()*) -->
    <function-decl name='atexit' filepath='/usr/include/stdlib.h' line='519' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void ()*' -->
      <parameter type-id='type-id-4'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int at_quick_exit(void ()*) -->
    <function-decl name='at_quick_exit' filepath='/usr/include/stdlib.h' line='524' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void ()*' -->
      <parameter type-id='type-id-4'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- double atof(const char*) -->
    <function-decl name='atof' filepath='/usr/include/stdlib.h' line='144' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- int atoi(const char*) -->
    <function-decl name='atoi' filepath='/usr/include/stdlib.h' line='147' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- long int atol(const char*) -->
    <function-decl name='atol' filepath='/usr/include/stdlib.h' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- void* bsearch(void*, void*, size_t, size_t, __compar_fn_t) -->
    <function-decl name='bsearch' filepath='/usr/include/stdlib.h' line='754' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef __compar_fn_t' -->
      <parameter type-id='type-id-60'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- void* calloc(size_t, size_t) -->
    <function-decl name='calloc' filepath='/usr/include/stdlib.h' line='468' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- div_t div(int, int) -->
    <function-decl name='div' filepath='/usr/include/stdlib.h' line='788' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- typedef div_t -->
      <return type-id='type-id-61'/>
    </function-decl>
    <!-- void exit(int) -->
    <function-decl name='exit' filepath='/usr/include/stdlib.h' line='543' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- void free(void*) -->
    <function-decl name='free' filepath='/usr/include/stdlib.h' line='483' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- char* getenv(const char*) -->
    <function-decl name='getenv' filepath='/usr/include/stdlib.h' line='564' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- long int labs(long int) -->
    <function-decl name='labs' filepath='/usr/include/stdlib.h' line='775' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- ldiv_t ldiv(long int, long int) -->
    <function-decl name='ldiv' filepath='/usr/include/stdlib.h' line='790' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- typedef ldiv_t -->
      <return type-id='type-id-63'/>
    </function-decl>
    <!-- void* malloc(size_t) -->
    <function-decl name='malloc' filepath='/usr/include/stdlib.h' line='466' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- int mblen(const char*, size_t) -->
    <function-decl name='mblen' filepath='/usr/include/stdlib.h' line='862' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- size_t mbstowcs(wchar_t* restrict, const char* restrict, size_t) -->
    <function-decl name='mbstowcs' filepath='/usr/include/stdlib.h' line='873' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- int mbtowc(wchar_t* restrict, const char* restrict, size_t) -->
    <function-decl name='mbtowc' filepath='/usr/include/stdlib.h' line='865' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void qsort(void*, size_t, size_t, __compar_fn_t) -->
    <function-decl name='qsort' filepath='/usr/include/stdlib.h' line='764' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef __compar_fn_t' -->
      <parameter type-id='type-id-60'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- void quick_exit(int) -->
    <function-decl name='quick_exit' filepath='/usr/include/stdlib.h' line='549' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int rand() -->
    <function-decl name='rand' filepath='/usr/include/stdlib.h' line='374' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void* realloc(void*, size_t) -->
    <function-decl name='realloc' filepath='/usr/include/stdlib.h' line='480' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- void srand(unsigned int) -->
    <function-decl name='srand' filepath='/usr/include/stdlib.h' line='376' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-69'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- double strtod(const char* restrict, char** restrict) -->
    <function-decl name='strtod' filepath='/usr/include/stdlib.h' line='164' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- long int strtol(const char* restrict, char** restrict, int) -->
    <function-decl name='strtol' filepath='/usr/include/stdlib.h' line='183' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- unsigned long int strtoul(const char* restrict, char** restrict, int) -->
    <function-decl name='strtoul' filepath='/usr/include/stdlib.h' line='187' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- unsigned long int -->
      <return type-id='type-id-56'/>
    </function-decl>
    <!-- int system(const char*) -->
    <function-decl name='system' filepath='/usr/include/stdlib.h' line='716' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- size_t wcstombs(char* restrict, const wchar_t* restrict, size_t) -->
    <function-decl name='wcstombs' filepath='/usr/include/stdlib.h' line='876' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- int wctomb(char*, wchar_t) -->
    <function-decl name='wctomb' filepath='/usr/include/stdlib.h' line='869' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-40'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void _Exit(int) -->
    <function-decl name='_Exit' filepath='/usr/include/stdlib.h' line='557' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- long long int llabs(long long int) -->
    <function-decl name='llabs' filepath='/usr/include/stdlib.h' line='779' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long long int' -->
      <parameter type-id='type-id-76'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- lldiv_t lldiv(long long int, long long int) -->
    <function-decl name='lldiv' filepath='/usr/include/stdlib.h' line='796' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long long int' -->
      <parameter type-id='type-id-76'/>
      <!-- parameter of type 'long long int' -->
      <parameter type-id='type-id-76'/>
      <!-- typedef lldiv_t -->
      <return type-id='type-id-77'/>
    </function-decl>
    <!-- long long int atoll(const char*) -->
    <function-decl name='atoll' filepath='/usr/include/stdlib.h' line='157' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long int strtoll(const char* restrict, char** restrict, int) -->
    <function-decl name='strtoll' filepath='/usr/include/stdlib.h' line='209' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long unsigned int strtoull(const char* restrict, char** restrict, int) -->
    <function-decl name='strtoull' filepath='/usr/include/stdlib.h' line='214' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long long unsigned int -->
      <return type-id='type-id-79'/>
    </function-decl>
    <!-- float strtof(const char* restrict, char** restrict) -->
    <function-decl name='strtof' filepath='/usr/include/stdlib.h' line='172' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double strtold(const char* restrict, char** restrict) -->
    <function-decl name='strtold' filepath='/usr/include/stdlib.h' line='175' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- wint_t btowc(int) -->
    <function-decl name='btowc' filepath='/usr/include/wchar.h' line='353' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wint_t fgetwc(__FILE*) -->
    <function-decl name='fgetwc' filepath='/usr/include/wchar.h' line='745' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wchar_t* fgetws(wchar_t* restrict, int, __FILE* restrict) -->
    <function-decl name='fgetws' filepath='/usr/include/wchar.h' line='774' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wint_t fputwc(wchar_t, __FILE*) -->
    <function-decl name='fputwc' filepath='/usr/include/wchar.h' line='759' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- int fputws(const wchar_t* restrict, __FILE* restrict) -->
    <function-decl name='fputws' filepath='/usr/include/wchar.h' line='781' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fwide(__FILE*, int) -->
    <function-decl name='fwide' filepath='/usr/include/wchar.h' line='587' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fwprintf(__FILE* restrict, const wchar_t* restrict, ...) -->
    <function-decl name='fwprintf' filepath='/usr/include/wchar.h' line='594' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fwscanf(__FILE* restrict, const wchar_t* restrict, ...) -->
    <function-decl name='fwscanf' filepath='/usr/include/wchar.h' line='635' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wint_t getwc(__FILE*) -->
    <function-decl name='getwc' filepath='/usr/include/wchar.h' line='746' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wint_t getwchar() -->
    <function-decl name='getwchar' filepath='/usr/include/wchar.h' line='752' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- size_t mbrlen(const char* restrict, size_t, mbstate_t* restrict) -->
    <function-decl name='mbrlen' filepath='/usr/include/wchar.h' line='376' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'mbstate_t* restrict' -->
      <parameter type-id='type-id-92'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- size_t mbrtowc(wchar_t* restrict, const char* restrict, size_t, mbstate_t* restrict) -->
    <function-decl name='mbrtowc' filepath='/usr/include/wchar.h' line='365' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'mbstate_t* restrict' -->
      <parameter type-id='type-id-92'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- int mbsinit(const mbstate_t*) -->
    <function-decl name='mbsinit' filepath='/usr/include/wchar.h' line='361' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const mbstate_t*' -->
      <parameter type-id='type-id-94'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- size_t mbsrtowcs(wchar_t* restrict, const char** restrict, size_t, mbstate_t* restrict) -->
    <function-decl name='mbsrtowcs' filepath='/usr/include/wchar.h' line='408' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const char** restrict' -->
      <parameter type-id='type-id-96'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'mbstate_t* restrict' -->
      <parameter type-id='type-id-92'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- wint_t putwc(wchar_t, __FILE*) -->
    <function-decl name='putwc' filepath='/usr/include/wchar.h' line='760' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wint_t putwchar(wchar_t) -->
    <function-decl name='putwchar' filepath='/usr/include/wchar.h' line='766' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- int swprintf(wchar_t* restrict, size_t, const wchar_t* restrict, ...) -->
    <function-decl name='swprintf' filepath='/usr/include/wchar.h' line='604' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int swscanf(const wchar_t* restrict, const wchar_t* restrict, ...) -->
    <function-decl name='swscanf' filepath='/usr/include/wchar.h' line='645' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wint_t ungetwc(wint_t, __FILE*) -->
    <function-decl name='ungetwc' filepath='/usr/include/wchar.h' line='789' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- int vfwprintf(__FILE* restrict, const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vfwprintf' filepath='/usr/include/wchar.h' line='612' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vfwscanf(__FILE* restrict, const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vfwscanf' filepath='/usr/include/wchar.h' line='689' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vswprintf(wchar_t* restrict, size_t, const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vswprintf' filepath='/usr/include/wchar.h' line='625' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vswscanf(const wchar_t* restrict, const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vswscanf' filepath='/usr/include/wchar.h' line='701' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vwprintf(const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vwprintf' filepath='/usr/include/wchar.h' line='620' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vwscanf(const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vwscanf' filepath='/usr/include/wchar.h' line='697' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- size_t wcrtomb(char* restrict, wchar_t, mbstate_t* restrict) -->
    <function-decl name='wcrtomb' filepath='/usr/include/wchar.h' line='370' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- parameter of type 'mbstate_t* restrict' -->
      <parameter type-id='type-id-92'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- wchar_t* wcscat(wchar_t* restrict, const wchar_t* restrict) -->
    <function-decl name='wcscat' filepath='/usr/include/wchar.h' line='155' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- int wcscmp(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcscmp' filepath='/usr/include/wchar.h' line='163' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int wcscoll(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcscoll' filepath='/usr/include/wchar.h' line='192' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wchar_t* wcscpy(wchar_t* restrict, const wchar_t* restrict) -->
    <function-decl name='wcscpy' filepath='/usr/include/wchar.h' line='147' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- size_t wcscspn(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcscspn' filepath='/usr/include/wchar.h' line='252' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- size_t wcsftime(wchar_t* restrict, size_t, const wchar_t* restrict, const tm* restrict) -->
    <function-decl name='wcsftime' filepath='/usr/include/wchar.h' line='855' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'const tm* restrict' -->
      <parameter type-id='type-id-103'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- size_t wcslen(const wchar_t*) -->
    <function-decl name='wcslen' filepath='/usr/include/wchar.h' line='287' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- wchar_t* wcsncat(wchar_t* restrict, const wchar_t* restrict, size_t) -->
    <function-decl name='wcsncat' filepath='/usr/include/wchar.h' line='158' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- int wcsncmp(const wchar_t*, const wchar_t*, size_t) -->
    <function-decl name='wcsncmp' filepath='/usr/include/wchar.h' line='166' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wchar_t* wcsncpy(wchar_t* restrict, const wchar_t* restrict, size_t) -->
    <function-decl name='wcsncpy' filepath='/usr/include/wchar.h' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- size_t wcsrtombs(char* restrict, const wchar_t** restrict, size_t, mbstate_t* restrict) -->
    <function-decl name='wcsrtombs' filepath='/usr/include/wchar.h' line='414' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const wchar_t** restrict' -->
      <parameter type-id='type-id-105'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'mbstate_t* restrict' -->
      <parameter type-id='type-id-92'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- size_t wcsspn(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcsspn' filepath='/usr/include/wchar.h' line='256' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- double wcstod(const wchar_t* restrict, wchar_t** restrict) -->
    <function-decl name='wcstod' filepath='/usr/include/wchar.h' line='450' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float wcstof(const wchar_t* restrict, wchar_t** restrict) -->
    <function-decl name='wcstof' filepath='/usr/include/wchar.h' line='457' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- wchar_t* wcstok(wchar_t* restrict, const wchar_t* restrict, wchar_t** restrict) -->
    <function-decl name='wcstok' filepath='/usr/include/wchar.h' line='282' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- long int wcstol(const wchar_t* restrict, wchar_t** restrict, int) -->
    <function-decl name='wcstol' filepath='/usr/include/wchar.h' line='468' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- unsigned long int wcstoul(const wchar_t* restrict, wchar_t** restrict, int) -->
    <function-decl name='wcstoul' filepath='/usr/include/wchar.h' line='473' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- unsigned long int -->
      <return type-id='type-id-56'/>
    </function-decl>
    <!-- size_t wcsxfrm(wchar_t* restrict, const wchar_t* restrict, size_t) -->
    <function-decl name='wcsxfrm' filepath='/usr/include/wchar.h' line='196' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- int wctob(wint_t) -->
    <function-decl name='wctob' filepath='/usr/include/wchar.h' line='357' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int wmemcmp(const wchar_t*, const wchar_t*, size_t) -->
    <function-decl name='wmemcmp' filepath='/usr/include/wchar.h' line='325' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wchar_t* wmemcpy(wchar_t* restrict, const wchar_t* restrict, size_t) -->
    <function-decl name='wmemcpy' filepath='/usr/include/wchar.h' line='329' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wmemmove(wchar_t*, const wchar_t*, size_t) -->
    <function-decl name='wmemmove' filepath='/usr/include/wchar.h' line='334' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t*' -->
      <parameter type-id='type-id-66'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wmemset(wchar_t*, wchar_t, size_t) -->
    <function-decl name='wmemset' filepath='/usr/include/wchar.h' line='338' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t*' -->
      <parameter type-id='type-id-66'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- int wprintf(const wchar_t* restrict, ...) -->
    <function-decl name='wprintf' filepath='/usr/include/wchar.h' line='601' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int wscanf(const wchar_t* restrict, ...) -->
    <function-decl name='wscanf' filepath='/usr/include/wchar.h' line='642' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wchar_t* wcschr(const wchar_t*, wchar_t) -->
    <function-decl name='wcschr' filepath='/usr/include/wchar.h' line='227' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wcspbrk(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcspbrk' filepath='/usr/include/wchar.h' line='266' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wcsrchr(const wchar_t*, wchar_t) -->
    <function-decl name='wcsrchr' filepath='/usr/include/wchar.h' line='237' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wcsstr(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcsstr' filepath='/usr/include/wchar.h' line='277' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wmemchr(const wchar_t*, wchar_t, size_t) -->
    <function-decl name='wmemchr' filepath='/usr/include/wchar.h' line='320' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- long double wcstold(const wchar_t* restrict, wchar_t** restrict) -->
    <function-decl name='wcstold' filepath='/usr/include/wchar.h' line='459' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- long long int wcstoll(const wchar_t* restrict, wchar_t** restrict, int) -->
    <function-decl name='wcstoll' filepath='/usr/include/wchar.h' line='483' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long unsigned int wcstoull(const wchar_t* restrict, wchar_t** restrict, int) -->
    <function-decl name='wcstoull' filepath='/usr/include/wchar.h' line='490' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long long unsigned int -->
      <return type-id='type-id-79'/>
    </function-decl>

    <!-- char* setlocale(int, const char*) -->
    <function-decl name='setlocale' filepath='/usr/include/locale.h' line='124' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- lconv* localeconv() -->
    <function-decl name='localeconv' filepath='/usr/include/locale.h' line='127' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- lconv* -->
      <return type-id='type-id-109'/>
    </function-decl>
    <!-- int isalnum(int) -->
    <function-decl name='isalnum' filepath='/usr/include/ctype.h' line='110' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isalpha(int) -->
    <function-decl name='isalpha' filepath='/usr/include/ctype.h' line='111' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iscntrl(int) -->
    <function-decl name='iscntrl' filepath='/usr/include/ctype.h' line='112' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isdigit(int) -->
    <function-decl name='isdigit' filepath='/usr/include/ctype.h' line='113' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isgraph(int) -->
    <function-decl name='isgraph' filepath='/usr/include/ctype.h' line='115' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int islower(int) -->
    <function-decl name='islower' filepath='/usr/include/ctype.h' line='114' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isprint(int) -->
    <function-decl name='isprint' filepath='/usr/include/ctype.h' line='116' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int ispunct(int) -->
    <function-decl name='ispunct' filepath='/usr/include/ctype.h' line='117' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isspace(int) -->
    <function-decl name='isspace' filepath='/usr/include/ctype.h' line='118' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isupper(int) -->
    <function-decl name='isupper' filepath='/usr/include/ctype.h' line='119' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isxdigit(int) -->
    <function-decl name='isxdigit' filepath='/usr/include/ctype.h' line='120' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int tolower(int) -->
    <function-decl name='tolower' filepath='/usr/include/ctype.h' line='124' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int toupper(int) -->
    <function-decl name='toupper' filepath='/usr/include/ctype.h' line='127' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isblank(int) -->
    <function-decl name='isblank' filepath='/usr/include/ctype.h' line='136' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void clearerr(FILE*) -->
    <function-decl name='clearerr' filepath='/usr/include/stdio.h' line='826' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int fclose(FILE*) -->
    <function-decl name='fclose' filepath='/usr/include/stdio.h' line='237' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int feof(FILE*) -->
    <function-decl name='feof' filepath='/usr/include/stdio.h' line='828' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int ferror(FILE*) -->
    <function-decl name='ferror' filepath='/usr/include/stdio.h' line='830' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fflush(FILE*) -->
    <function-decl name='fflush' filepath='/usr/include/stdio.h' line='242' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fgetc(FILE*) -->
    <function-decl name='fgetc' filepath='/usr/include/stdio.h' line='531' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fgetpos(FILE* restrict, fpos_t* restrict) -->
    <function-decl name='fgetpos' mangled-name='fgetpos64' filepath='/usr/include/stdio.h' line='806' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'fpos_t* restrict' -->
      <parameter type-id='type-id-116'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- char* fgets(char* restrict, int, FILE* restrict) -->
    <function-decl name='fgets' filepath='/usr/include/stdio.h' line='622' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- FILE* fopen(const char* restrict, const char* restrict) -->
    <function-decl name='fopen' mangled-name='fopen64' filepath='/usr/include/stdio.h' line='283' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- FILE* -->
      <return type-id='type-id-111'/>
    </function-decl>
    <!-- int fprintf(FILE* restrict, const char* restrict, ...) -->
    <function-decl name='fprintf' filepath='/usr/include/stdio.h' line='356' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fputc(int, FILE*) -->
    <function-decl name='fputc' filepath='/usr/include/stdio.h' line='573' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fputs(const char* restrict, FILE* restrict) -->
    <function-decl name='fputs' filepath='/usr/include/stdio.h' line='689' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- size_t fread(void* restrict, size_t, size_t, FILE* restrict) -->
    <function-decl name='fread' filepath='/usr/include/stdio.h' line='709' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void* restrict' -->
      <parameter type-id='type-id-117'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- FILE* freopen(const char* restrict, const char* restrict, FILE* restrict) -->
    <function-decl name='freopen' mangled-name='freopen64' filepath='/usr/include/stdio.h' line='286' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- FILE* -->
      <return type-id='type-id-111'/>
    </function-decl>
    <!-- int fscanf(FILE* restrict, const char* restrict, ...) -->
    <function-decl name='fscanf' filepath='/usr/include/stdio.h' line='425' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fseek(FILE*, long int, int) -->
    <function-decl name='fseek' filepath='/usr/include/stdio.h' line='749' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fsetpos(FILE*, const fpos_t*) -->
    <function-decl name='fsetpos' mangled-name='fsetpos64' filepath='/usr/include/stdio.h' line='808' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- parameter of type 'const fpos_t*' -->
      <parameter type-id='type-id-119'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- long int ftell(FILE*) -->
    <function-decl name='ftell' filepath='/usr/include/stdio.h' line='754' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- size_t fwrite(void* restrict, size_t, size_t, FILE* restrict) -->
    <function-decl name='fwrite' filepath='/usr/include/stdio.h' line='715' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void* restrict' -->
      <parameter type-id='type-id-117'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- int getc(FILE*) -->
    <function-decl name='getc' filepath='/usr/include/stdio.h' line='532' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int getchar() -->
    <function-decl name='getchar' filepath='/usr/include/stdio.h' line='538' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- char* gets(char*) -->
    <function-decl name='gets' filepath='/usr/include/stdio.h' line='638' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-40'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- void perror(const char*) -->
    <function-decl name='perror' filepath='/usr/include/stdio.h' line='846' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int printf(const char* restrict, ...) -->
    <function-decl name='printf' filepath='/usr/include/stdio.h' line='362' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int putc(int, FILE*) -->
    <function-decl name='putc' filepath='/usr/include/stdio.h' line='574' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int putchar(int) -->
    <function-decl name='putchar' filepath='/usr/include/stdio.h' line='580' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int puts(const char*) -->
    <function-decl name='puts' filepath='/usr/include/stdio.h' line='695' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int remove(const char*) -->
    <function-decl name='remove' filepath='/usr/include/stdio.h' line='178' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int rename(const char*, const char*) -->
    <function-decl name='rename' filepath='/usr/include/stdio.h' line='180' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void rewind(FILE*) -->
    <function-decl name='rewind' filepath='/usr/include/stdio.h' line='759' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int scanf(const char* restrict, ...) -->
    <function-decl name='scanf' filepath='/usr/include/stdio.h' line='431' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void setbuf(FILE* restrict, char* restrict) -->
    <function-decl name='setbuf' filepath='/usr/include/stdio.h' line='332' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int setvbuf(FILE* restrict, char* restrict, int, size_t) -->
    <function-decl name='setvbuf' filepath='/usr/include/stdio.h' line='336' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int sprintf(char* restrict, const char* restrict, ...) -->
    <function-decl name='sprintf' filepath='/usr/include/stdio.h' line='364' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int sscanf(const char* restrict, const char* restrict, ...) -->
    <function-decl name='sscanf' filepath='/usr/include/stdio.h' line='433' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- FILE* tmpfile() -->
    <function-decl name='tmpfile' mangled-name='tmpfile64' filepath='/usr/include/stdio.h' line='198' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- FILE* -->
      <return type-id='type-id-111'/>
    </function-decl>
    <!-- char* tmpnam(char*) -->
    <function-decl name='tmpnam' filepath='/usr/include/stdio.h' line='209' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-40'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- int ungetc(int, FILE*) -->
    <function-decl name='ungetc' filepath='/usr/include/stdio.h' line='702' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vfprintf(FILE* restrict, const char* restrict, __va_list_tag*) -->
    <function-decl name='vfprintf' filepath='/usr/include/stdio.h' line='371' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vprintf(const char* restrict, __va_list_tag*) -->
    <function-decl name='vprintf' filepath='/usr/include/stdio.h' line='377' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vsprintf(char* restrict, const char* restrict, __va_list_tag*) -->
    <function-decl name='vsprintf' filepath='/usr/include/stdio.h' line='379' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int snprintf(char* restrict, size_t, const char* restrict, ...) -->
    <function-decl name='snprintf' filepath='/usr/include/stdio.h' line='386' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vfscanf(FILE* restrict, const char* restrict, __va_list_tag*) -->
    <function-decl name='vfscanf' filepath='/usr/include/stdio.h' line='471' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vscanf(const char* restrict, __va_list_tag*) -->
    <function-decl name='vscanf' filepath='/usr/include/stdio.h' line='479' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vsnprintf(char* restrict, size_t, const char* restrict, __va_list_tag*) -->
    <function-decl name='vsnprintf' filepath='/usr/include/stdio.h' line='390' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vsscanf(const char* restrict, const char* restrict, __va_list_tag*) -->
    <function-decl name='vsscanf' filepath='/usr/include/stdio.h' line='483' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswalnum(wint_t) -->
    <function-decl name='iswalnum' filepath='/usr/include/wctype.h' line='111' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswalpha(wint_t) -->
    <function-decl name='iswalpha' filepath='/usr/include/wctype.h' line='117' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswblank(wint_t) -->
    <function-decl name='iswblank' filepath='/usr/include/wctype.h' line='162' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswcntrl(wint_t) -->
    <function-decl name='iswcntrl' filepath='/usr/include/wctype.h' line='120' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswctype(wint_t, wctype_t) -->
    <function-decl name='iswctype' filepath='/usr/include/wctype.h' line='175' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- parameter of type 'typedef wctype_t' -->
      <parameter type-id='type-id-120'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswdigit(wint_t) -->
    <function-decl name='iswdigit' filepath='/usr/include/wctype.h' line='124' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswgraph(wint_t) -->
    <function-decl name='iswgraph' filepath='/usr/include/wctype.h' line='128' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswlower(wint_t) -->
    <function-decl name='iswlower' filepath='/usr/include/wctype.h' line='133' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswprint(wint_t) -->
    <function-decl name='iswprint' filepath='/usr/include/wctype.h' line='136' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswpunct(wint_t) -->
    <function-decl name='iswpunct' filepath='/usr/include/wctype.h' line='141' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswspace(wint_t) -->
    <function-decl name='iswspace' filepath='/usr/include/wctype.h' line='146' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswupper(wint_t) -->
    <function-decl name='iswupper' filepath='/usr/include/wctype.h' line='151' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswxdigit(wint_t) -->
    <function-decl name='iswxdigit' filepath='/usr/include/wctype.h' line='156' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wint_t towctrans(wint_t, wctrans_t) -->
    <function-decl name='towctrans' filepath='/usr/include/wctype.h' line='221' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- parameter of type 'typedef wctrans_t' -->
      <parameter type-id='type-id-124'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wint_t towlower(wint_t) -->
    <function-decl name='towlower' filepath='/usr/include/wctype.h' line='194' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wint_t towupper(wint_t) -->
    <function-decl name='towupper' filepath='/usr/include/wctype.h' line='197' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wctrans_t wctrans(const char*) -->
    <function-decl name='wctrans' filepath='/usr/include/wctype.h' line='218' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- typedef wctrans_t -->
      <return type-id='type-id-124'/>
    </function-decl>
    <!-- wctype_t wctype(const char*) -->
    <function-decl name='wctype' filepath='/usr/include/wctype.h' line='171' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- typedef wctype_t -->
      <return type-id='type-id-120'/>
    </function-decl>
    <!-- clock_t clock() -->
    <function-decl name='clock' filepath='/usr/include/time.h' line='189' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- typedef clock_t -->
      <return type-id='type-id-126'/>
    </function-decl>
    <!-- double difftime(time_t, time_t) -->
    <function-decl name='difftime' filepath='/usr/include/time.h' line='195' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef time_t' -->
      <parameter type-id='type-id-128'/>
      <!-- parameter of type 'typedef time_t' -->
      <parameter type-id='type-id-128'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- time_t mktime(tm*) -->
    <function-decl name='mktime' filepath='/usr/include/time.h' line='199' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'tm*' -->
      <parameter type-id='type-id-129'/>
      <!-- typedef time_t -->
      <return type-id='type-id-128'/>
    </function-decl>
    <!-- time_t time(time_t*) -->
    <function-decl name='time' filepath='/usr/include/time.h' line='192' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'time_t*' -->
      <parameter type-id='type-id-130'/>
      <!-- typedef time_t -->
      <return type-id='type-id-128'/>
    </function-decl>
    <!-- char* asctime(const tm*) -->
    <function-decl name='asctime' filepath='/usr/include/time.h' line='261' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const tm*' -->
      <parameter type-id='type-id-102'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- char* ctime(const time_t*) -->
    <function-decl name='ctime' filepath='/usr/include/time.h' line='264' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const time_t*' -->
      <parameter type-id='type-id-132'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- tm* gmtime(const time_t*) -->
    <function-decl name='gmtime' filepath='/usr/include/time.h' line='239' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const time_t*' -->
      <parameter type-id='type-id-132'/>
      <!-- tm* -->
      <return type-id='type-id-129'/>
    </function-decl>
    <!-- tm* localtime(const time_t*) -->
    <function-decl name='localtime' filepath='/usr/include/time.h' line='243' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const time_t*' -->
      <parameter type-id='type-id-132'/>
      <!-- tm* -->
      <return type-id='type-id-129'/>
    </function-decl>
    <!-- size_t strftime(char* restrict, size_t, const char* restrict, const tm* restrict) -->
    <function-decl name='strftime' filepath='/usr/include/time.h' line='205' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'const tm* restrict' -->
      <parameter type-id='type-id-103'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>

    <!-- double acos(double) -->
    <function-decl name='acos' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='54' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double asin(double) -->
    <function-decl name='asin' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='56' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double atan(double) -->
    <function-decl name='atan' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='58' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double atan2(double, double) -->
    <function-decl name='atan2' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='60' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double ceil(double) -->
    <function-decl name='ceil' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='178' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double cos(double) -->
    <function-decl name='cos' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='63' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double cosh(double) -->
    <function-decl name='cosh' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='72' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double exp(double) -->
    <function-decl name='exp' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='100' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double fabs(double) -->
    <function-decl name='fabs' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='181' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double floor(double) -->
    <function-decl name='floor' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='184' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double fmod(double, double) -->
    <function-decl name='fmod' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='187' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double frexp(double, int*) -->
    <function-decl name='frexp' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='103' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='type-id-222'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double ldexp(double, int) -->
    <function-decl name='ldexp' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='106' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double log(double) -->
    <function-decl name='log' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='109' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double log10(double) -->
    <function-decl name='log10' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='112' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double* -->
    <pointer-type-def type-id='type-id-53' size-in-bits='64' id='type-id-393'/>
    <!-- double modf(double, double*) -->
    <function-decl name='modf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='115' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double*' -->
      <parameter type-id='type-id-393'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double pow(double, double) -->
    <function-decl name='pow' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='153' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double sin(double) -->
    <function-decl name='sin' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='65' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double sinh(double) -->
    <function-decl name='sinh' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='74' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double sqrt(double) -->
    <function-decl name='sqrt' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='156' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double tan(double) -->
    <function-decl name='tan' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='67' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double tanh(double) -->
    <function-decl name='tanh' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='76' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double acosh(double) -->
    <function-decl name='acosh' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='88' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float acoshf(float) -->
    <function-decl name='acoshf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='88' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double acoshl(long double) -->
    <function-decl name='acoshl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='88' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double asinh(double) -->
    <function-decl name='asinh' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='90' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float asinhf(float) -->
    <function-decl name='asinhf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='90' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double asinhl(long double) -->
    <function-decl name='asinhl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='90' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double atanh(double) -->
    <function-decl name='atanh' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='92' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float atanhf(float) -->
    <function-decl name='atanhf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='92' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double atanhl(long double) -->
    <function-decl name='atanhl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='92' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double cbrt(double) -->
    <function-decl name='cbrt' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='169' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float cbrtf(float) -->
    <function-decl name='cbrtf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='169' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double cbrtl(long double) -->
    <function-decl name='cbrtl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='169' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double copysign(double, double) -->
    <function-decl name='copysign' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='217' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float copysignf(float, float) -->
    <function-decl name='copysignf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='217' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double copysignl(long double, long double) -->
    <function-decl name='copysignl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='217' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double erf(double) -->
    <function-decl name='erf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='249' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float erff(float) -->
    <function-decl name='erff' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='249' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double erfl(long double) -->
    <function-decl name='erfl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='249' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double erfc(double) -->
    <function-decl name='erfc' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='250' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float erfcf(float) -->
    <function-decl name='erfcf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='250' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double erfcl(long double) -->
    <function-decl name='erfcl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='250' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double exp2(double) -->
    <function-decl name='exp2' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='141' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float exp2f(float) -->
    <function-decl name='exp2f' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='141' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double exp2l(long double) -->
    <function-decl name='exp2l' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='141' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double expm1(double) -->
    <function-decl name='expm1' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='128' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float expm1f(float) -->
    <function-decl name='expm1f' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='128' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double expm1l(long double) -->
    <function-decl name='expm1l' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='128' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double fdim(double, double) -->
    <function-decl name='fdim' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='337' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float fdimf(float, float) -->
    <function-decl name='fdimf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='337' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double fdiml(long double, long double) -->
    <function-decl name='fdiml' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='337' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double fma(double, double, double) -->
    <function-decl name='fma' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='356' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float fmaf(float, float, float) -->
    <function-decl name='fmaf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='356' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double fmal(long double, long double, long double) -->
    <function-decl name='fmal' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='356' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double fmax(double, double) -->
    <function-decl name='fmax' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='340' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float fmaxf(float, float) -->
    <function-decl name='fmaxf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='340' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double fmaxl(long double, long double) -->
    <function-decl name='fmaxl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='340' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double fmin(double, double) -->
    <function-decl name='fmin' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='343' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float fminf(float, float) -->
    <function-decl name='fminf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='343' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double fminl(long double, long double) -->
    <function-decl name='fminl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='343' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double hypot(double, double) -->
    <function-decl name='hypot' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='162' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float hypotf(float, float) -->
    <function-decl name='hypotf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='162' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double hypotl(long double, long double) -->
    <function-decl name='hypotl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='162' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- int ilogb(double) -->
    <function-decl name='ilogb' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='296' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int ilogbf(float) -->
    <function-decl name='ilogbf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='296' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int ilogbl(long double) -->
    <function-decl name='ilogbl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='296' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- double lgamma(double) -->
    <function-decl name='lgamma' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='251' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float lgammaf(float) -->
    <function-decl name='lgammaf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='251' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double lgammal(long double) -->
    <function-decl name='lgammal' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='251' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- long long int llrint(double) -->
    <function-decl name='llrint' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='327' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long int llrintf(float) -->
    <function-decl name='llrintf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='327' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long int llrintl(long double) -->
    <function-decl name='llrintl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='327' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long int llround(double) -->
    <function-decl name='llround' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='333' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long int llroundf(float) -->
    <function-decl name='llroundf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='333' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long int llroundl(long double) -->
    <function-decl name='llroundl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='333' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- double log1p(double) -->
    <function-decl name='log1p' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='131' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float log1pf(float) -->
    <function-decl name='log1pf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='131' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double log1pl(long double) -->
    <function-decl name='log1pl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='131' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double log2(double) -->
    <function-decl name='log2' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='144' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float log2f(float) -->
    <function-decl name='log2f' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='144' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double log2l(long double) -->
    <function-decl name='log2l' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='144' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double logb(double) -->
    <function-decl name='logb' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='134' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float logbf(float) -->
    <function-decl name='logbf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='134' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double logbl(long double) -->
    <function-decl name='logbl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='134' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- long int lrint(double) -->
    <function-decl name='lrint' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='325' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- long int lrintf(float) -->
    <function-decl name='lrintf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='325' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- long int lrintl(long double) -->
    <function-decl name='lrintl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='325' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- long int lround(double) -->
    <function-decl name='lround' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='331' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- long int lroundf(float) -->
    <function-decl name='lroundf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='331' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- long int lroundl(long double) -->
    <function-decl name='lroundl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='331' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- double nan(const char*) -->
    <function-decl name='nan' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='224' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float nanf(const char*) -->
    <function-decl name='nanf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='224' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double nanl(const char*) -->
    <function-decl name='nanl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='224' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double nearbyint(double) -->
    <function-decl name='nearbyint' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='305' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float nearbyintf(float) -->
    <function-decl name='nearbyintf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='305' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double nearbyintl(long double) -->
    <function-decl name='nearbyintl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='305' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double nextafter(double, double) -->
    <function-decl name='nextafter' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='282' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float nextafterf(float, float) -->
    <function-decl name='nextafterf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='282' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double nextafterl(long double, long double) -->
    <function-decl name='nextafterl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='282' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double nexttoward(double, long double) -->
    <function-decl name='nexttoward' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='284' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float nexttowardf(float, long double) -->
    <function-decl name='nexttowardf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='284' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double nexttowardl(long double, long double) -->
    <function-decl name='nexttowardl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='284' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double remainder(double, double) -->
    <function-decl name='remainder' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='288' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float remainderf(float, float) -->
    <function-decl name='remainderf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='288' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double remainderl(long double, long double) -->
    <function-decl name='remainderl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='288' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double remquo(double, double, int*) -->
    <function-decl name='remquo' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='318' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='type-id-222'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float remquof(float, float, int*) -->
    <function-decl name='remquof' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='318' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='type-id-222'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double remquol(long double, long double, int*) -->
    <function-decl name='remquol' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='318' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='type-id-222'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double rint(double) -->
    <function-decl name='rint' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='279' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float rintf(float) -->
    <function-decl name='rintf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='279' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double rintl(long double) -->
    <function-decl name='rintl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='279' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double round(double) -->
    <function-decl name='round' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='309' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float roundf(float) -->
    <function-decl name='roundf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='309' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double roundl(long double) -->
    <function-decl name='roundl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='309' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double scalbln(double, long int) -->
    <function-decl name='scalbln' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='301' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float scalblnf(float, long int) -->
    <function-decl name='scalblnf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='301' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double scalblnl(long double, long int) -->
    <function-decl name='scalblnl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='301' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double scalbn(double, int) -->
    <function-decl name='scalbn' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='292' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float scalbnf(float, int) -->
    <function-decl name='scalbnf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='292' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double scalbnl(long double, int) -->
    <function-decl name='scalbnl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='292' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double tgamma(double) -->
    <function-decl name='tgamma' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='258' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float tgammaf(float) -->
    <function-decl name='tgammaf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='258' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double tgammal(long double) -->
    <function-decl name='tgammal' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='258' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double trunc(double) -->
    <function-decl name='trunc' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='313' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float truncf(float) -->
    <function-decl name='truncf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='313' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double truncl(long double) -->
    <function-decl name='truncl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='313' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- void* memchr(void*, int, size_t) -->
    <function-decl name='memchr' filepath='/usr/include/string.h' line='78' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- int memcmp(void*, void*, size_t) -->
    <function-decl name='memcmp' filepath='/usr/include/string.h' line='69' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void* memcpy(void* restrict, void* restrict, size_t) -->
    <function-decl name='memcpy' filepath='/usr/include/string.h' line='46' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void* restrict' -->
      <parameter type-id='type-id-117'/>
      <!-- parameter of type 'void* restrict' -->
      <parameter type-id='type-id-117'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- void* memmove(void*, void*, size_t) -->
    <function-decl name='memmove' filepath='/usr/include/string.h' line='50' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- void* memset(void*, int, size_t) -->
    <function-decl name='memset' filepath='/usr/include/string.h' line='66' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- char* strcat(char* restrict, const char* restrict) -->
    <function-decl name='strcat' filepath='/usr/include/string.h' line='137' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- int strcmp(const char*, const char*) -->
    <function-decl name='strcmp' filepath='/usr/include/string.h' line='144' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int strcoll(const char*, const char*) -->
    <function-decl name='strcoll' filepath='/usr/include/string.h' line='151' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- char* strcpy(char* restrict, const char* restrict) -->
    <function-decl name='strcpy' filepath='/usr/include/string.h' line='129' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- size_t strcspn(const char*, const char*) -->
    <function-decl name='strcspn' filepath='/usr/include/string.h' line='284' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- char* strerror(int) -->
    <function-decl name='strerror' filepath='/usr/include/string.h' line='412' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- size_t strlen(const char*) -->
    <function-decl name='strlen' filepath='/usr/include/string.h' line='398' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- char* strncat(char* restrict, const char* restrict, size_t) -->
    <function-decl name='strncat' filepath='/usr/include/string.h' line='140' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- int strncmp(const char*, const char*, size_t) -->
    <function-decl name='strncmp' filepath='/usr/include/string.h' line='147' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- char* strncpy(char* restrict, const char* restrict, size_t) -->
    <function-decl name='strncpy' filepath='/usr/include/string.h' line='132' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- size_t strspn(const char*, const char*) -->
    <function-decl name='strspn' filepath='/usr/include/string.h' line='288' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- char* strtok(char* restrict, const char* restrict) -->
    <function-decl name='strtok' filepath='/usr/include/string.h' line='347' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- size_t strxfrm(char* restrict, const char* restrict, size_t) -->
    <function-decl name='strxfrm' filepath='/usr/include/string.h' line='154' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- const char* strchr(const char*, int) -->
    <function-decl name='strchr' filepath='/usr/include/string.h' line='217' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- const char* -->
      <return type-id='type-id-15'/>
    </function-decl>
    <!-- const char* strpbrk(const char*, const char*) -->
    <function-decl name='strpbrk' filepath='/usr/include/string.h' line='296' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- const char* -->
      <return type-id='type-id-15'/>
    </function-decl>
    <!-- const char* strrchr(const char*, int) -->
    <function-decl name='strrchr' filepath='/usr/include/string.h' line='244' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- const char* -->
      <return type-id='type-id-15'/>
    </function-decl>
    <!-- const char* strstr(const char*, const char*) -->
    <function-decl name='strstr' filepath='/usr/include/string.h' line='323' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- const char* -->
      <return type-id='type-id-15'/>
    </function-decl>
    <!-- boost::scoped_array<char>* -->
    <pointer-type-def type-id='type-id-311' size-in-bits='64' id='type-id-312'/>
    <!-- const boost::scoped_array<char> -->
    <qualified-type-def type-id='type-id-311' const='yes' id='type-id-394'/>
    <!-- const boost::scoped_array<char>& -->
    <reference-type-def kind='lvalue' type-id='type-id-394' size-in-bits='64' id='type-id-313'/>
    <!-- boost::scoped_array<char>& -->
    <reference-type-def kind='lvalue' type-id='type-id-311' size-in-bits='64' id='type-id-314'/>
    <!-- const boost::scoped_array<char>* -->
    <pointer-type-def type-id='type-id-394' size-in-bits='64' id='type-id-315'/>
    <!-- char& -->
    <reference-type-def kind='lvalue' type-id='type-id-27' size-in-bits='64' id='type-id-316'/>
    <!-- boost::iterator_core_access* -->
    <pointer-type-def type-id='type-id-317' size-in-bits='64' id='type-id-318'/>
    <!-- const bool -->
    <qualified-type-def type-id='type-id-11' const='yes' id='type-id-391'/>
    <!-- const mpl_::bool_<true> -->
    <qualified-type-def type-id='type-id-390' const='yes' id='type-id-395'/>
    <!-- const mpl_::bool_<true>* -->
    <pointer-type-def type-id='type-id-395' size-in-bits='64' id='type-id-392'/>
    <!-- boost::detail::addr_impl_ref<boost::filesystem::directory_entry>* -->
    <pointer-type-def type-id='type-id-269' size-in-bits='64' id='type-id-270'/>
    <!-- const boost::detail::addr_impl_ref<boost::filesystem::directory_entry> -->
    <qualified-type-def type-id='type-id-269' const='yes' id='type-id-396'/>
    <!-- const boost::detail::addr_impl_ref<boost::filesystem::directory_entry>* -->
    <pointer-type-def type-id='type-id-396' size-in-bits='64' id='type-id-271'/>
    <!-- boost::detail::addr_impl_ref<boost::filesystem::directory_entry>& -->
    <reference-type-def kind='lvalue' type-id='type-id-269' size-in-bits='64' id='type-id-273'/>
    <!-- const boost::detail::addr_impl_ref<boost::filesystem::directory_entry>& -->
    <reference-type-def kind='lvalue' type-id='type-id-396' size-in-bits='64' id='type-id-272'/>
    <!-- boost::detail::sp_counted_impl_p<boost::filesystem::detail::dir_itr_imp>* -->
    <pointer-type-def type-id='type-id-275' size-in-bits='64' id='type-id-276'/>
    <!-- const boost::detail::sp_counted_impl_p<boost::filesystem::detail::dir_itr_imp> -->
    <qualified-type-def type-id='type-id-275' const='yes' id='type-id-397'/>
    <!-- const boost::detail::sp_counted_impl_p<boost::filesystem::detail::dir_itr_imp>& -->
    <reference-type-def kind='lvalue' type-id='type-id-397' size-in-bits='64' id='type-id-277'/>
    <!-- boost::detail::sp_counted_impl_p<boost::filesystem::detail::dir_itr_imp>& -->
    <reference-type-def kind='lvalue' type-id='type-id-275' size-in-bits='64' id='type-id-278'/>
    <!-- boost::detail::sp_counted_impl_p<boost::filesystem::filesystem_error::m_imp>* -->
    <pointer-type-def type-id='type-id-279' size-in-bits='64' id='type-id-280'/>
    <!-- const boost::detail::sp_counted_impl_p<boost::filesystem::filesystem_error::m_imp> -->
    <qualified-type-def type-id='type-id-279' const='yes' id='type-id-398'/>
    <!-- const boost::detail::sp_counted_impl_p<boost::filesystem::filesystem_error::m_imp>& -->
    <reference-type-def kind='lvalue' type-id='type-id-398' size-in-bits='64' id='type-id-281'/>
    <!-- boost::detail::sp_counted_impl_p<boost::filesystem::filesystem_error::m_imp>& -->
    <reference-type-def kind='lvalue' type-id='type-id-279' size-in-bits='64' id='type-id-282'/>
    <!-- const std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-399' size-in-bits='64' id='type-id-178'/>
    <!-- std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-335' size-in-bits='64' id='type-id-339'/>
    <!-- std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >* -->
    <pointer-type-def type-id='type-id-335' size-in-bits='64' id='type-id-338'/>
    <namespace-decl name='std'>
      <class-decl name='allocator&lt;wchar_t&gt;' visibility='default' is-declaration-only='yes' id='type-id-400'>
        <member-type access='private'>
          <!-- typedef std::size_t std::allocator<wchar_t>::size_type -->
          <typedef-decl name='size_type' type-id='type-id-138' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/allocator.h' line='95' column='1' id='type-id-337'/>
        </member-type>
      </class-decl>
    </namespace-decl>
    <!-- const std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > -->
    <qualified-type-def type-id='type-id-335' const='yes' id='type-id-399'/>
  </abi-instr>
  <abi-instr version='1.0' address-size='64' path='src/third_party/boost-1.56.0/libs/filesystem/src/path.cpp' language='LANG_C_plus_plus'>

    <!-- namespace boost -->
    <namespace-decl name='boost'>
      <!-- namespace boost::filesystem -->
      <namespace-decl name='filesystem'>
        <!-- namespace boost::filesystem::detail -->
        <namespace-decl name='detail'>
          <!-- int boost::filesystem::detail::lex_compare(boost::filesystem::path::iterator, boost::filesystem::path::iterator, boost::filesystem::path::iterator, boost::filesystem::path::iterator) -->
          <function-decl name='lex_compare' mangled-name='_ZN5boost10filesystem6detail11lex_compareENS0_4path8iteratorES3_S3_S3_' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/path.cpp' line='649' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail11lex_compareENS0_4path8iteratorES3_S3_S3_'>
            <!-- parameter of type 'class boost::filesystem::path::iterator' -->
            <parameter type-id='type-id-156' name='first1' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/path.cpp' line='649' column='1'/>
            <!-- parameter of type 'class boost::filesystem::path::iterator' -->
            <parameter type-id='type-id-156' name='last1' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/path.cpp' line='649' column='1'/>
            <!-- parameter of type 'class boost::filesystem::path::iterator' -->
            <parameter type-id='type-id-156' name='first2' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/path.cpp' line='650' column='1'/>
            <!-- parameter of type 'class boost::filesystem::path::iterator' -->
            <parameter type-id='type-id-156' name='last2' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/path.cpp' line='650' column='1'/>
            <!-- int -->
            <return type-id='type-id-5'/>
          </function-decl>
        </namespace-decl>
        <!-- bool boost::filesystem::operator==(const boost::filesystem::path&, const boost::filesystem::path&) -->
        <function-decl name='operator==' mangled-name='_ZN5boost10filesystemeqERKNS0_4pathES3_' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='615' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystemeqERKNS0_4pathES3_'>
          <!-- parameter of type 'const boost::filesystem::path&' -->
          <parameter type-id='type-id-143' name='lhs' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='615' column='1'/>
          <!-- parameter of type 'const boost::filesystem::path&' -->
          <parameter type-id='type-id-143' name='rhs' filepath='src/third_party/boost-1.56.0/boost/filesystem/path.hpp' line='615' column='1'/>
          <!-- bool -->
          <return type-id='type-id-11'/>
        </function-decl>
        <!-- namespace boost::filesystem::path_traits -->
        <namespace-decl name='path_traits'>
          <!-- void boost::filesystem::path_traits::dispatch<std::basic_string<char> >(const std::string&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const boost::filesystem::path_traits::codecvt_type&) -->
          <function-decl name='dispatch&lt;std::basic_string&lt;char&gt; &gt;' mangled-name='_ZN5boost10filesystem11path_traits8dispatchISsEEvRKSsRT_RKSt7codecvtIwc11__mbstate_tE' filepath='src/third_party/boost-1.56.0/boost/filesystem/path_traits.hpp' line='171' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem11path_traits8dispatchISsEEvRKSsRT_RKSt7codecvtIwc11__mbstate_tE'>
            <!-- parameter of type 'const std::string&' -->
            <parameter type-id='type-id-169' name='c' filepath='src/third_party/boost-1.56.0/boost/filesystem/path_traits.hpp' line='171' column='1'/>
            <!-- parameter of type 'std::basic_string<char, std::char_traits<char>, std::allocator<char> >&' -->
            <parameter type-id='type-id-44' name='to' filepath='src/third_party/boost-1.56.0/boost/filesystem/path_traits.hpp' line='171' column='1'/>
            <!-- parameter of type 'const boost::filesystem::path_traits::codecvt_type&' -->
            <parameter type-id='type-id-204' name='cvt' filepath='src/third_party/boost-1.56.0/boost/filesystem/path_traits.hpp' line='171' column='1'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
          <!-- void boost::filesystem::path_traits::convert(const char*, const char*, std::string&, const boost::filesystem::path_traits::codecvt_type&) -->
          <function-decl name='convert' mangled-name='_ZN5boost10filesystem11path_traits7convertEPKcS3_RSsRKSt7codecvtIwc11__mbstate_tE' filepath='src/third_party/boost-1.56.0/boost/filesystem/path_traits.hpp' line='130' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem11path_traits7convertEPKcS3_RSsRKSt7codecvtIwc11__mbstate_tE'>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='type-id-15' name='from' filepath='src/third_party/boost-1.56.0/boost/filesystem/path_traits.hpp' line='130' column='1'/>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='type-id-15' name='from_end' filepath='src/third_party/boost-1.56.0/boost/filesystem/path_traits.hpp' line='130' column='1'/>
            <!-- parameter of type 'std::string&' -->
            <parameter type-id='type-id-203' name='to' filepath='src/third_party/boost-1.56.0/boost/filesystem/path_traits.hpp' line='130' column='1'/>
            <!-- parameter of type 'const boost::filesystem::path_traits::codecvt_type&' -->
            <parameter type-id='type-id-204' filepath='src/third_party/boost-1.56.0/boost/filesystem/path_traits.hpp' line='131' column='1'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </namespace-decl>
      </namespace-decl>
      <!-- namespace boost::detail -->
      <namespace-decl name='detail'>

        <!-- struct boost::detail::addr_impl_ref<const boost::filesystem::path> -->
        <class-decl name='addr_impl_ref&lt;const boost::filesystem::path&gt;' size-in-bits='64' is-struct='yes' visibility='default' filepath='src/third_party/boost-1.56.0/boost/core/addressof.hpp' line='25' column='1' id='type-id-401'>
          <data-member access='public' layout-offset-in-bits='0'>
            <!-- const boost::filesystem::path& boost::detail::addr_impl_ref<const boost::filesystem::path>::v_ -->
            <var-decl name='v_' type-id='type-id-143' visibility='default' filepath='src/third_party/boost-1.56.0/boost/core/addressof.hpp' line='27' column='1'/>
          </data-member>
          <member-function access='public'>
            <!-- void boost::detail::addr_impl_ref<const boost::filesystem::path>::addr_impl_ref(const boost::filesystem::path&) -->
            <function-decl name='addr_impl_ref' mangled-name='_ZN5boost6detail13addr_impl_refIKNS_10filesystem4pathEEC2ERS4_' filepath='src/third_party/boost-1.56.0/boost/core/addressof.hpp' line='29' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::detail::addr_impl_ref<const boost::filesystem::path>*' -->
              <parameter type-id='type-id-402' is-artificial='yes'/>
              <!-- parameter of type 'const boost::filesystem::path&' -->
              <parameter type-id='type-id-143'/>
              <!-- void -->
              <return type-id='type-id-8'/>
            </function-decl>
          </member-function>
          <member-function access='public'>
            <!-- const boost::filesystem::path& boost::detail::addr_impl_ref<const boost::filesystem::path>::operator const boost::filesystem::path &() -->
            <function-decl name='operator const boost::filesystem::path &amp;' mangled-name='_ZNK5boost6detail13addr_impl_refIKNS_10filesystem4pathEEcvRS4_Ev' filepath='src/third_party/boost-1.56.0/boost/core/addressof.hpp' line='30' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'const boost::detail::addr_impl_ref<const boost::filesystem::path>*' -->
              <parameter type-id='type-id-403' is-artificial='yes'/>
              <!-- const boost::filesystem::path& -->
              <return type-id='type-id-143'/>
            </function-decl>
          </member-function>
          <member-function access='private'>
            <!-- boost::detail::addr_impl_ref<const boost::filesystem::path>& boost::detail::addr_impl_ref<const boost::filesystem::path>::operator=(const boost::detail::addr_impl_ref<const boost::filesystem::path>&) -->
            <function-decl name='operator=' mangled-name='_ZN5boost6detail13addr_impl_refIKNS_10filesystem4pathEEaSERKS5_' filepath='src/third_party/boost-1.56.0/boost/core/addressof.hpp' line='33' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- implicit parameter of type 'boost::detail::addr_impl_ref<const boost::filesystem::path>*' -->
              <parameter type-id='type-id-402' is-artificial='yes'/>
              <!-- parameter of type 'const boost::detail::addr_impl_ref<const boost::filesystem::path>&' -->
              <parameter type-id='type-id-404'/>
              <!-- boost::detail::addr_impl_ref<const boost::filesystem::path>& -->
              <return type-id='type-id-405'/>
            </function-decl>
          </member-function>
        </class-decl>
        <!-- struct boost::detail::addressof_impl<const boost::filesystem::path> -->
        <class-decl name='addressof_impl&lt;const boost::filesystem::path&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='src/third_party/boost-1.56.0/boost/core/addressof.hpp' line='36' column='1' id='type-id-406'>
          <member-function access='public' static='yes'>
            <!-- const boost::filesystem::path* boost::detail::addressof_impl<const boost::filesystem::path>::f(long int) -->
            <function-decl name='f' mangled-name='_ZN5boost6detail14addressof_implIKNS_10filesystem4pathEE1fERS4_l' filepath='src/third_party/boost-1.56.0/boost/core/addressof.hpp' line='38' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- parameter of type 'const boost::filesystem::path&' -->
              <parameter type-id='type-id-143'/>
              <!-- parameter of type 'long int' -->
              <parameter type-id='type-id-54'/>
              <!-- const boost::filesystem::path* -->
              <return type-id='type-id-158'/>
            </function-decl>
          </member-function>
          <member-function access='public' static='yes'>
            <!-- const boost::filesystem::path* boost::detail::addressof_impl<const boost::filesystem::path>::f(int) -->
            <function-decl name='f' mangled-name='_ZN5boost6detail14addressof_implIKNS_10filesystem4pathEE1fEPS4_i' filepath='src/third_party/boost-1.56.0/boost/core/addressof.hpp' line='44' column='1' visibility='default' binding='global' size-in-bits='64'>
              <!-- parameter of type 'const boost::filesystem::path*' -->
              <parameter type-id='type-id-158'/>
              <!-- parameter of type 'int' -->
              <parameter type-id='type-id-5'/>
              <!-- const boost::filesystem::path* -->
              <return type-id='type-id-158'/>
            </function-decl>
          </member-function>
        </class-decl>
      </namespace-decl>



      <!-- boost::iterators::enabled<true>::base<bool>::type boost::operator!=<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long, boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>(const boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>&, const boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>&) -->
      <function-decl name='operator!=&lt;boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &amp;, long, boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &amp;, long&gt;' mangled-name='_ZN5boostneINS_10filesystem4path8iteratorEKS2_NS_27bidirectional_traversal_tagERS4_lS3_S4_S5_S6_lEENS_6detail23enable_if_interoperableIT_T4_NS_3mpl6apply2INS7_12always_bool2ES9_SA_E4typeEE4typeERKNS_15iterator_facadeIS9_T0_T1_T2_T3_EERKNSI_ISA_T5_T6_T7_T8_EE' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='833' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boostneINS_10filesystem4path8iteratorEKS2_NS_27bidirectional_traversal_tagERS4_lS3_S4_S5_S6_lEENS_6detail23enable_if_interoperableIT_T4_NS_3mpl6apply2INS7_12always_bool2ES9_SA_E4typeEE4typeERKNS_15iterator_facadeIS9_T0_T1_T2_T3_EERKNSI_ISA_T5_T6_T7_T8_EE'>
        <!-- parameter of type 'const boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>&' -->
        <parameter type-id='type-id-309' name='lhs' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='833' column='1'/>
        <!-- parameter of type 'const boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>&' -->
        <parameter type-id='type-id-309' name='rhs' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='833' column='1'/>
        <!-- typedef boost::iterators::enabled<true>::base<bool>::type -->
        <return type-id='type-id-308'/>
      </function-decl>
      <!-- boost::iterators::enabled<true>::base<bool>::type boost::operator==<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long, boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>(const boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>&, const boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>&) -->
      <function-decl name='operator==&lt;boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &amp;, long, boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &amp;, long&gt;' mangled-name='_ZN5boosteqINS_10filesystem4path8iteratorEKS2_NS_27bidirectional_traversal_tagERS4_lS3_S4_S5_S6_lEENS_6detail23enable_if_interoperableIT_T4_NS_3mpl6apply2INS7_12always_bool2ES9_SA_E4typeEE4typeERKNS_15iterator_facadeIS9_T0_T1_T2_T3_EERKNSI_ISA_T5_T6_T7_T8_EE' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='832' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boosteqINS_10filesystem4path8iteratorEKS2_NS_27bidirectional_traversal_tagERS4_lS3_S4_S5_S6_lEENS_6detail23enable_if_interoperableIT_T4_NS_3mpl6apply2INS7_12always_bool2ES9_SA_E4typeEE4typeERKNS_15iterator_facadeIS9_T0_T1_T2_T3_EERKNSI_ISA_T5_T6_T7_T8_EE'>
        <!-- parameter of type 'const boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>&' -->
        <parameter type-id='type-id-309' name='lhs' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='833' column='1'/>
        <!-- parameter of type 'const boost::iterator_facade<boost::filesystem::path::iterator, const boost::filesystem::path, boost::bidirectional_traversal_tag, const boost::filesystem::path &, long>&' -->
        <parameter type-id='type-id-309' name='rhs' filepath='src/third_party/boost-1.56.0/boost/iterator/iterator_facade.hpp' line='833' column='1'/>
        <!-- typedef boost::iterators::enabled<true>::base<bool>::type -->
        <return type-id='type-id-308'/>
      </function-decl>
    </namespace-decl>
    <!-- namespace std -->
    <namespace-decl name='std'>


      <!-- bool std::operator<<char, std::char_traits<char>, std::allocator<char> >(const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&) -->
      <function-decl name='operator&lt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;' mangled-name='_ZStltIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_ES8_' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='2588' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZStltIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_ES8_'>
        <!-- parameter of type 'const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&' -->
        <parameter type-id='type-id-165' name='__lhs' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='2588' column='1'/>
        <!-- parameter of type 'const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&' -->
        <parameter type-id='type-id-165' name='__rhs' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='2589' column='1'/>
        <!-- bool -->
        <return type-id='type-id-11'/>
      </function-decl>
      <!-- __gnu_cxx::__enable_if<true, bool>::__type std::operator==<char>(const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&) -->
      <function-decl name='operator==&lt;char&gt;' mangled-name='_ZSteqIcEN9__gnu_cxx11__enable_ifIXsr9__is_charIT_EE7__valueEbE6__typeERKSbIS2_St11char_traitsIS2_ESaIS2_EESA_' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='2512' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZSteqIcEN9__gnu_cxx11__enable_ifIXsr9__is_charIT_EE7__valueEbE6__typeERKSbIS2_St11char_traitsIS2_ESaIS2_EESA_'>
        <!-- parameter of type 'const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&' -->
        <parameter type-id='type-id-165' name='__lhs' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='2512' column='1'/>
        <!-- parameter of type 'const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&' -->
        <parameter type-id='type-id-165' name='__rhs' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='2513' column='1'/>
        <!-- typedef __gnu_cxx::__enable_if<true, bool>::__type -->
        <return type-id='type-id-407'/>
      </function-decl>
      <!-- bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const char*) -->
      <function-decl name='operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;' mangled-name='_ZSteqIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_EPKS3_' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='2538' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZSteqIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_EPKS3_'>
        <!-- parameter of type 'const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&' -->
        <parameter type-id='type-id-165' name='__lhs' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='2538' column='1'/>
        <!-- parameter of type 'const char*' -->
        <parameter type-id='type-id-15' name='__rhs' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='2539' column='1'/>
        <!-- bool -->
        <return type-id='type-id-11'/>
      </function-decl>
      <!-- bool std::operator==<char>(const std::allocator<char>&, const std::allocator<char>&) -->
      <function-decl name='operator==&lt;char&gt;' mangled-name='_ZSteqIcEbRKSaIT_ES3_' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/allocator.h' line='133' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZSteqIcEbRKSaIT_ES3_'>
        <!-- parameter of type 'const std::allocator<char>&' -->
        <parameter type-id='type-id-41' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/allocator.h' line='133' column='1'/>
        <!-- parameter of type 'const std::allocator<char>&' -->
        <parameter type-id='type-id-41' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/allocator.h' line='133' column='1'/>
        <!-- bool -->
        <return type-id='type-id-11'/>
      </function-decl>
      <!-- struct std::iterator_traits<const char *> -->
      <class-decl name='iterator_traits&lt;const char *&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator_base_types.h' line='186' column='1' id='type-id-408'>
        <member-type access='public'>
          <!-- typedef const char& std::iterator_traits<const char *>::reference -->
          <typedef-decl name='reference' type-id='type-id-410' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator_base_types.h' line='192' column='1' id='type-id-409'/>
        </member-type>
        <member-type access='public'>
          <!-- typedef const char* std::iterator_traits<const char *>::pointer -->
          <typedef-decl name='pointer' type-id='type-id-15' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator_base_types.h' line='191' column='1' id='type-id-411'/>
        </member-type>
        <member-type access='public'>
          <!-- typedef std::ptrdiff_t std::iterator_traits<const char *>::difference_type -->
          <typedef-decl name='difference_type' type-id='type-id-219' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator_base_types.h' line='190' column='1' id='type-id-412'/>
        </member-type>
        <member-type access='public'>
          <!-- typedef std::random_access_iterator_tag std::iterator_traits<const char *>::iterator_category -->
          <typedef-decl name='iterator_category' type-id='type-id-327' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator_base_types.h' line='188' column='1' id='type-id-413'/>
        </member-type>
      </class-decl>
      <!-- std::iterator_traits<const char *>::difference_type std::distance<const char *>(const char*, const char*) -->
      <function-decl name='distance&lt;const char *&gt;' mangled-name='_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator_base_funcs.h' line='114' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_'>
        <!-- parameter of type 'const char*' -->
        <parameter type-id='type-id-15' name='__first' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator_base_funcs.h' line='114' column='1'/>
        <!-- parameter of type 'const char*' -->
        <parameter type-id='type-id-15' name='__last' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator_base_funcs.h' line='114' column='1'/>
        <!-- typedef std::iterator_traits<const char *>::difference_type -->
        <return type-id='type-id-412'/>
      </function-decl>
      <!-- std::iterator_traits<const char *>::difference_type std::__distance<const char *>(const char*, const char*, std::random_access_iterator_tag) -->
      <function-decl name='__distance&lt;const char *&gt;' mangled-name='_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator_base_funcs.h' line='90' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag'>
        <!-- parameter of type 'const char*' -->
        <parameter type-id='type-id-15' name='__first' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator_base_funcs.h' line='90' column='1'/>
        <!-- parameter of type 'const char*' -->
        <parameter type-id='type-id-15' name='__last' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator_base_funcs.h' line='90' column='1'/>
        <!-- parameter of type 'struct std::random_access_iterator_tag' -->
        <parameter type-id='type-id-327' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator_base_funcs.h' line='91' column='1'/>
        <!-- typedef std::iterator_traits<const char *>::difference_type -->
        <return type-id='type-id-412'/>
      </function-decl>
      <!-- std::iterator_traits<const char *>::iterator_category std::__iterator_category<const char *>(const char* const&) -->
      <function-decl name='__iterator_category&lt;const char *&gt;' mangled-name='_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator_base_types.h' line='201' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_'>
        <!-- parameter of type 'const char* const&' -->
        <parameter type-id='type-id-414' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator_base_types.h' line='201' column='1'/>
        <!-- typedef std::iterator_traits<const char *>::iterator_category -->
        <return type-id='type-id-413'/>
      </function-decl>
      <!-- struct std::char_traits<char> -->
      <class-decl name='char_traits&lt;char&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/char_traits.h' line='233' column='1' id='type-id-415'>
        <member-type access='public'>
          <!-- typedef char std::char_traits<char>::char_type -->
          <typedef-decl name='char_type' type-id='type-id-27' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/char_traits.h' line='235' column='1' id='type-id-416'/>
        </member-type>
        <member-type access='public'>
          <!-- typedef int std::char_traits<char>::int_type -->
          <typedef-decl name='int_type' type-id='type-id-5' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/char_traits.h' line='236' column='1' id='type-id-417'/>
        </member-type>
        <member-function access='public' static='yes'>
          <!-- void std::char_traits<char>::assign(const std::char_traits<char>::char_type&) -->
          <function-decl name='assign' mangled-name='_ZNSt11char_traitsIcE6assignERcRKc' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/char_traits.h' line='242' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- parameter of type 'std::char_traits<char>::char_type&' -->
            <parameter type-id='type-id-418'/>
            <!-- parameter of type 'const std::char_traits<char>::char_type&' -->
            <parameter type-id='type-id-419'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- bool std::char_traits<char>::eq(const std::char_traits<char>::char_type&) -->
          <function-decl name='eq' mangled-name='_ZNSt11char_traitsIcE2eqERKcS2_' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/char_traits.h' line='246' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- parameter of type 'const std::char_traits<char>::char_type&' -->
            <parameter type-id='type-id-419'/>
            <!-- parameter of type 'const std::char_traits<char>::char_type&' -->
            <parameter type-id='type-id-419'/>
            <!-- bool -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- bool std::char_traits<char>::lt(const std::char_traits<char>::char_type&) -->
          <function-decl name='lt' mangled-name='_ZNSt11char_traitsIcE2ltERKcS2_' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/char_traits.h' line='250' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- parameter of type 'const std::char_traits<char>::char_type&' -->
            <parameter type-id='type-id-419'/>
            <!-- parameter of type 'const std::char_traits<char>::char_type&' -->
            <parameter type-id='type-id-419'/>
            <!-- bool -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- int std::char_traits<char>::compare(const std::char_traits<char>::char_type*, std::size_t) -->
          <function-decl name='compare' mangled-name='_ZNSt11char_traitsIcE7compareEPKcS2_m' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/char_traits.h' line='258' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNSt11char_traitsIcE7compareEPKcS2_m'>
            <!-- parameter of type 'const std::char_traits<char>::char_type*' -->
            <parameter type-id='type-id-420'/>
            <!-- parameter of type 'const std::char_traits<char>::char_type*' -->
            <parameter type-id='type-id-420'/>
            <!-- parameter of type 'typedef std::size_t' -->
            <parameter type-id='type-id-138'/>
            <!-- int -->
            <return type-id='type-id-5'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- std::size_t std::char_traits<char>::length() -->
          <function-decl name='length' mangled-name='_ZNSt11char_traitsIcE6lengthEPKc' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/char_traits.h' line='262' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- parameter of type 'const std::char_traits<char>::char_type*' -->
            <parameter type-id='type-id-420'/>
            <!-- typedef std::size_t -->
            <return type-id='type-id-138'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- const std::char_traits<char>::char_type* std::char_traits<char>::find(std::size_t, const std::char_traits<char>::char_type&) -->
          <function-decl name='find' mangled-name='_ZNSt11char_traitsIcE4findEPKcmRS1_' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/char_traits.h' line='266' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- parameter of type 'const std::char_traits<char>::char_type*' -->
            <parameter type-id='type-id-420'/>
            <!-- parameter of type 'typedef std::size_t' -->
            <parameter type-id='type-id-138'/>
            <!-- parameter of type 'const std::char_traits<char>::char_type&' -->
            <parameter type-id='type-id-419'/>
            <!-- const std::char_traits<char>::char_type* -->
            <return type-id='type-id-420'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- std::char_traits<char>::char_type* std::char_traits<char>::move(const std::char_traits<char>::char_type*, std::size_t) -->
          <function-decl name='move' mangled-name='_ZNSt11char_traitsIcE4moveEPcPKcm' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/char_traits.h' line='270' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- parameter of type 'std::char_traits<char>::char_type*' -->
            <parameter type-id='type-id-421'/>
            <!-- parameter of type 'const std::char_traits<char>::char_type*' -->
            <parameter type-id='type-id-420'/>
            <!-- parameter of type 'typedef std::size_t' -->
            <parameter type-id='type-id-138'/>
            <!-- std::char_traits<char>::char_type* -->
            <return type-id='type-id-421'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- std::char_traits<char>::char_type* std::char_traits<char>::copy(const std::char_traits<char>::char_type*, std::size_t) -->
          <function-decl name='copy' mangled-name='_ZNSt11char_traitsIcE4copyEPcPKcm' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/char_traits.h' line='274' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- parameter of type 'std::char_traits<char>::char_type*' -->
            <parameter type-id='type-id-421'/>
            <!-- parameter of type 'const std::char_traits<char>::char_type*' -->
            <parameter type-id='type-id-420'/>
            <!-- parameter of type 'typedef std::size_t' -->
            <parameter type-id='type-id-138'/>
            <!-- std::char_traits<char>::char_type* -->
            <return type-id='type-id-421'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- std::char_traits<char>::char_type* std::char_traits<char>::assign(std::size_t, std::char_traits<char>::char_type) -->
          <function-decl name='assign' mangled-name='_ZNSt11char_traitsIcE6assignEPcmc' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/char_traits.h' line='278' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- parameter of type 'std::char_traits<char>::char_type*' -->
            <parameter type-id='type-id-421'/>
            <!-- parameter of type 'typedef std::size_t' -->
            <parameter type-id='type-id-138'/>
            <!-- parameter of type 'typedef std::char_traits<char>::char_type' -->
            <parameter type-id='type-id-416'/>
            <!-- std::char_traits<char>::char_type* -->
            <return type-id='type-id-421'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- std::char_traits<char>::char_type std::char_traits<char>::to_char_type() -->
          <function-decl name='to_char_type' mangled-name='_ZNSt11char_traitsIcE12to_char_typeERKi' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/char_traits.h' line='282' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- parameter of type 'const std::char_traits<char>::int_type&' -->
            <parameter type-id='type-id-422'/>
            <!-- typedef std::char_traits<char>::char_type -->
            <return type-id='type-id-416'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- std::char_traits<char>::int_type std::char_traits<char>::to_int_type() -->
          <function-decl name='to_int_type' mangled-name='_ZNSt11char_traitsIcE11to_int_typeERKc' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/char_traits.h' line='288' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- parameter of type 'const std::char_traits<char>::char_type&' -->
            <parameter type-id='type-id-419'/>
            <!-- typedef std::char_traits<char>::int_type -->
            <return type-id='type-id-417'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- bool std::char_traits<char>::eq_int_type(const std::char_traits<char>::int_type&) -->
          <function-decl name='eq_int_type' mangled-name='_ZNSt11char_traitsIcE11eq_int_typeERKiS2_' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/char_traits.h' line='292' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- parameter of type 'const std::char_traits<char>::int_type&' -->
            <parameter type-id='type-id-422'/>
            <!-- parameter of type 'const std::char_traits<char>::int_type&' -->
            <parameter type-id='type-id-422'/>
            <!-- bool -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- std::char_traits<char>::int_type std::char_traits<char>::eof() -->
          <function-decl name='eof' mangled-name='_ZNSt11char_traitsIcE3eofEv' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/char_traits.h' line='296' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- typedef std::char_traits<char>::int_type -->
            <return type-id='type-id-417'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- std::char_traits<char>::int_type std::char_traits<char>::not_eof() -->
          <function-decl name='not_eof' mangled-name='_ZNSt11char_traitsIcE7not_eofERKi' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/char_traits.h' line='300' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- parameter of type 'const std::char_traits<char>::int_type&' -->
            <parameter type-id='type-id-422'/>
            <!-- typedef std::char_traits<char>::int_type -->
            <return type-id='type-id-417'/>
          </function-decl>
        </member-function>
      </class-decl>
    </namespace-decl>
    <!-- namespace __gnu_cxx -->
    <namespace-decl name='__gnu_cxx'>
      <!-- lldiv_t __gnu_cxx::div(long long int, long long int) -->
      <function-decl name='div' mangled-name='_ZN9__gnu_cxx3divExx' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/cstdlib' line='214' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'long long int' -->
        <parameter type-id='type-id-76'/>
        <!-- parameter of type 'long long int' -->
        <parameter type-id='type-id-76'/>
        <!-- typedef lldiv_t -->
        <return type-id='type-id-77'/>
      </function-decl>
      <!-- bool __gnu_cxx::__is_null_pointer<const char>(const char*) -->
      <function-decl name='__is_null_pointer&lt;const char&gt;' mangled-name='_ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/ext/type_traits.h' line='150' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_'>
        <!-- parameter of type 'const char*' -->
        <parameter type-id='type-id-15' name='__ptr' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/ext/type_traits.h' line='150' column='1'/>
        <!-- bool -->
        <return type-id='type-id-11'/>
      </function-decl>
      <!-- struct __gnu_cxx::__enable_if<true, bool> -->
      <class-decl name='__enable_if&lt;true, bool&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/ext/type_traits.h' line='47' column='1' id='type-id-423'>
        <member-type access='public'>
          <!-- typedef bool __gnu_cxx::__enable_if<true, bool>::__type -->
          <typedef-decl name='__type' type-id='type-id-11' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/ext/type_traits.h' line='48' column='1' id='type-id-407'/>
        </member-type>
      </class-decl>
      <!-- class __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > -->
      <class-decl name='__normal_iterator&lt;const char *, std::basic_string&lt;char&gt; &gt;' size-in-bits='64' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='709' column='1' id='type-id-424'>
        <member-type access='private'>
          <!-- typedef std::iterator_traits<const char *>::reference __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >::reference -->
          <typedef-decl name='reference' type-id='type-id-409' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='721' column='1' id='type-id-425'/>
        </member-type>
        <member-type access='private'>
          <!-- typedef std::iterator_traits<const char *>::pointer __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >::pointer -->
          <typedef-decl name='pointer' type-id='type-id-411' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='722' column='1' id='type-id-426'/>
        </member-type>
        <member-type access='private'>
          <!-- typedef std::iterator_traits<const char *>::difference_type __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >::difference_type -->
          <typedef-decl name='difference_type' type-id='type-id-412' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='720' column='1' id='type-id-427'/>
        </member-type>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- const char* __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >::_M_current -->
          <var-decl name='_M_current' type-id='type-id-15' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='712' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >::__normal_iterator() -->
          <function-decl name='__normal_iterator' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='724' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >*' -->
            <parameter type-id='type-id-428' is-artificial='yes'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >::__normal_iterator(const char* const&) -->
          <function-decl name='__normal_iterator' mangled-name='_ZN9__gnu_cxx17__normal_iteratorIPKcSsEC2ERKS2_' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='728' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN9__gnu_cxx17__normal_iteratorIPKcSsEC2ERKS2_'>
            <!-- implicit parameter of type '__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >*' -->
            <parameter type-id='type-id-428' is-artificial='yes'/>
            <!-- parameter of type 'const char* const&' -->
            <parameter type-id='type-id-414'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >::reference __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >::operator*() -->
          <function-decl name='operator*' mangled-name='_ZNK9__gnu_cxx17__normal_iteratorIPKcSsEdeEv' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='741' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK9__gnu_cxx17__normal_iteratorIPKcSsEdeEv'>
            <!-- implicit parameter of type 'const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >*' -->
            <parameter type-id='type-id-429' is-artificial='yes'/>
            <!-- typedef __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >::reference -->
            <return type-id='type-id-425'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >::pointer __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >::operator&#45;>() -->
          <function-decl name='operator-&gt;' mangled-name='_ZNK9__gnu_cxx17__normal_iteratorIPKcSsEptEv' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='745' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >*' -->
            <parameter type-id='type-id-429' is-artificial='yes'/>
            <!-- typedef __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >::pointer -->
            <return type-id='type-id-426'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >& __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >::operator++() -->
          <function-decl name='operator++' mangled-name='_ZN9__gnu_cxx17__normal_iteratorIPKcSsEppEv' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='749' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >*' -->
            <parameter type-id='type-id-428' is-artificial='yes'/>
            <!-- __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >& -->
            <return type-id='type-id-430'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >::operator++(int) -->
          <function-decl name='operator++' mangled-name='_ZN9__gnu_cxx17__normal_iteratorIPKcSsEppEi' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='756' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >*' -->
            <parameter type-id='type-id-428' is-artificial='yes'/>
            <!-- parameter of type 'int' -->
            <parameter type-id='type-id-5'/>
            <!-- class __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > -->
            <return type-id='type-id-424'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >& __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >::operator&#45;&#45;() -->
          <function-decl name='operator--' mangled-name='_ZN9__gnu_cxx17__normal_iteratorIPKcSsEmmEv' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='761' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >*' -->
            <parameter type-id='type-id-428' is-artificial='yes'/>
            <!-- __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >& -->
            <return type-id='type-id-430'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >::operator&#45;&#45;(int) -->
          <function-decl name='operator--' mangled-name='_ZN9__gnu_cxx17__normal_iteratorIPKcSsEmmEi' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='768' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >*' -->
            <parameter type-id='type-id-428' is-artificial='yes'/>
            <!-- parameter of type 'int' -->
            <parameter type-id='type-id-5'/>
            <!-- class __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > -->
            <return type-id='type-id-424'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >::reference __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >::operator[](__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >::difference_type) -->
          <function-decl name='operator[]' mangled-name='_ZNK9__gnu_cxx17__normal_iteratorIPKcSsEixEl' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='773' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >*' -->
            <parameter type-id='type-id-429' is-artificial='yes'/>
            <!-- parameter of type 'typedef __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >::difference_type' -->
            <parameter type-id='type-id-427'/>
            <!-- typedef __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >::reference -->
            <return type-id='type-id-425'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >& __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >::operator+=(__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >::difference_type) -->
          <function-decl name='operator+=' mangled-name='_ZN9__gnu_cxx17__normal_iteratorIPKcSsEpLEl' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='777' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >*' -->
            <parameter type-id='type-id-428' is-artificial='yes'/>
            <!-- parameter of type 'typedef __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >::difference_type' -->
            <parameter type-id='type-id-427'/>
            <!-- __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >& -->
            <return type-id='type-id-430'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >::operator+(__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >::difference_type) -->
          <function-decl name='operator+' mangled-name='_ZNK9__gnu_cxx17__normal_iteratorIPKcSsEplEl' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='781' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >*' -->
            <parameter type-id='type-id-429' is-artificial='yes'/>
            <!-- parameter of type 'typedef __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >::difference_type' -->
            <parameter type-id='type-id-427'/>
            <!-- class __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > -->
            <return type-id='type-id-424'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >& __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >::operator&#45;=(__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >::difference_type) -->
          <function-decl name='operator-=' mangled-name='_ZN9__gnu_cxx17__normal_iteratorIPKcSsEmIEl' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='785' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >*' -->
            <parameter type-id='type-id-428' is-artificial='yes'/>
            <!-- parameter of type 'typedef __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >::difference_type' -->
            <parameter type-id='type-id-427'/>
            <!-- __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >& -->
            <return type-id='type-id-430'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >::operator&#45;(__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >::difference_type) -->
          <function-decl name='operator-' mangled-name='_ZNK9__gnu_cxx17__normal_iteratorIPKcSsEmiEl' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='789' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK9__gnu_cxx17__normal_iteratorIPKcSsEmiEl'>
            <!-- implicit parameter of type 'const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >*' -->
            <parameter type-id='type-id-429' is-artificial='yes'/>
            <!-- parameter of type 'typedef __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >::difference_type' -->
            <parameter type-id='type-id-427'/>
            <!-- class __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > -->
            <return type-id='type-id-424'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- const char* const& __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >::base() -->
          <function-decl name='base' mangled-name='_ZNK9__gnu_cxx17__normal_iteratorIPKcSsE4baseEv' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='793' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >*' -->
            <parameter type-id='type-id-429' is-artificial='yes'/>
            <!-- const char* const& -->
            <return type-id='type-id-414'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __gnu_cxx::__normal_iterator<char *, std::basic_string<char> > -->
      <class-decl name='__normal_iterator&lt;char *, std::basic_string&lt;char&gt; &gt;' size-in-bits='64' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='709' column='1' id='type-id-431'>
        <member-type access='private'>
          <!-- typedef std::iterator_traits<char *>::reference __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >::reference -->
          <typedef-decl name='reference' type-id='type-id-328' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='721' column='1' id='type-id-432'/>
        </member-type>
        <member-type access='private'>
          <!-- typedef std::iterator_traits<char *>::pointer __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >::pointer -->
          <typedef-decl name='pointer' type-id='type-id-329' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='722' column='1' id='type-id-433'/>
        </member-type>
        <member-type access='private'>
          <!-- typedef std::iterator_traits<char *>::difference_type __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >::difference_type -->
          <typedef-decl name='difference_type' type-id='type-id-325' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='720' column='1' id='type-id-434'/>
        </member-type>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- char* __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >::_M_current -->
          <var-decl name='_M_current' type-id='type-id-40' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='712' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >::__normal_iterator() -->
          <function-decl name='__normal_iterator' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='724' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >*' -->
            <parameter type-id='type-id-435' is-artificial='yes'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >::__normal_iterator(char* const&) -->
          <function-decl name='__normal_iterator' mangled-name='_ZN9__gnu_cxx17__normal_iteratorIPcSsEC2ERKS1_' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='728' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN9__gnu_cxx17__normal_iteratorIPcSsEC2ERKS1_'>
            <!-- implicit parameter of type '__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >*' -->
            <parameter type-id='type-id-435' is-artificial='yes'/>
            <!-- parameter of type 'char* const&' -->
            <parameter type-id='type-id-176'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >::reference __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >::operator*() -->
          <function-decl name='operator*' mangled-name='_ZNK9__gnu_cxx17__normal_iteratorIPcSsEdeEv' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='741' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK9__gnu_cxx17__normal_iteratorIPcSsEdeEv'>
            <!-- implicit parameter of type 'const __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >*' -->
            <parameter type-id='type-id-436' is-artificial='yes'/>
            <!-- typedef __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >::reference -->
            <return type-id='type-id-432'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >::pointer __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >::operator&#45;>() -->
          <function-decl name='operator-&gt;' mangled-name='_ZNK9__gnu_cxx17__normal_iteratorIPcSsEptEv' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='745' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >*' -->
            <parameter type-id='type-id-436' is-artificial='yes'/>
            <!-- typedef __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >::pointer -->
            <return type-id='type-id-433'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >& __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >::operator++() -->
          <function-decl name='operator++' mangled-name='_ZN9__gnu_cxx17__normal_iteratorIPcSsEppEv' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='749' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >*' -->
            <parameter type-id='type-id-435' is-artificial='yes'/>
            <!-- __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >& -->
            <return type-id='type-id-437'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __gnu_cxx::__normal_iterator<char *, std::basic_string<char> > __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >::operator++(int) -->
          <function-decl name='operator++' mangled-name='_ZN9__gnu_cxx17__normal_iteratorIPcSsEppEi' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='756' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >*' -->
            <parameter type-id='type-id-435' is-artificial='yes'/>
            <!-- parameter of type 'int' -->
            <parameter type-id='type-id-5'/>
            <!-- class __gnu_cxx::__normal_iterator<char *, std::basic_string<char> > -->
            <return type-id='type-id-431'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >& __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >::operator&#45;&#45;() -->
          <function-decl name='operator--' mangled-name='_ZN9__gnu_cxx17__normal_iteratorIPcSsEmmEv' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='761' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >*' -->
            <parameter type-id='type-id-435' is-artificial='yes'/>
            <!-- __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >& -->
            <return type-id='type-id-437'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __gnu_cxx::__normal_iterator<char *, std::basic_string<char> > __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >::operator&#45;&#45;(int) -->
          <function-decl name='operator--' mangled-name='_ZN9__gnu_cxx17__normal_iteratorIPcSsEmmEi' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='768' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >*' -->
            <parameter type-id='type-id-435' is-artificial='yes'/>
            <!-- parameter of type 'int' -->
            <parameter type-id='type-id-5'/>
            <!-- class __gnu_cxx::__normal_iterator<char *, std::basic_string<char> > -->
            <return type-id='type-id-431'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >::reference __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >::operator[](__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >::difference_type) -->
          <function-decl name='operator[]' mangled-name='_ZNK9__gnu_cxx17__normal_iteratorIPcSsEixEl' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='773' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >*' -->
            <parameter type-id='type-id-436' is-artificial='yes'/>
            <!-- parameter of type 'typedef __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >::difference_type' -->
            <parameter type-id='type-id-434'/>
            <!-- typedef __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >::reference -->
            <return type-id='type-id-432'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >& __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >::operator+=(__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >::difference_type) -->
          <function-decl name='operator+=' mangled-name='_ZN9__gnu_cxx17__normal_iteratorIPcSsEpLEl' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='777' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >*' -->
            <parameter type-id='type-id-435' is-artificial='yes'/>
            <!-- parameter of type 'typedef __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >::difference_type' -->
            <parameter type-id='type-id-434'/>
            <!-- __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >& -->
            <return type-id='type-id-437'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __gnu_cxx::__normal_iterator<char *, std::basic_string<char> > __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >::operator+(__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >::difference_type) -->
          <function-decl name='operator+' mangled-name='_ZNK9__gnu_cxx17__normal_iteratorIPcSsEplEl' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='781' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >*' -->
            <parameter type-id='type-id-436' is-artificial='yes'/>
            <!-- parameter of type 'typedef __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >::difference_type' -->
            <parameter type-id='type-id-434'/>
            <!-- class __gnu_cxx::__normal_iterator<char *, std::basic_string<char> > -->
            <return type-id='type-id-431'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >& __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >::operator&#45;=(__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >::difference_type) -->
          <function-decl name='operator-=' mangled-name='_ZN9__gnu_cxx17__normal_iteratorIPcSsEmIEl' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='785' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >*' -->
            <parameter type-id='type-id-435' is-artificial='yes'/>
            <!-- parameter of type 'typedef __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >::difference_type' -->
            <parameter type-id='type-id-434'/>
            <!-- __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >& -->
            <return type-id='type-id-437'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __gnu_cxx::__normal_iterator<char *, std::basic_string<char> > __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >::operator&#45;(__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >::difference_type) -->
          <function-decl name='operator-' mangled-name='_ZNK9__gnu_cxx17__normal_iteratorIPcSsEmiEl' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='789' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK9__gnu_cxx17__normal_iteratorIPcSsEmiEl'>
            <!-- implicit parameter of type 'const __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >*' -->
            <parameter type-id='type-id-436' is-artificial='yes'/>
            <!-- parameter of type 'typedef __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >::difference_type' -->
            <parameter type-id='type-id-434'/>
            <!-- class __gnu_cxx::__normal_iterator<char *, std::basic_string<char> > -->
            <return type-id='type-id-431'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- char* const& __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >::base() -->
          <function-decl name='base' mangled-name='_ZNK9__gnu_cxx17__normal_iteratorIPcSsE4baseEv' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='793' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >*' -->
            <parameter type-id='type-id-436' is-artificial='yes'/>
            <!-- char* const& -->
            <return type-id='type-id-176'/>
          </function-decl>
        </member-function>
      </class-decl>
    </namespace-decl>
    <!-- const char& -->
    <reference-type-def kind='lvalue' type-id='type-id-28' size-in-bits='64' id='type-id-410'/>
    <!-- const char* const& -->
    <reference-type-def kind='lvalue' type-id='type-id-382' size-in-bits='64' id='type-id-414'/>

    <!-- void abort() -->
    <function-decl name='abort' filepath='/usr/include/stdlib.h' line='515' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int abs(int) -->
    <function-decl name='abs' filepath='/usr/include/stdlib.h' line='774' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int atexit(void ()*) -->
    <function-decl name='atexit' filepath='/usr/include/stdlib.h' line='519' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void ()*' -->
      <parameter type-id='type-id-4'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int at_quick_exit(void ()*) -->
    <function-decl name='at_quick_exit' filepath='/usr/include/stdlib.h' line='524' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void ()*' -->
      <parameter type-id='type-id-4'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- double atof(const char*) -->
    <function-decl name='atof' filepath='/usr/include/stdlib.h' line='144' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- int atoi(const char*) -->
    <function-decl name='atoi' filepath='/usr/include/stdlib.h' line='147' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- long int atol(const char*) -->
    <function-decl name='atol' filepath='/usr/include/stdlib.h' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- void* bsearch(void*, void*, size_t, size_t, __compar_fn_t) -->
    <function-decl name='bsearch' filepath='/usr/include/stdlib.h' line='754' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef __compar_fn_t' -->
      <parameter type-id='type-id-60'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- void* calloc(size_t, size_t) -->
    <function-decl name='calloc' filepath='/usr/include/stdlib.h' line='468' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- div_t div(int, int) -->
    <function-decl name='div' filepath='/usr/include/stdlib.h' line='788' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- typedef div_t -->
      <return type-id='type-id-61'/>
    </function-decl>
    <!-- void exit(int) -->
    <function-decl name='exit' filepath='/usr/include/stdlib.h' line='543' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- void free(void*) -->
    <function-decl name='free' filepath='/usr/include/stdlib.h' line='483' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- char* getenv(const char*) -->
    <function-decl name='getenv' filepath='/usr/include/stdlib.h' line='564' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- long int labs(long int) -->
    <function-decl name='labs' filepath='/usr/include/stdlib.h' line='775' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- ldiv_t ldiv(long int, long int) -->
    <function-decl name='ldiv' filepath='/usr/include/stdlib.h' line='790' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- typedef ldiv_t -->
      <return type-id='type-id-63'/>
    </function-decl>
    <!-- void* malloc(size_t) -->
    <function-decl name='malloc' filepath='/usr/include/stdlib.h' line='466' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- int mblen(const char*, size_t) -->
    <function-decl name='mblen' filepath='/usr/include/stdlib.h' line='862' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- size_t mbstowcs(wchar_t* restrict, const char* restrict, size_t) -->
    <function-decl name='mbstowcs' filepath='/usr/include/stdlib.h' line='873' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- int mbtowc(wchar_t* restrict, const char* restrict, size_t) -->
    <function-decl name='mbtowc' filepath='/usr/include/stdlib.h' line='865' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void qsort(void*, size_t, size_t, __compar_fn_t) -->
    <function-decl name='qsort' filepath='/usr/include/stdlib.h' line='764' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef __compar_fn_t' -->
      <parameter type-id='type-id-60'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- void quick_exit(int) -->
    <function-decl name='quick_exit' filepath='/usr/include/stdlib.h' line='549' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int rand() -->
    <function-decl name='rand' filepath='/usr/include/stdlib.h' line='374' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void* realloc(void*, size_t) -->
    <function-decl name='realloc' filepath='/usr/include/stdlib.h' line='480' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- void srand(unsigned int) -->
    <function-decl name='srand' filepath='/usr/include/stdlib.h' line='376' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-69'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- double strtod(const char* restrict, char** restrict) -->
    <function-decl name='strtod' filepath='/usr/include/stdlib.h' line='164' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- long int strtol(const char* restrict, char** restrict, int) -->
    <function-decl name='strtol' filepath='/usr/include/stdlib.h' line='183' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- unsigned long int strtoul(const char* restrict, char** restrict, int) -->
    <function-decl name='strtoul' filepath='/usr/include/stdlib.h' line='187' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- unsigned long int -->
      <return type-id='type-id-56'/>
    </function-decl>
    <!-- int system(const char*) -->
    <function-decl name='system' filepath='/usr/include/stdlib.h' line='716' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- size_t wcstombs(char* restrict, const wchar_t* restrict, size_t) -->
    <function-decl name='wcstombs' filepath='/usr/include/stdlib.h' line='876' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- int wctomb(char*, wchar_t) -->
    <function-decl name='wctomb' filepath='/usr/include/stdlib.h' line='869' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-40'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void _Exit(int) -->
    <function-decl name='_Exit' filepath='/usr/include/stdlib.h' line='557' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- long long int llabs(long long int) -->
    <function-decl name='llabs' filepath='/usr/include/stdlib.h' line='779' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long long int' -->
      <parameter type-id='type-id-76'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- lldiv_t lldiv(long long int, long long int) -->
    <function-decl name='lldiv' filepath='/usr/include/stdlib.h' line='796' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long long int' -->
      <parameter type-id='type-id-76'/>
      <!-- parameter of type 'long long int' -->
      <parameter type-id='type-id-76'/>
      <!-- typedef lldiv_t -->
      <return type-id='type-id-77'/>
    </function-decl>
    <!-- long long int atoll(const char*) -->
    <function-decl name='atoll' filepath='/usr/include/stdlib.h' line='157' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long int strtoll(const char* restrict, char** restrict, int) -->
    <function-decl name='strtoll' filepath='/usr/include/stdlib.h' line='209' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long unsigned int strtoull(const char* restrict, char** restrict, int) -->
    <function-decl name='strtoull' filepath='/usr/include/stdlib.h' line='214' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long long unsigned int -->
      <return type-id='type-id-79'/>
    </function-decl>
    <!-- float strtof(const char* restrict, char** restrict) -->
    <function-decl name='strtof' filepath='/usr/include/stdlib.h' line='172' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double strtold(const char* restrict, char** restrict) -->
    <function-decl name='strtold' filepath='/usr/include/stdlib.h' line='175' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- wint_t btowc(int) -->
    <function-decl name='btowc' filepath='/usr/include/wchar.h' line='353' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wint_t fgetwc(__FILE*) -->
    <function-decl name='fgetwc' filepath='/usr/include/wchar.h' line='745' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wchar_t* fgetws(wchar_t* restrict, int, __FILE* restrict) -->
    <function-decl name='fgetws' filepath='/usr/include/wchar.h' line='774' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wint_t fputwc(wchar_t, __FILE*) -->
    <function-decl name='fputwc' filepath='/usr/include/wchar.h' line='759' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- int fputws(const wchar_t* restrict, __FILE* restrict) -->
    <function-decl name='fputws' filepath='/usr/include/wchar.h' line='781' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fwide(__FILE*, int) -->
    <function-decl name='fwide' filepath='/usr/include/wchar.h' line='587' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fwprintf(__FILE* restrict, const wchar_t* restrict, ...) -->
    <function-decl name='fwprintf' filepath='/usr/include/wchar.h' line='594' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fwscanf(__FILE* restrict, const wchar_t* restrict, ...) -->
    <function-decl name='fwscanf' filepath='/usr/include/wchar.h' line='635' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wint_t getwc(__FILE*) -->
    <function-decl name='getwc' filepath='/usr/include/wchar.h' line='746' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wint_t getwchar() -->
    <function-decl name='getwchar' filepath='/usr/include/wchar.h' line='752' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- size_t mbrlen(const char* restrict, size_t, mbstate_t* restrict) -->
    <function-decl name='mbrlen' filepath='/usr/include/wchar.h' line='376' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'mbstate_t* restrict' -->
      <parameter type-id='type-id-92'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- size_t mbrtowc(wchar_t* restrict, const char* restrict, size_t, mbstate_t* restrict) -->
    <function-decl name='mbrtowc' filepath='/usr/include/wchar.h' line='365' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'mbstate_t* restrict' -->
      <parameter type-id='type-id-92'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- int mbsinit(const mbstate_t*) -->
    <function-decl name='mbsinit' filepath='/usr/include/wchar.h' line='361' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const mbstate_t*' -->
      <parameter type-id='type-id-94'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- size_t mbsrtowcs(wchar_t* restrict, const char** restrict, size_t, mbstate_t* restrict) -->
    <function-decl name='mbsrtowcs' filepath='/usr/include/wchar.h' line='408' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const char** restrict' -->
      <parameter type-id='type-id-96'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'mbstate_t* restrict' -->
      <parameter type-id='type-id-92'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- wint_t putwc(wchar_t, __FILE*) -->
    <function-decl name='putwc' filepath='/usr/include/wchar.h' line='760' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wint_t putwchar(wchar_t) -->
    <function-decl name='putwchar' filepath='/usr/include/wchar.h' line='766' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- int swprintf(wchar_t* restrict, size_t, const wchar_t* restrict, ...) -->
    <function-decl name='swprintf' filepath='/usr/include/wchar.h' line='604' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int swscanf(const wchar_t* restrict, const wchar_t* restrict, ...) -->
    <function-decl name='swscanf' filepath='/usr/include/wchar.h' line='645' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wint_t ungetwc(wint_t, __FILE*) -->
    <function-decl name='ungetwc' filepath='/usr/include/wchar.h' line='789' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- int vfwprintf(__FILE* restrict, const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vfwprintf' filepath='/usr/include/wchar.h' line='612' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vfwscanf(__FILE* restrict, const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vfwscanf' filepath='/usr/include/wchar.h' line='689' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vswprintf(wchar_t* restrict, size_t, const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vswprintf' filepath='/usr/include/wchar.h' line='625' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vswscanf(const wchar_t* restrict, const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vswscanf' filepath='/usr/include/wchar.h' line='701' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vwprintf(const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vwprintf' filepath='/usr/include/wchar.h' line='620' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vwscanf(const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vwscanf' filepath='/usr/include/wchar.h' line='697' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- size_t wcrtomb(char* restrict, wchar_t, mbstate_t* restrict) -->
    <function-decl name='wcrtomb' filepath='/usr/include/wchar.h' line='370' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- parameter of type 'mbstate_t* restrict' -->
      <parameter type-id='type-id-92'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- wchar_t* wcscat(wchar_t* restrict, const wchar_t* restrict) -->
    <function-decl name='wcscat' filepath='/usr/include/wchar.h' line='155' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- int wcscmp(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcscmp' filepath='/usr/include/wchar.h' line='163' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int wcscoll(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcscoll' filepath='/usr/include/wchar.h' line='192' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wchar_t* wcscpy(wchar_t* restrict, const wchar_t* restrict) -->
    <function-decl name='wcscpy' filepath='/usr/include/wchar.h' line='147' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- size_t wcscspn(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcscspn' filepath='/usr/include/wchar.h' line='252' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- size_t wcsftime(wchar_t* restrict, size_t, const wchar_t* restrict, const tm* restrict) -->
    <function-decl name='wcsftime' filepath='/usr/include/wchar.h' line='855' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'const tm* restrict' -->
      <parameter type-id='type-id-103'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- size_t wcslen(const wchar_t*) -->
    <function-decl name='wcslen' filepath='/usr/include/wchar.h' line='287' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- wchar_t* wcsncat(wchar_t* restrict, const wchar_t* restrict, size_t) -->
    <function-decl name='wcsncat' filepath='/usr/include/wchar.h' line='158' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- int wcsncmp(const wchar_t*, const wchar_t*, size_t) -->
    <function-decl name='wcsncmp' filepath='/usr/include/wchar.h' line='166' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wchar_t* wcsncpy(wchar_t* restrict, const wchar_t* restrict, size_t) -->
    <function-decl name='wcsncpy' filepath='/usr/include/wchar.h' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- size_t wcsrtombs(char* restrict, const wchar_t** restrict, size_t, mbstate_t* restrict) -->
    <function-decl name='wcsrtombs' filepath='/usr/include/wchar.h' line='414' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const wchar_t** restrict' -->
      <parameter type-id='type-id-105'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'mbstate_t* restrict' -->
      <parameter type-id='type-id-92'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- size_t wcsspn(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcsspn' filepath='/usr/include/wchar.h' line='256' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- double wcstod(const wchar_t* restrict, wchar_t** restrict) -->
    <function-decl name='wcstod' filepath='/usr/include/wchar.h' line='450' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float wcstof(const wchar_t* restrict, wchar_t** restrict) -->
    <function-decl name='wcstof' filepath='/usr/include/wchar.h' line='457' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- wchar_t* wcstok(wchar_t* restrict, const wchar_t* restrict, wchar_t** restrict) -->
    <function-decl name='wcstok' filepath='/usr/include/wchar.h' line='282' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- long int wcstol(const wchar_t* restrict, wchar_t** restrict, int) -->
    <function-decl name='wcstol' filepath='/usr/include/wchar.h' line='468' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- unsigned long int wcstoul(const wchar_t* restrict, wchar_t** restrict, int) -->
    <function-decl name='wcstoul' filepath='/usr/include/wchar.h' line='473' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- unsigned long int -->
      <return type-id='type-id-56'/>
    </function-decl>
    <!-- size_t wcsxfrm(wchar_t* restrict, const wchar_t* restrict, size_t) -->
    <function-decl name='wcsxfrm' filepath='/usr/include/wchar.h' line='196' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- int wctob(wint_t) -->
    <function-decl name='wctob' filepath='/usr/include/wchar.h' line='357' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int wmemcmp(const wchar_t*, const wchar_t*, size_t) -->
    <function-decl name='wmemcmp' filepath='/usr/include/wchar.h' line='325' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wchar_t* wmemcpy(wchar_t* restrict, const wchar_t* restrict, size_t) -->
    <function-decl name='wmemcpy' filepath='/usr/include/wchar.h' line='329' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wmemmove(wchar_t*, const wchar_t*, size_t) -->
    <function-decl name='wmemmove' filepath='/usr/include/wchar.h' line='334' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t*' -->
      <parameter type-id='type-id-66'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wmemset(wchar_t*, wchar_t, size_t) -->
    <function-decl name='wmemset' filepath='/usr/include/wchar.h' line='338' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t*' -->
      <parameter type-id='type-id-66'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- int wprintf(const wchar_t* restrict, ...) -->
    <function-decl name='wprintf' filepath='/usr/include/wchar.h' line='601' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int wscanf(const wchar_t* restrict, ...) -->
    <function-decl name='wscanf' filepath='/usr/include/wchar.h' line='642' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wchar_t* wcschr(const wchar_t*, wchar_t) -->
    <function-decl name='wcschr' filepath='/usr/include/wchar.h' line='227' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wcspbrk(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcspbrk' filepath='/usr/include/wchar.h' line='266' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wcsrchr(const wchar_t*, wchar_t) -->
    <function-decl name='wcsrchr' filepath='/usr/include/wchar.h' line='237' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wcsstr(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcsstr' filepath='/usr/include/wchar.h' line='277' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wmemchr(const wchar_t*, wchar_t, size_t) -->
    <function-decl name='wmemchr' filepath='/usr/include/wchar.h' line='320' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- long double wcstold(const wchar_t* restrict, wchar_t** restrict) -->
    <function-decl name='wcstold' filepath='/usr/include/wchar.h' line='459' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- long long int wcstoll(const wchar_t* restrict, wchar_t** restrict, int) -->
    <function-decl name='wcstoll' filepath='/usr/include/wchar.h' line='483' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long unsigned int wcstoull(const wchar_t* restrict, wchar_t** restrict, int) -->
    <function-decl name='wcstoull' filepath='/usr/include/wchar.h' line='490' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long long unsigned int -->
      <return type-id='type-id-79'/>
    </function-decl>

    <!-- char* setlocale(int, const char*) -->
    <function-decl name='setlocale' filepath='/usr/include/locale.h' line='124' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- lconv* localeconv() -->
    <function-decl name='localeconv' filepath='/usr/include/locale.h' line='127' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- lconv* -->
      <return type-id='type-id-109'/>
    </function-decl>
    <!-- int isalnum(int) -->
    <function-decl name='isalnum' filepath='/usr/include/ctype.h' line='110' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isalpha(int) -->
    <function-decl name='isalpha' filepath='/usr/include/ctype.h' line='111' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iscntrl(int) -->
    <function-decl name='iscntrl' filepath='/usr/include/ctype.h' line='112' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isdigit(int) -->
    <function-decl name='isdigit' filepath='/usr/include/ctype.h' line='113' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isgraph(int) -->
    <function-decl name='isgraph' filepath='/usr/include/ctype.h' line='115' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int islower(int) -->
    <function-decl name='islower' filepath='/usr/include/ctype.h' line='114' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isprint(int) -->
    <function-decl name='isprint' filepath='/usr/include/ctype.h' line='116' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int ispunct(int) -->
    <function-decl name='ispunct' filepath='/usr/include/ctype.h' line='117' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isspace(int) -->
    <function-decl name='isspace' filepath='/usr/include/ctype.h' line='118' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isupper(int) -->
    <function-decl name='isupper' filepath='/usr/include/ctype.h' line='119' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isxdigit(int) -->
    <function-decl name='isxdigit' filepath='/usr/include/ctype.h' line='120' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int tolower(int) -->
    <function-decl name='tolower' filepath='/usr/include/ctype.h' line='124' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int toupper(int) -->
    <function-decl name='toupper' filepath='/usr/include/ctype.h' line='127' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isblank(int) -->
    <function-decl name='isblank' filepath='/usr/include/ctype.h' line='136' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void clearerr(FILE*) -->
    <function-decl name='clearerr' filepath='/usr/include/stdio.h' line='826' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int fclose(FILE*) -->
    <function-decl name='fclose' filepath='/usr/include/stdio.h' line='237' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int feof(FILE*) -->
    <function-decl name='feof' filepath='/usr/include/stdio.h' line='828' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int ferror(FILE*) -->
    <function-decl name='ferror' filepath='/usr/include/stdio.h' line='830' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fflush(FILE*) -->
    <function-decl name='fflush' filepath='/usr/include/stdio.h' line='242' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fgetc(FILE*) -->
    <function-decl name='fgetc' filepath='/usr/include/stdio.h' line='531' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fgetpos(FILE* restrict, fpos_t* restrict) -->
    <function-decl name='fgetpos' filepath='/usr/include/stdio.h' line='798' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'fpos_t* restrict' -->
      <parameter type-id='type-id-116'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- char* fgets(char* restrict, int, FILE* restrict) -->
    <function-decl name='fgets' filepath='/usr/include/stdio.h' line='622' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- FILE* fopen(const char* restrict, const char* restrict) -->
    <function-decl name='fopen' filepath='/usr/include/stdio.h' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- FILE* -->
      <return type-id='type-id-111'/>
    </function-decl>
    <!-- int fprintf(FILE* restrict, const char* restrict, ...) -->
    <function-decl name='fprintf' filepath='/usr/include/stdio.h' line='356' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fputc(int, FILE*) -->
    <function-decl name='fputc' filepath='/usr/include/stdio.h' line='573' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fputs(const char* restrict, FILE* restrict) -->
    <function-decl name='fputs' filepath='/usr/include/stdio.h' line='689' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- size_t fread(void* restrict, size_t, size_t, FILE* restrict) -->
    <function-decl name='fread' filepath='/usr/include/stdio.h' line='709' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void* restrict' -->
      <parameter type-id='type-id-117'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- FILE* freopen(const char* restrict, const char* restrict, FILE* restrict) -->
    <function-decl name='freopen' filepath='/usr/include/stdio.h' line='278' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- FILE* -->
      <return type-id='type-id-111'/>
    </function-decl>
    <!-- int fscanf(FILE* restrict, const char* restrict, ...) -->
    <function-decl name='fscanf' filepath='/usr/include/stdio.h' line='425' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fseek(FILE*, long int, int) -->
    <function-decl name='fseek' filepath='/usr/include/stdio.h' line='749' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fsetpos(FILE*, const fpos_t*) -->
    <function-decl name='fsetpos' filepath='/usr/include/stdio.h' line='803' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- parameter of type 'const fpos_t*' -->
      <parameter type-id='type-id-119'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- long int ftell(FILE*) -->
    <function-decl name='ftell' filepath='/usr/include/stdio.h' line='754' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- size_t fwrite(void* restrict, size_t, size_t, FILE* restrict) -->
    <function-decl name='fwrite' filepath='/usr/include/stdio.h' line='715' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void* restrict' -->
      <parameter type-id='type-id-117'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- int getc(FILE*) -->
    <function-decl name='getc' filepath='/usr/include/stdio.h' line='532' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int getchar() -->
    <function-decl name='getchar' filepath='/usr/include/stdio.h' line='538' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- char* gets(char*) -->
    <function-decl name='gets' filepath='/usr/include/stdio.h' line='638' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-40'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- void perror(const char*) -->
    <function-decl name='perror' filepath='/usr/include/stdio.h' line='846' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int printf(const char* restrict, ...) -->
    <function-decl name='printf' filepath='/usr/include/stdio.h' line='362' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int putc(int, FILE*) -->
    <function-decl name='putc' filepath='/usr/include/stdio.h' line='574' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int putchar(int) -->
    <function-decl name='putchar' filepath='/usr/include/stdio.h' line='580' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int puts(const char*) -->
    <function-decl name='puts' filepath='/usr/include/stdio.h' line='695' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int remove(const char*) -->
    <function-decl name='remove' filepath='/usr/include/stdio.h' line='178' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int rename(const char*, const char*) -->
    <function-decl name='rename' filepath='/usr/include/stdio.h' line='180' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void rewind(FILE*) -->
    <function-decl name='rewind' filepath='/usr/include/stdio.h' line='759' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int scanf(const char* restrict, ...) -->
    <function-decl name='scanf' filepath='/usr/include/stdio.h' line='431' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void setbuf(FILE* restrict, char* restrict) -->
    <function-decl name='setbuf' filepath='/usr/include/stdio.h' line='332' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int setvbuf(FILE* restrict, char* restrict, int, size_t) -->
    <function-decl name='setvbuf' filepath='/usr/include/stdio.h' line='336' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int sprintf(char* restrict, const char* restrict, ...) -->
    <function-decl name='sprintf' filepath='/usr/include/stdio.h' line='364' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int sscanf(const char* restrict, const char* restrict, ...) -->
    <function-decl name='sscanf' filepath='/usr/include/stdio.h' line='433' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- FILE* tmpfile() -->
    <function-decl name='tmpfile' filepath='/usr/include/stdio.h' line='195' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- FILE* -->
      <return type-id='type-id-111'/>
    </function-decl>
    <!-- char* tmpnam(char*) -->
    <function-decl name='tmpnam' filepath='/usr/include/stdio.h' line='209' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-40'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- int ungetc(int, FILE*) -->
    <function-decl name='ungetc' filepath='/usr/include/stdio.h' line='702' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vfprintf(FILE* restrict, const char* restrict, __va_list_tag*) -->
    <function-decl name='vfprintf' filepath='/usr/include/stdio.h' line='371' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vprintf(const char* restrict, __va_list_tag*) -->
    <function-decl name='vprintf' filepath='/usr/include/stdio.h' line='377' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vsprintf(char* restrict, const char* restrict, __va_list_tag*) -->
    <function-decl name='vsprintf' filepath='/usr/include/stdio.h' line='379' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int snprintf(char* restrict, size_t, const char* restrict, ...) -->
    <function-decl name='snprintf' filepath='/usr/include/stdio.h' line='386' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vfscanf(FILE* restrict, const char* restrict, __va_list_tag*) -->
    <function-decl name='vfscanf' filepath='/usr/include/stdio.h' line='471' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vscanf(const char* restrict, __va_list_tag*) -->
    <function-decl name='vscanf' filepath='/usr/include/stdio.h' line='479' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vsnprintf(char* restrict, size_t, const char* restrict, __va_list_tag*) -->
    <function-decl name='vsnprintf' filepath='/usr/include/stdio.h' line='390' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vsscanf(const char* restrict, const char* restrict, __va_list_tag*) -->
    <function-decl name='vsscanf' filepath='/usr/include/stdio.h' line='483' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswalnum(wint_t) -->
    <function-decl name='iswalnum' filepath='/usr/include/wctype.h' line='111' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswalpha(wint_t) -->
    <function-decl name='iswalpha' filepath='/usr/include/wctype.h' line='117' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswblank(wint_t) -->
    <function-decl name='iswblank' filepath='/usr/include/wctype.h' line='162' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswcntrl(wint_t) -->
    <function-decl name='iswcntrl' filepath='/usr/include/wctype.h' line='120' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswctype(wint_t, wctype_t) -->
    <function-decl name='iswctype' filepath='/usr/include/wctype.h' line='175' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- parameter of type 'typedef wctype_t' -->
      <parameter type-id='type-id-120'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswdigit(wint_t) -->
    <function-decl name='iswdigit' filepath='/usr/include/wctype.h' line='124' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswgraph(wint_t) -->
    <function-decl name='iswgraph' filepath='/usr/include/wctype.h' line='128' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswlower(wint_t) -->
    <function-decl name='iswlower' filepath='/usr/include/wctype.h' line='133' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswprint(wint_t) -->
    <function-decl name='iswprint' filepath='/usr/include/wctype.h' line='136' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswpunct(wint_t) -->
    <function-decl name='iswpunct' filepath='/usr/include/wctype.h' line='141' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswspace(wint_t) -->
    <function-decl name='iswspace' filepath='/usr/include/wctype.h' line='146' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswupper(wint_t) -->
    <function-decl name='iswupper' filepath='/usr/include/wctype.h' line='151' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswxdigit(wint_t) -->
    <function-decl name='iswxdigit' filepath='/usr/include/wctype.h' line='156' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wint_t towctrans(wint_t, wctrans_t) -->
    <function-decl name='towctrans' filepath='/usr/include/wctype.h' line='221' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- parameter of type 'typedef wctrans_t' -->
      <parameter type-id='type-id-124'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wint_t towlower(wint_t) -->
    <function-decl name='towlower' filepath='/usr/include/wctype.h' line='194' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wint_t towupper(wint_t) -->
    <function-decl name='towupper' filepath='/usr/include/wctype.h' line='197' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wctrans_t wctrans(const char*) -->
    <function-decl name='wctrans' filepath='/usr/include/wctype.h' line='218' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- typedef wctrans_t -->
      <return type-id='type-id-124'/>
    </function-decl>
    <!-- wctype_t wctype(const char*) -->
    <function-decl name='wctype' filepath='/usr/include/wctype.h' line='171' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- typedef wctype_t -->
      <return type-id='type-id-120'/>
    </function-decl>
    <!-- clock_t clock() -->
    <function-decl name='clock' filepath='/usr/include/time.h' line='189' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- typedef clock_t -->
      <return type-id='type-id-126'/>
    </function-decl>
    <!-- double difftime(time_t, time_t) -->
    <function-decl name='difftime' filepath='/usr/include/time.h' line='195' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef time_t' -->
      <parameter type-id='type-id-128'/>
      <!-- parameter of type 'typedef time_t' -->
      <parameter type-id='type-id-128'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- time_t mktime(tm*) -->
    <function-decl name='mktime' filepath='/usr/include/time.h' line='199' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'tm*' -->
      <parameter type-id='type-id-129'/>
      <!-- typedef time_t -->
      <return type-id='type-id-128'/>
    </function-decl>
    <!-- time_t time(time_t*) -->
    <function-decl name='time' filepath='/usr/include/time.h' line='192' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'time_t*' -->
      <parameter type-id='type-id-130'/>
      <!-- typedef time_t -->
      <return type-id='type-id-128'/>
    </function-decl>
    <!-- char* asctime(const tm*) -->
    <function-decl name='asctime' filepath='/usr/include/time.h' line='261' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const tm*' -->
      <parameter type-id='type-id-102'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- char* ctime(const time_t*) -->
    <function-decl name='ctime' filepath='/usr/include/time.h' line='264' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const time_t*' -->
      <parameter type-id='type-id-132'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- tm* gmtime(const time_t*) -->
    <function-decl name='gmtime' filepath='/usr/include/time.h' line='239' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const time_t*' -->
      <parameter type-id='type-id-132'/>
      <!-- tm* -->
      <return type-id='type-id-129'/>
    </function-decl>
    <!-- tm* localtime(const time_t*) -->
    <function-decl name='localtime' filepath='/usr/include/time.h' line='243' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const time_t*' -->
      <parameter type-id='type-id-132'/>
      <!-- tm* -->
      <return type-id='type-id-129'/>
    </function-decl>
    <!-- size_t strftime(char* restrict, size_t, const char* restrict, const tm* restrict) -->
    <function-decl name='strftime' filepath='/usr/include/time.h' line='205' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'const tm* restrict' -->
      <parameter type-id='type-id-103'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>

    <!-- double acos(double) -->
    <function-decl name='acos' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='54' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double asin(double) -->
    <function-decl name='asin' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='56' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double atan(double) -->
    <function-decl name='atan' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='58' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double atan2(double, double) -->
    <function-decl name='atan2' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='60' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double ceil(double) -->
    <function-decl name='ceil' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='178' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double cos(double) -->
    <function-decl name='cos' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='63' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double cosh(double) -->
    <function-decl name='cosh' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='72' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double exp(double) -->
    <function-decl name='exp' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='100' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double fabs(double) -->
    <function-decl name='fabs' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='181' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double floor(double) -->
    <function-decl name='floor' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='184' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double fmod(double, double) -->
    <function-decl name='fmod' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='187' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double frexp(double, int*) -->
    <function-decl name='frexp' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='103' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='type-id-222'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double ldexp(double, int) -->
    <function-decl name='ldexp' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='106' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double log(double) -->
    <function-decl name='log' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='109' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double log10(double) -->
    <function-decl name='log10' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='112' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double modf(double, double*) -->
    <function-decl name='modf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='115' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double*' -->
      <parameter type-id='type-id-393'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double pow(double, double) -->
    <function-decl name='pow' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='153' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double sin(double) -->
    <function-decl name='sin' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='65' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double sinh(double) -->
    <function-decl name='sinh' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='74' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double sqrt(double) -->
    <function-decl name='sqrt' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='156' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double tan(double) -->
    <function-decl name='tan' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='67' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double tanh(double) -->
    <function-decl name='tanh' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='76' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double acosh(double) -->
    <function-decl name='acosh' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='88' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float acoshf(float) -->
    <function-decl name='acoshf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='88' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double acoshl(long double) -->
    <function-decl name='acoshl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='88' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double asinh(double) -->
    <function-decl name='asinh' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='90' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float asinhf(float) -->
    <function-decl name='asinhf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='90' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double asinhl(long double) -->
    <function-decl name='asinhl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='90' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double atanh(double) -->
    <function-decl name='atanh' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='92' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float atanhf(float) -->
    <function-decl name='atanhf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='92' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double atanhl(long double) -->
    <function-decl name='atanhl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='92' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double cbrt(double) -->
    <function-decl name='cbrt' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='169' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float cbrtf(float) -->
    <function-decl name='cbrtf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='169' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double cbrtl(long double) -->
    <function-decl name='cbrtl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='169' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double copysign(double, double) -->
    <function-decl name='copysign' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='217' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float copysignf(float, float) -->
    <function-decl name='copysignf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='217' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double copysignl(long double, long double) -->
    <function-decl name='copysignl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='217' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double erf(double) -->
    <function-decl name='erf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='249' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float erff(float) -->
    <function-decl name='erff' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='249' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double erfl(long double) -->
    <function-decl name='erfl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='249' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double erfc(double) -->
    <function-decl name='erfc' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='250' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float erfcf(float) -->
    <function-decl name='erfcf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='250' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double erfcl(long double) -->
    <function-decl name='erfcl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='250' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double exp2(double) -->
    <function-decl name='exp2' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='141' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float exp2f(float) -->
    <function-decl name='exp2f' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='141' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double exp2l(long double) -->
    <function-decl name='exp2l' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='141' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double expm1(double) -->
    <function-decl name='expm1' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='128' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float expm1f(float) -->
    <function-decl name='expm1f' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='128' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double expm1l(long double) -->
    <function-decl name='expm1l' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='128' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double fdim(double, double) -->
    <function-decl name='fdim' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='337' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float fdimf(float, float) -->
    <function-decl name='fdimf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='337' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double fdiml(long double, long double) -->
    <function-decl name='fdiml' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='337' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double fma(double, double, double) -->
    <function-decl name='fma' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='356' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float fmaf(float, float, float) -->
    <function-decl name='fmaf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='356' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double fmal(long double, long double, long double) -->
    <function-decl name='fmal' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='356' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double fmax(double, double) -->
    <function-decl name='fmax' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='340' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float fmaxf(float, float) -->
    <function-decl name='fmaxf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='340' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double fmaxl(long double, long double) -->
    <function-decl name='fmaxl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='340' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double fmin(double, double) -->
    <function-decl name='fmin' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='343' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float fminf(float, float) -->
    <function-decl name='fminf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='343' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double fminl(long double, long double) -->
    <function-decl name='fminl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='343' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double hypot(double, double) -->
    <function-decl name='hypot' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='162' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float hypotf(float, float) -->
    <function-decl name='hypotf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='162' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double hypotl(long double, long double) -->
    <function-decl name='hypotl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='162' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- int ilogb(double) -->
    <function-decl name='ilogb' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='296' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int ilogbf(float) -->
    <function-decl name='ilogbf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='296' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int ilogbl(long double) -->
    <function-decl name='ilogbl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='296' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- double lgamma(double) -->
    <function-decl name='lgamma' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='251' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float lgammaf(float) -->
    <function-decl name='lgammaf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='251' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double lgammal(long double) -->
    <function-decl name='lgammal' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='251' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- long long int llrint(double) -->
    <function-decl name='llrint' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='327' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long int llrintf(float) -->
    <function-decl name='llrintf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='327' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long int llrintl(long double) -->
    <function-decl name='llrintl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='327' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long int llround(double) -->
    <function-decl name='llround' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='333' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long int llroundf(float) -->
    <function-decl name='llroundf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='333' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long int llroundl(long double) -->
    <function-decl name='llroundl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='333' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- double log1p(double) -->
    <function-decl name='log1p' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='131' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float log1pf(float) -->
    <function-decl name='log1pf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='131' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double log1pl(long double) -->
    <function-decl name='log1pl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='131' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double log2(double) -->
    <function-decl name='log2' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='144' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float log2f(float) -->
    <function-decl name='log2f' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='144' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double log2l(long double) -->
    <function-decl name='log2l' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='144' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double logb(double) -->
    <function-decl name='logb' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='134' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float logbf(float) -->
    <function-decl name='logbf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='134' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double logbl(long double) -->
    <function-decl name='logbl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='134' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- long int lrint(double) -->
    <function-decl name='lrint' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='325' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- long int lrintf(float) -->
    <function-decl name='lrintf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='325' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- long int lrintl(long double) -->
    <function-decl name='lrintl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='325' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- long int lround(double) -->
    <function-decl name='lround' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='331' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- long int lroundf(float) -->
    <function-decl name='lroundf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='331' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- long int lroundl(long double) -->
    <function-decl name='lroundl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='331' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- double nan(const char*) -->
    <function-decl name='nan' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='224' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float nanf(const char*) -->
    <function-decl name='nanf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='224' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double nanl(const char*) -->
    <function-decl name='nanl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='224' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double nearbyint(double) -->
    <function-decl name='nearbyint' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='305' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float nearbyintf(float) -->
    <function-decl name='nearbyintf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='305' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double nearbyintl(long double) -->
    <function-decl name='nearbyintl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='305' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double nextafter(double, double) -->
    <function-decl name='nextafter' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='282' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float nextafterf(float, float) -->
    <function-decl name='nextafterf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='282' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double nextafterl(long double, long double) -->
    <function-decl name='nextafterl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='282' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double nexttoward(double, long double) -->
    <function-decl name='nexttoward' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='284' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float nexttowardf(float, long double) -->
    <function-decl name='nexttowardf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='284' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double nexttowardl(long double, long double) -->
    <function-decl name='nexttowardl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='284' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double remainder(double, double) -->
    <function-decl name='remainder' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='288' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float remainderf(float, float) -->
    <function-decl name='remainderf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='288' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double remainderl(long double, long double) -->
    <function-decl name='remainderl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='288' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double remquo(double, double, int*) -->
    <function-decl name='remquo' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='318' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='type-id-222'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float remquof(float, float, int*) -->
    <function-decl name='remquof' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='318' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='type-id-222'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double remquol(long double, long double, int*) -->
    <function-decl name='remquol' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='318' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='type-id-222'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double rint(double) -->
    <function-decl name='rint' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='279' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float rintf(float) -->
    <function-decl name='rintf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='279' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double rintl(long double) -->
    <function-decl name='rintl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='279' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double round(double) -->
    <function-decl name='round' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='309' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float roundf(float) -->
    <function-decl name='roundf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='309' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double roundl(long double) -->
    <function-decl name='roundl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='309' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double scalbln(double, long int) -->
    <function-decl name='scalbln' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='301' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float scalblnf(float, long int) -->
    <function-decl name='scalblnf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='301' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double scalblnl(long double, long int) -->
    <function-decl name='scalblnl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='301' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double scalbn(double, int) -->
    <function-decl name='scalbn' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='292' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float scalbnf(float, int) -->
    <function-decl name='scalbnf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='292' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double scalbnl(long double, int) -->
    <function-decl name='scalbnl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='292' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double tgamma(double) -->
    <function-decl name='tgamma' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='258' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float tgammaf(float) -->
    <function-decl name='tgammaf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='258' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double tgammal(long double) -->
    <function-decl name='tgammal' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='258' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double trunc(double) -->
    <function-decl name='trunc' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='313' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float truncf(float) -->
    <function-decl name='truncf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='313' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double truncl(long double) -->
    <function-decl name='truncl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='313' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- void* memchr(void*, int, size_t) -->
    <function-decl name='memchr' filepath='/usr/include/string.h' line='78' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- int memcmp(void*, void*, size_t) -->
    <function-decl name='memcmp' filepath='/usr/include/string.h' line='69' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void* memcpy(void* restrict, void* restrict, size_t) -->
    <function-decl name='memcpy' filepath='/usr/include/string.h' line='46' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void* restrict' -->
      <parameter type-id='type-id-117'/>
      <!-- parameter of type 'void* restrict' -->
      <parameter type-id='type-id-117'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- void* memmove(void*, void*, size_t) -->
    <function-decl name='memmove' filepath='/usr/include/string.h' line='50' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- void* memset(void*, int, size_t) -->
    <function-decl name='memset' filepath='/usr/include/string.h' line='66' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- char* strcat(char* restrict, const char* restrict) -->
    <function-decl name='strcat' filepath='/usr/include/string.h' line='137' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- int strcmp(const char*, const char*) -->
    <function-decl name='strcmp' filepath='/usr/include/string.h' line='144' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int strcoll(const char*, const char*) -->
    <function-decl name='strcoll' filepath='/usr/include/string.h' line='151' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- char* strcpy(char* restrict, const char* restrict) -->
    <function-decl name='strcpy' filepath='/usr/include/string.h' line='129' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- size_t strcspn(const char*, const char*) -->
    <function-decl name='strcspn' filepath='/usr/include/string.h' line='284' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- char* strerror(int) -->
    <function-decl name='strerror' filepath='/usr/include/string.h' line='412' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- size_t strlen(const char*) -->
    <function-decl name='strlen' filepath='/usr/include/string.h' line='398' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- char* strncat(char* restrict, const char* restrict, size_t) -->
    <function-decl name='strncat' filepath='/usr/include/string.h' line='140' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- int strncmp(const char*, const char*, size_t) -->
    <function-decl name='strncmp' filepath='/usr/include/string.h' line='147' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- char* strncpy(char* restrict, const char* restrict, size_t) -->
    <function-decl name='strncpy' filepath='/usr/include/string.h' line='132' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- size_t strspn(const char*, const char*) -->
    <function-decl name='strspn' filepath='/usr/include/string.h' line='288' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- char* strtok(char* restrict, const char* restrict) -->
    <function-decl name='strtok' filepath='/usr/include/string.h' line='347' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- size_t strxfrm(char* restrict, const char* restrict, size_t) -->
    <function-decl name='strxfrm' filepath='/usr/include/string.h' line='154' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- const char* strchr(const char*, int) -->
    <function-decl name='strchr' filepath='/usr/include/string.h' line='217' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- const char* -->
      <return type-id='type-id-15'/>
    </function-decl>
    <!-- const char* strpbrk(const char*, const char*) -->
    <function-decl name='strpbrk' filepath='/usr/include/string.h' line='296' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- const char* -->
      <return type-id='type-id-15'/>
    </function-decl>
    <!-- const char* strrchr(const char*, int) -->
    <function-decl name='strrchr' filepath='/usr/include/string.h' line='244' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- const char* -->
      <return type-id='type-id-15'/>
    </function-decl>
    <!-- const char* strstr(const char*, const char*) -->
    <function-decl name='strstr' filepath='/usr/include/string.h' line='323' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- const char* -->
      <return type-id='type-id-15'/>
    </function-decl>
    <!-- __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >* -->
    <pointer-type-def type-id='type-id-424' size-in-bits='64' id='type-id-428'/>
    <!-- const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > -->
    <qualified-type-def type-id='type-id-424' const='yes' id='type-id-438'/>
    <!-- const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >* -->
    <pointer-type-def type-id='type-id-438' size-in-bits='64' id='type-id-429'/>
    <!-- __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-424' size-in-bits='64' id='type-id-430'/>
    <!-- __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >* -->
    <pointer-type-def type-id='type-id-431' size-in-bits='64' id='type-id-435'/>
    <!-- const __gnu_cxx::__normal_iterator<char *, std::basic_string<char> > -->
    <qualified-type-def type-id='type-id-431' const='yes' id='type-id-439'/>
    <!-- const __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >* -->
    <pointer-type-def type-id='type-id-439' size-in-bits='64' id='type-id-436'/>
    <!-- __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-431' size-in-bits='64' id='type-id-437'/>
    <!-- std::char_traits<char>::char_type& -->
    <reference-type-def kind='lvalue' type-id='type-id-416' size-in-bits='64' id='type-id-418'/>
    <!-- const std::char_traits<char>::char_type -->
    <qualified-type-def type-id='type-id-416' const='yes' id='type-id-440'/>
    <!-- const std::char_traits<char>::char_type& -->
    <reference-type-def kind='lvalue' type-id='type-id-440' size-in-bits='64' id='type-id-419'/>
    <!-- const std::char_traits<char>::char_type* -->
    <pointer-type-def type-id='type-id-440' size-in-bits='64' id='type-id-420'/>
    <!-- std::char_traits<char>::char_type* -->
    <pointer-type-def type-id='type-id-416' size-in-bits='64' id='type-id-421'/>
    <!-- const std::char_traits<char>::int_type -->
    <qualified-type-def type-id='type-id-417' const='yes' id='type-id-441'/>
    <!-- const std::char_traits<char>::int_type& -->
    <reference-type-def kind='lvalue' type-id='type-id-441' size-in-bits='64' id='type-id-422'/>
    <!-- boost::detail::addr_impl_ref<const boost::filesystem::path>* -->
    <pointer-type-def type-id='type-id-401' size-in-bits='64' id='type-id-402'/>
    <!-- const boost::detail::addr_impl_ref<const boost::filesystem::path> -->
    <qualified-type-def type-id='type-id-401' const='yes' id='type-id-442'/>
    <!-- const boost::detail::addr_impl_ref<const boost::filesystem::path>* -->
    <pointer-type-def type-id='type-id-442' size-in-bits='64' id='type-id-403'/>
    <!-- boost::detail::addr_impl_ref<const boost::filesystem::path>& -->
    <reference-type-def kind='lvalue' type-id='type-id-401' size-in-bits='64' id='type-id-405'/>
    <!-- const boost::detail::addr_impl_ref<const boost::filesystem::path>& -->
    <reference-type-def kind='lvalue' type-id='type-id-442' size-in-bits='64' id='type-id-404'/>
  </abi-instr>
  <abi-instr version='1.0' address-size='64' path='src/third_party/boost-1.56.0/libs/filesystem/src/path_traits.cpp' language='LANG_C_plus_plus'>

    <!-- namespace std -->
    <namespace-decl name='std'>


      <!-- class std::__codecvt_abstract_base<wchar_t, char, __mbstate_t> -->
      <class-decl name='__codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;' visibility='default' is-declaration-only='yes' id='type-id-443'>
        <member-type access='private'>
          <!-- typedef std::codecvt_base::result std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::result -->
          <typedef-decl name='result' type-id='type-id-445' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/codecvt.h' line='73' column='1' id='type-id-444'/>
        </member-type>
        <member-type access='private'>
          <!-- typedef __anonymous_struct__ std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::state_type -->
          <typedef-decl name='state_type' type-id='type-id-447' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/codecvt.h' line='76' column='1' id='type-id-446'/>
        </member-type>
        <member-type access='private'>
          <!-- typedef wchar_t std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type -->
          <typedef-decl name='intern_type' type-id='type-id-65' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/codecvt.h' line='74' column='1' id='type-id-448'/>
        </member-type>
        <member-type access='private'>
          <!-- typedef char std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type -->
          <typedef-decl name='extern_type' type-id='type-id-27' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/codecvt.h' line='75' column='1' id='type-id-449'/>
        </member-type>
        <member-function access='public'>
          <!-- std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::result std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::out(std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::state_type&, const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type*, const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type*, const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type*&, std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type*, std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type*, std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type*&) -->
          <function-decl name='out' mangled-name='_ZNKSt23__codecvt_abstract_baseIwc11__mbstate_tE3outERS0_PKwS4_RS4_PcS6_RS6_' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/codecvt.h' line='116' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNKSt23__codecvt_abstract_baseIwc11__mbstate_tE3outERS0_PKwS4_RS4_PcS6_RS6_'>
            <!-- implicit parameter of type 'const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>*' -->
            <parameter type-id='type-id-450' is-artificial='yes'/>
            <!-- parameter of type 'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::state_type&' -->
            <parameter type-id='type-id-451'/>
            <!-- parameter of type 'const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type*' -->
            <parameter type-id='type-id-452'/>
            <!-- parameter of type 'const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type*' -->
            <parameter type-id='type-id-452'/>
            <!-- parameter of type 'const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type*&' -->
            <parameter type-id='type-id-453'/>
            <!-- parameter of type 'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type*' -->
            <parameter type-id='type-id-454'/>
            <!-- parameter of type 'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type*' -->
            <parameter type-id='type-id-454'/>
            <!-- parameter of type 'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type*&' -->
            <parameter type-id='type-id-455'/>
            <!-- typedef std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::result -->
            <return type-id='type-id-444'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::result std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::in(std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::state_type&, const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type*, const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type*, const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type*&, std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type*, std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type*, std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type*&) -->
          <function-decl name='in' mangled-name='_ZNKSt23__codecvt_abstract_baseIwc11__mbstate_tE2inERS0_PKcS4_RS4_PwS6_RS6_' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/codecvt.h' line='196' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNKSt23__codecvt_abstract_baseIwc11__mbstate_tE2inERS0_PKcS4_RS4_PwS6_RS6_'>
            <!-- implicit parameter of type 'const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>*' -->
            <parameter type-id='type-id-450' is-artificial='yes'/>
            <!-- parameter of type 'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::state_type&' -->
            <parameter type-id='type-id-451'/>
            <!-- parameter of type 'const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type*' -->
            <parameter type-id='type-id-456'/>
            <!-- parameter of type 'const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type*' -->
            <parameter type-id='type-id-456'/>
            <!-- parameter of type 'const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type*&' -->
            <parameter type-id='type-id-457'/>
            <!-- parameter of type 'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type*' -->
            <parameter type-id='type-id-458'/>
            <!-- parameter of type 'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type*' -->
            <parameter type-id='type-id-458'/>
            <!-- parameter of type 'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type*&' -->
            <parameter type-id='type-id-459'/>
            <!-- typedef std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::result -->
            <return type-id='type-id-444'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class std::codecvt_base -->
      <class-decl name='codecvt_base' size-in-bits='8' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/codecvt.h' line='46' column='1' id='type-id-460'>
        <member-type access='private'>
          <!-- enum std::codecvt_base::result -->
          <enum-decl name='result' id='type-id-445'>
            <underlying-type type-id='type-id-187'/>
            <enumerator name='ok' value='0'/>
            <enumerator name='partial' value='1'/>
            <enumerator name='error' value='2'/>
            <enumerator name='noconv' value='3'/>
          </enum-decl>
        </member-type>
      </class-decl>
    </namespace-decl>

    <!-- namespace boost -->
    <namespace-decl name='boost'>


      <!-- namespace boost::filesystem -->
      <namespace-decl name='filesystem'>
        <!-- namespace boost::filesystem::path_traits -->
        <namespace-decl name='path_traits'>
          <!-- void boost::filesystem::path_traits::convert(const char*, const char*, std::wstring&, const boost::filesystem::path_traits::codecvt_type&) -->
          <function-decl name='convert' mangled-name='_ZN5boost10filesystem11path_traits7convertEPKcS3_RSbIwSt11char_traitsIwESaIwEERKSt7codecvtIwc11__mbstate_tE' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/path_traits.cpp' line='133' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem11path_traits7convertEPKcS3_RSbIwSt11char_traitsIwESaIwEERKSt7codecvtIwc11__mbstate_tE'>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='type-id-15' name='from' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/path_traits.cpp' line='133' column='1'/>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='type-id-15' name='from_end' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/path_traits.cpp' line='134' column='1'/>
            <!-- parameter of type 'std::wstring&' -->
            <parameter type-id='type-id-461' name='to' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/path_traits.cpp' line='135' column='1'/>
            <!-- parameter of type 'const boost::filesystem::path_traits::codecvt_type&' -->
            <parameter type-id='type-id-204' name='cvt' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/path_traits.cpp' line='136' column='1'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
          <!-- void boost::filesystem::path_traits::convert(const wchar_t*, const wchar_t*, std::string&, const boost::filesystem::path_traits::codecvt_type&) -->
          <function-decl name='convert' mangled-name='_ZN5boost10filesystem11path_traits7convertEPKwS3_RSsRKSt7codecvtIwc11__mbstate_tE' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/path_traits.cpp' line='167' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem11path_traits7convertEPKwS3_RSsRKSt7codecvtIwc11__mbstate_tE'>
            <!-- parameter of type 'const wchar_t*' -->
            <parameter type-id='type-id-74' name='from' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/path_traits.cpp' line='167' column='1'/>
            <!-- parameter of type 'const wchar_t*' -->
            <parameter type-id='type-id-74' name='from_end' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/path_traits.cpp' line='168' column='1'/>
            <!-- parameter of type 'std::string&' -->
            <parameter type-id='type-id-203' name='to' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/path_traits.cpp' line='169' column='1'/>
            <!-- parameter of type 'const boost::filesystem::path_traits::codecvt_type&' -->
            <parameter type-id='type-id-204' name='cvt' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/path_traits.cpp' line='170' column='1'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </namespace-decl>
      </namespace-decl>
      <!-- void boost::checked_array_delete<char>(char*) -->
      <function-decl name='checked_array_delete&lt;char&gt;' mangled-name='_ZN5boost20checked_array_deleteIcEEvPT_' filepath='src/third_party/boost-1.56.0/boost/core/checked_delete.hpp' line='37' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost20checked_array_deleteIcEEvPT_'>
        <!-- parameter of type 'char*' -->
        <parameter type-id='type-id-40' name='x' filepath='src/third_party/boost-1.56.0/boost/core/checked_delete.hpp' line='37' column='1'/>
        <!-- void -->
        <return type-id='type-id-8'/>
      </function-decl>
      <!-- void boost::checked_array_delete<wchar_t>(wchar_t*) -->
      <function-decl name='checked_array_delete&lt;wchar_t&gt;' mangled-name='_ZN5boost20checked_array_deleteIwEEvPT_' filepath='src/third_party/boost-1.56.0/boost/core/checked_delete.hpp' line='37' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost20checked_array_deleteIwEEvPT_'>
        <!-- parameter of type 'wchar_t*' -->
        <parameter type-id='type-id-66' name='x' filepath='src/third_party/boost-1.56.0/boost/core/checked_delete.hpp' line='37' column='1'/>
        <!-- void -->
        <return type-id='type-id-8'/>
      </function-decl>
      <!-- class boost::scoped_array<wchar_t> -->
      <class-decl name='scoped_array&lt;wchar_t&gt;' size-in-bits='64' visibility='default' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/scoped_array.hpp' line='39' column='1' id='type-id-462'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- wchar_t* boost::scoped_array<wchar_t>::px -->
          <var-decl name='px' type-id='type-id-66' visibility='default' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/scoped_array.hpp' line='43' column='1'/>
        </data-member>
        <member-function access='private'>
          <!-- void boost::scoped_array<wchar_t>::scoped_array(const boost::scoped_array<wchar_t>&) -->
          <function-decl name='scoped_array' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/scoped_array.hpp' line='45' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'boost::scoped_array<wchar_t>*' -->
            <parameter type-id='type-id-463' is-artificial='yes'/>
            <!-- parameter of type 'const boost::scoped_array<wchar_t>&' -->
            <parameter type-id='type-id-464'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- boost::scoped_array<wchar_t>& boost::scoped_array<wchar_t>::operator=(const boost::scoped_array<wchar_t>&) -->
          <function-decl name='operator=' mangled-name='_ZN5boost12scoped_arrayIwEaSERKS1_' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/scoped_array.hpp' line='46' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'boost::scoped_array<wchar_t>*' -->
            <parameter type-id='type-id-463' is-artificial='yes'/>
            <!-- parameter of type 'const boost::scoped_array<wchar_t>&' -->
            <parameter type-id='type-id-464'/>
            <!-- boost::scoped_array<wchar_t>& -->
            <return type-id='type-id-465'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void boost::scoped_array<wchar_t>::operator==(const boost::scoped_array<wchar_t>&) -->
          <function-decl name='operator==' mangled-name='_ZNK5boost12scoped_arrayIwEeqERKS1_' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/scoped_array.hpp' line='50' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const boost::scoped_array<wchar_t>*' -->
            <parameter type-id='type-id-466' is-artificial='yes'/>
            <!-- parameter of type 'const boost::scoped_array<wchar_t>&' -->
            <parameter type-id='type-id-464'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void boost::scoped_array<wchar_t>::operator!=(const boost::scoped_array<wchar_t>&) -->
          <function-decl name='operator!=' mangled-name='_ZNK5boost12scoped_arrayIwEneERKS1_' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/scoped_array.hpp' line='51' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const boost::scoped_array<wchar_t>*' -->
            <parameter type-id='type-id-466' is-artificial='yes'/>
            <!-- parameter of type 'const boost::scoped_array<wchar_t>&' -->
            <parameter type-id='type-id-464'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void boost::scoped_array<wchar_t>::scoped_array(wchar_t*) -->
          <function-decl name='scoped_array' mangled-name='_ZN5boost12scoped_arrayIwEC2EPw' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/scoped_array.hpp' line='57' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost12scoped_arrayIwEC2EPw'>
            <!-- implicit parameter of type 'boost::scoped_array<wchar_t>*' -->
            <parameter type-id='type-id-463' is-artificial='yes'/>
            <!-- parameter of type 'wchar_t*' -->
            <parameter type-id='type-id-66'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- boost::scoped_array<wchar_t>::~scoped_array() -->
          <function-decl name='~scoped_array' mangled-name='_ZN5boost12scoped_arrayIwED2Ev' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/scoped_array.hpp' line='64' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost12scoped_arrayIwED2Ev'>
            <!-- implicit parameter of type 'boost::scoped_array<wchar_t>*' -->
            <parameter type-id='type-id-463' is-artificial='yes'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void boost::scoped_array<wchar_t>::reset(wchar_t*) -->
          <function-decl name='reset' mangled-name='_ZN5boost12scoped_arrayIwE5resetEPw' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/scoped_array.hpp' line='72' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'boost::scoped_array<wchar_t>*' -->
            <parameter type-id='type-id-463' is-artificial='yes'/>
            <!-- parameter of type 'wchar_t*' -->
            <parameter type-id='type-id-66'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- wchar_t& boost::scoped_array<wchar_t>::operator[](std::ptrdiff_t) -->
          <function-decl name='operator[]' mangled-name='_ZNK5boost12scoped_arrayIwEixEl' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/scoped_array.hpp' line='78' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const boost::scoped_array<wchar_t>*' -->
            <parameter type-id='type-id-466' is-artificial='yes'/>
            <!-- parameter of type 'typedef std::ptrdiff_t' -->
            <parameter type-id='type-id-219'/>
            <!-- wchar_t& -->
            <return type-id='type-id-467'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- wchar_t* boost::scoped_array<wchar_t>::get() -->
          <function-decl name='get' mangled-name='_ZNK5boost12scoped_arrayIwE3getEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/scoped_array.hpp' line='85' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost12scoped_arrayIwE3getEv'>
            <!-- implicit parameter of type 'const boost::scoped_array<wchar_t>*' -->
            <parameter type-id='type-id-466' is-artificial='yes'/>
            <!-- wchar_t* -->
            <return type-id='type-id-66'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool boost::scoped_array<wchar_t>::operator bool() -->
          <function-decl name='operator bool' mangled-name='_ZNK5boost12scoped_arrayIwEcvbEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/operator_bool.hpp' line='11' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const boost::scoped_array<wchar_t>*' -->
            <parameter type-id='type-id-466' is-artificial='yes'/>
            <!-- bool -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool boost::scoped_array<wchar_t>::operator!() -->
          <function-decl name='operator!' mangled-name='_ZNK5boost12scoped_arrayIwEntEv' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/detail/operator_bool.hpp' line='60' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const boost::scoped_array<wchar_t>*' -->
            <parameter type-id='type-id-466' is-artificial='yes'/>
            <!-- bool -->
            <return type-id='type-id-11'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void boost::scoped_array<wchar_t>::swap(boost::scoped_array<wchar_t>&) -->
          <function-decl name='swap' mangled-name='_ZN5boost12scoped_arrayIwE4swapERS1_' filepath='src/third_party/boost-1.56.0/boost/smart_ptr/scoped_array.hpp' line='93' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'boost::scoped_array<wchar_t>*' -->
            <parameter type-id='type-id-463' is-artificial='yes'/>
            <!-- parameter of type 'boost::scoped_array<wchar_t>&' -->
            <parameter type-id='type-id-465'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
      </class-decl>
    </namespace-decl>
    <!-- std::wstring& -->
    <reference-type-def kind='lvalue' type-id='type-id-340' size-in-bits='64' id='type-id-461'/>
    <!-- void abort() -->
    <function-decl name='abort' filepath='/usr/include/stdlib.h' line='515' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int abs(int) -->
    <function-decl name='abs' filepath='/usr/include/stdlib.h' line='774' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int atexit(void ()*) -->
    <function-decl name='atexit' filepath='/usr/include/stdlib.h' line='519' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void ()*' -->
      <parameter type-id='type-id-4'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int at_quick_exit(void ()*) -->
    <function-decl name='at_quick_exit' filepath='/usr/include/stdlib.h' line='524' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void ()*' -->
      <parameter type-id='type-id-4'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- double atof(const char*) -->
    <function-decl name='atof' filepath='/usr/include/stdlib.h' line='144' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- int atoi(const char*) -->
    <function-decl name='atoi' filepath='/usr/include/stdlib.h' line='147' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- long int atol(const char*) -->
    <function-decl name='atol' filepath='/usr/include/stdlib.h' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- void* bsearch(void*, void*, size_t, size_t, __compar_fn_t) -->
    <function-decl name='bsearch' filepath='/usr/include/stdlib.h' line='754' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef __compar_fn_t' -->
      <parameter type-id='type-id-60'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- void* calloc(size_t, size_t) -->
    <function-decl name='calloc' filepath='/usr/include/stdlib.h' line='468' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- div_t div(int, int) -->
    <function-decl name='div' filepath='/usr/include/stdlib.h' line='788' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- typedef div_t -->
      <return type-id='type-id-61'/>
    </function-decl>
    <!-- void exit(int) -->
    <function-decl name='exit' filepath='/usr/include/stdlib.h' line='543' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- void free(void*) -->
    <function-decl name='free' filepath='/usr/include/stdlib.h' line='483' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- char* getenv(const char*) -->
    <function-decl name='getenv' filepath='/usr/include/stdlib.h' line='564' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- long int labs(long int) -->
    <function-decl name='labs' filepath='/usr/include/stdlib.h' line='775' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- ldiv_t ldiv(long int, long int) -->
    <function-decl name='ldiv' filepath='/usr/include/stdlib.h' line='790' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- typedef ldiv_t -->
      <return type-id='type-id-63'/>
    </function-decl>
    <!-- void* malloc(size_t) -->
    <function-decl name='malloc' filepath='/usr/include/stdlib.h' line='466' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- int mblen(const char*, size_t) -->
    <function-decl name='mblen' filepath='/usr/include/stdlib.h' line='862' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- size_t mbstowcs(wchar_t* restrict, const char* restrict, size_t) -->
    <function-decl name='mbstowcs' filepath='/usr/include/stdlib.h' line='873' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- int mbtowc(wchar_t* restrict, const char* restrict, size_t) -->
    <function-decl name='mbtowc' filepath='/usr/include/stdlib.h' line='865' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void qsort(void*, size_t, size_t, __compar_fn_t) -->
    <function-decl name='qsort' filepath='/usr/include/stdlib.h' line='764' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef __compar_fn_t' -->
      <parameter type-id='type-id-60'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- void quick_exit(int) -->
    <function-decl name='quick_exit' filepath='/usr/include/stdlib.h' line='549' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int rand() -->
    <function-decl name='rand' filepath='/usr/include/stdlib.h' line='374' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void* realloc(void*, size_t) -->
    <function-decl name='realloc' filepath='/usr/include/stdlib.h' line='480' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- void srand(unsigned int) -->
    <function-decl name='srand' filepath='/usr/include/stdlib.h' line='376' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-69'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- double strtod(const char* restrict, char** restrict) -->
    <function-decl name='strtod' filepath='/usr/include/stdlib.h' line='164' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- long int strtol(const char* restrict, char** restrict, int) -->
    <function-decl name='strtol' filepath='/usr/include/stdlib.h' line='183' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- unsigned long int strtoul(const char* restrict, char** restrict, int) -->
    <function-decl name='strtoul' filepath='/usr/include/stdlib.h' line='187' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- unsigned long int -->
      <return type-id='type-id-56'/>
    </function-decl>
    <!-- int system(const char*) -->
    <function-decl name='system' filepath='/usr/include/stdlib.h' line='716' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- size_t wcstombs(char* restrict, const wchar_t* restrict, size_t) -->
    <function-decl name='wcstombs' filepath='/usr/include/stdlib.h' line='876' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- int wctomb(char*, wchar_t) -->
    <function-decl name='wctomb' filepath='/usr/include/stdlib.h' line='869' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-40'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- namespace __gnu_cxx -->
    <namespace-decl name='__gnu_cxx'>
      <!-- lldiv_t __gnu_cxx::div(long long int, long long int) -->
      <function-decl name='div' mangled-name='_ZN9__gnu_cxx3divExx' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/cstdlib' line='214' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'long long int' -->
        <parameter type-id='type-id-76'/>
        <!-- parameter of type 'long long int' -->
        <parameter type-id='type-id-76'/>
        <!-- typedef lldiv_t -->
        <return type-id='type-id-77'/>
      </function-decl>
    </namespace-decl>
    <!-- void _Exit(int) -->
    <function-decl name='_Exit' filepath='/usr/include/stdlib.h' line='557' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- long long int llabs(long long int) -->
    <function-decl name='llabs' filepath='/usr/include/stdlib.h' line='779' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long long int' -->
      <parameter type-id='type-id-76'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- lldiv_t lldiv(long long int, long long int) -->
    <function-decl name='lldiv' filepath='/usr/include/stdlib.h' line='796' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long long int' -->
      <parameter type-id='type-id-76'/>
      <!-- parameter of type 'long long int' -->
      <parameter type-id='type-id-76'/>
      <!-- typedef lldiv_t -->
      <return type-id='type-id-77'/>
    </function-decl>
    <!-- long long int atoll(const char*) -->
    <function-decl name='atoll' filepath='/usr/include/stdlib.h' line='157' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long int strtoll(const char* restrict, char** restrict, int) -->
    <function-decl name='strtoll' filepath='/usr/include/stdlib.h' line='209' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long unsigned int strtoull(const char* restrict, char** restrict, int) -->
    <function-decl name='strtoull' filepath='/usr/include/stdlib.h' line='214' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long long unsigned int -->
      <return type-id='type-id-79'/>
    </function-decl>
    <!-- float strtof(const char* restrict, char** restrict) -->
    <function-decl name='strtof' filepath='/usr/include/stdlib.h' line='172' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double strtold(const char* restrict, char** restrict) -->
    <function-decl name='strtold' filepath='/usr/include/stdlib.h' line='175' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- wint_t btowc(int) -->
    <function-decl name='btowc' filepath='/usr/include/wchar.h' line='353' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wint_t fgetwc(__FILE*) -->
    <function-decl name='fgetwc' filepath='/usr/include/wchar.h' line='745' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wchar_t* fgetws(wchar_t* restrict, int, __FILE* restrict) -->
    <function-decl name='fgetws' filepath='/usr/include/wchar.h' line='774' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wint_t fputwc(wchar_t, __FILE*) -->
    <function-decl name='fputwc' filepath='/usr/include/wchar.h' line='759' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- int fputws(const wchar_t* restrict, __FILE* restrict) -->
    <function-decl name='fputws' filepath='/usr/include/wchar.h' line='781' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fwide(__FILE*, int) -->
    <function-decl name='fwide' filepath='/usr/include/wchar.h' line='587' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fwprintf(__FILE* restrict, const wchar_t* restrict, ...) -->
    <function-decl name='fwprintf' filepath='/usr/include/wchar.h' line='594' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fwscanf(__FILE* restrict, const wchar_t* restrict, ...) -->
    <function-decl name='fwscanf' filepath='/usr/include/wchar.h' line='635' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wint_t getwc(__FILE*) -->
    <function-decl name='getwc' filepath='/usr/include/wchar.h' line='746' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wint_t getwchar() -->
    <function-decl name='getwchar' filepath='/usr/include/wchar.h' line='752' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- size_t mbrlen(const char* restrict, size_t, mbstate_t* restrict) -->
    <function-decl name='mbrlen' filepath='/usr/include/wchar.h' line='376' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'mbstate_t* restrict' -->
      <parameter type-id='type-id-92'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- size_t mbrtowc(wchar_t* restrict, const char* restrict, size_t, mbstate_t* restrict) -->
    <function-decl name='mbrtowc' filepath='/usr/include/wchar.h' line='365' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'mbstate_t* restrict' -->
      <parameter type-id='type-id-92'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- int mbsinit(const mbstate_t*) -->
    <function-decl name='mbsinit' filepath='/usr/include/wchar.h' line='361' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const mbstate_t*' -->
      <parameter type-id='type-id-94'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- size_t mbsrtowcs(wchar_t* restrict, const char** restrict, size_t, mbstate_t* restrict) -->
    <function-decl name='mbsrtowcs' filepath='/usr/include/wchar.h' line='408' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const char** restrict' -->
      <parameter type-id='type-id-96'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'mbstate_t* restrict' -->
      <parameter type-id='type-id-92'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- wint_t putwc(wchar_t, __FILE*) -->
    <function-decl name='putwc' filepath='/usr/include/wchar.h' line='760' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wint_t putwchar(wchar_t) -->
    <function-decl name='putwchar' filepath='/usr/include/wchar.h' line='766' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- int swprintf(wchar_t* restrict, size_t, const wchar_t* restrict, ...) -->
    <function-decl name='swprintf' filepath='/usr/include/wchar.h' line='604' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int swscanf(const wchar_t* restrict, const wchar_t* restrict, ...) -->
    <function-decl name='swscanf' filepath='/usr/include/wchar.h' line='645' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wint_t ungetwc(wint_t, __FILE*) -->
    <function-decl name='ungetwc' filepath='/usr/include/wchar.h' line='789' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- int vfwprintf(__FILE* restrict, const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vfwprintf' filepath='/usr/include/wchar.h' line='612' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vfwscanf(__FILE* restrict, const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vfwscanf' filepath='/usr/include/wchar.h' line='689' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vswprintf(wchar_t* restrict, size_t, const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vswprintf' filepath='/usr/include/wchar.h' line='625' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vswscanf(const wchar_t* restrict, const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vswscanf' filepath='/usr/include/wchar.h' line='701' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vwprintf(const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vwprintf' filepath='/usr/include/wchar.h' line='620' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vwscanf(const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vwscanf' filepath='/usr/include/wchar.h' line='697' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- size_t wcrtomb(char* restrict, wchar_t, mbstate_t* restrict) -->
    <function-decl name='wcrtomb' filepath='/usr/include/wchar.h' line='370' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- parameter of type 'mbstate_t* restrict' -->
      <parameter type-id='type-id-92'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- wchar_t* wcscat(wchar_t* restrict, const wchar_t* restrict) -->
    <function-decl name='wcscat' filepath='/usr/include/wchar.h' line='155' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- int wcscmp(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcscmp' filepath='/usr/include/wchar.h' line='163' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int wcscoll(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcscoll' filepath='/usr/include/wchar.h' line='192' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wchar_t* wcscpy(wchar_t* restrict, const wchar_t* restrict) -->
    <function-decl name='wcscpy' filepath='/usr/include/wchar.h' line='147' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- size_t wcscspn(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcscspn' filepath='/usr/include/wchar.h' line='252' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- size_t wcsftime(wchar_t* restrict, size_t, const wchar_t* restrict, const tm* restrict) -->
    <function-decl name='wcsftime' filepath='/usr/include/wchar.h' line='855' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'const tm* restrict' -->
      <parameter type-id='type-id-103'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- size_t wcslen(const wchar_t*) -->
    <function-decl name='wcslen' filepath='/usr/include/wchar.h' line='287' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- wchar_t* wcsncat(wchar_t* restrict, const wchar_t* restrict, size_t) -->
    <function-decl name='wcsncat' filepath='/usr/include/wchar.h' line='158' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- int wcsncmp(const wchar_t*, const wchar_t*, size_t) -->
    <function-decl name='wcsncmp' filepath='/usr/include/wchar.h' line='166' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wchar_t* wcsncpy(wchar_t* restrict, const wchar_t* restrict, size_t) -->
    <function-decl name='wcsncpy' filepath='/usr/include/wchar.h' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- size_t wcsrtombs(char* restrict, const wchar_t** restrict, size_t, mbstate_t* restrict) -->
    <function-decl name='wcsrtombs' filepath='/usr/include/wchar.h' line='414' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const wchar_t** restrict' -->
      <parameter type-id='type-id-105'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'mbstate_t* restrict' -->
      <parameter type-id='type-id-92'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- size_t wcsspn(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcsspn' filepath='/usr/include/wchar.h' line='256' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- double wcstod(const wchar_t* restrict, wchar_t** restrict) -->
    <function-decl name='wcstod' filepath='/usr/include/wchar.h' line='450' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float wcstof(const wchar_t* restrict, wchar_t** restrict) -->
    <function-decl name='wcstof' filepath='/usr/include/wchar.h' line='457' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- wchar_t* wcstok(wchar_t* restrict, const wchar_t* restrict, wchar_t** restrict) -->
    <function-decl name='wcstok' filepath='/usr/include/wchar.h' line='282' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- long int wcstol(const wchar_t* restrict, wchar_t** restrict, int) -->
    <function-decl name='wcstol' filepath='/usr/include/wchar.h' line='468' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- unsigned long int wcstoul(const wchar_t* restrict, wchar_t** restrict, int) -->
    <function-decl name='wcstoul' filepath='/usr/include/wchar.h' line='473' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- unsigned long int -->
      <return type-id='type-id-56'/>
    </function-decl>
    <!-- size_t wcsxfrm(wchar_t* restrict, const wchar_t* restrict, size_t) -->
    <function-decl name='wcsxfrm' filepath='/usr/include/wchar.h' line='196' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- int wctob(wint_t) -->
    <function-decl name='wctob' filepath='/usr/include/wchar.h' line='357' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int wmemcmp(const wchar_t*, const wchar_t*, size_t) -->
    <function-decl name='wmemcmp' filepath='/usr/include/wchar.h' line='325' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wchar_t* wmemcpy(wchar_t* restrict, const wchar_t* restrict, size_t) -->
    <function-decl name='wmemcpy' filepath='/usr/include/wchar.h' line='329' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wmemmove(wchar_t*, const wchar_t*, size_t) -->
    <function-decl name='wmemmove' filepath='/usr/include/wchar.h' line='334' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t*' -->
      <parameter type-id='type-id-66'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wmemset(wchar_t*, wchar_t, size_t) -->
    <function-decl name='wmemset' filepath='/usr/include/wchar.h' line='338' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t*' -->
      <parameter type-id='type-id-66'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- int wprintf(const wchar_t* restrict, ...) -->
    <function-decl name='wprintf' filepath='/usr/include/wchar.h' line='601' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int wscanf(const wchar_t* restrict, ...) -->
    <function-decl name='wscanf' filepath='/usr/include/wchar.h' line='642' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wchar_t* wcschr(const wchar_t*, wchar_t) -->
    <function-decl name='wcschr' filepath='/usr/include/wchar.h' line='227' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wcspbrk(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcspbrk' filepath='/usr/include/wchar.h' line='266' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wcsrchr(const wchar_t*, wchar_t) -->
    <function-decl name='wcsrchr' filepath='/usr/include/wchar.h' line='237' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wcsstr(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcsstr' filepath='/usr/include/wchar.h' line='277' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wmemchr(const wchar_t*, wchar_t, size_t) -->
    <function-decl name='wmemchr' filepath='/usr/include/wchar.h' line='320' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- long double wcstold(const wchar_t* restrict, wchar_t** restrict) -->
    <function-decl name='wcstold' filepath='/usr/include/wchar.h' line='459' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- long long int wcstoll(const wchar_t* restrict, wchar_t** restrict, int) -->
    <function-decl name='wcstoll' filepath='/usr/include/wchar.h' line='483' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long unsigned int wcstoull(const wchar_t* restrict, wchar_t** restrict, int) -->
    <function-decl name='wcstoull' filepath='/usr/include/wchar.h' line='490' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long long unsigned int -->
      <return type-id='type-id-79'/>
    </function-decl>

    <!-- char* setlocale(int, const char*) -->
    <function-decl name='setlocale' filepath='/usr/include/locale.h' line='124' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- lconv* localeconv() -->
    <function-decl name='localeconv' filepath='/usr/include/locale.h' line='127' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- lconv* -->
      <return type-id='type-id-109'/>
    </function-decl>
    <!-- int isalnum(int) -->
    <function-decl name='isalnum' filepath='/usr/include/ctype.h' line='110' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isalpha(int) -->
    <function-decl name='isalpha' filepath='/usr/include/ctype.h' line='111' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iscntrl(int) -->
    <function-decl name='iscntrl' filepath='/usr/include/ctype.h' line='112' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isdigit(int) -->
    <function-decl name='isdigit' filepath='/usr/include/ctype.h' line='113' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isgraph(int) -->
    <function-decl name='isgraph' filepath='/usr/include/ctype.h' line='115' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int islower(int) -->
    <function-decl name='islower' filepath='/usr/include/ctype.h' line='114' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isprint(int) -->
    <function-decl name='isprint' filepath='/usr/include/ctype.h' line='116' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int ispunct(int) -->
    <function-decl name='ispunct' filepath='/usr/include/ctype.h' line='117' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isspace(int) -->
    <function-decl name='isspace' filepath='/usr/include/ctype.h' line='118' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isupper(int) -->
    <function-decl name='isupper' filepath='/usr/include/ctype.h' line='119' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isxdigit(int) -->
    <function-decl name='isxdigit' filepath='/usr/include/ctype.h' line='120' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int tolower(int) -->
    <function-decl name='tolower' filepath='/usr/include/ctype.h' line='124' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int toupper(int) -->
    <function-decl name='toupper' filepath='/usr/include/ctype.h' line='127' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isblank(int) -->
    <function-decl name='isblank' filepath='/usr/include/ctype.h' line='136' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void clearerr(FILE*) -->
    <function-decl name='clearerr' filepath='/usr/include/stdio.h' line='826' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int fclose(FILE*) -->
    <function-decl name='fclose' filepath='/usr/include/stdio.h' line='237' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int feof(FILE*) -->
    <function-decl name='feof' filepath='/usr/include/stdio.h' line='828' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int ferror(FILE*) -->
    <function-decl name='ferror' filepath='/usr/include/stdio.h' line='830' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fflush(FILE*) -->
    <function-decl name='fflush' filepath='/usr/include/stdio.h' line='242' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fgetc(FILE*) -->
    <function-decl name='fgetc' filepath='/usr/include/stdio.h' line='531' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fgetpos(FILE* restrict, fpos_t* restrict) -->
    <function-decl name='fgetpos' filepath='/usr/include/stdio.h' line='798' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'fpos_t* restrict' -->
      <parameter type-id='type-id-116'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- char* fgets(char* restrict, int, FILE* restrict) -->
    <function-decl name='fgets' filepath='/usr/include/stdio.h' line='622' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- FILE* fopen(const char* restrict, const char* restrict) -->
    <function-decl name='fopen' filepath='/usr/include/stdio.h' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- FILE* -->
      <return type-id='type-id-111'/>
    </function-decl>
    <!-- int fprintf(FILE* restrict, const char* restrict, ...) -->
    <function-decl name='fprintf' filepath='/usr/include/stdio.h' line='356' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fputc(int, FILE*) -->
    <function-decl name='fputc' filepath='/usr/include/stdio.h' line='573' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fputs(const char* restrict, FILE* restrict) -->
    <function-decl name='fputs' filepath='/usr/include/stdio.h' line='689' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- size_t fread(void* restrict, size_t, size_t, FILE* restrict) -->
    <function-decl name='fread' filepath='/usr/include/stdio.h' line='709' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void* restrict' -->
      <parameter type-id='type-id-117'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- FILE* freopen(const char* restrict, const char* restrict, FILE* restrict) -->
    <function-decl name='freopen' filepath='/usr/include/stdio.h' line='278' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- FILE* -->
      <return type-id='type-id-111'/>
    </function-decl>
    <!-- int fscanf(FILE* restrict, const char* restrict, ...) -->
    <function-decl name='fscanf' filepath='/usr/include/stdio.h' line='425' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fseek(FILE*, long int, int) -->
    <function-decl name='fseek' filepath='/usr/include/stdio.h' line='749' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fsetpos(FILE*, const fpos_t*) -->
    <function-decl name='fsetpos' filepath='/usr/include/stdio.h' line='803' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- parameter of type 'const fpos_t*' -->
      <parameter type-id='type-id-119'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- long int ftell(FILE*) -->
    <function-decl name='ftell' filepath='/usr/include/stdio.h' line='754' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- size_t fwrite(void* restrict, size_t, size_t, FILE* restrict) -->
    <function-decl name='fwrite' filepath='/usr/include/stdio.h' line='715' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void* restrict' -->
      <parameter type-id='type-id-117'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- int getc(FILE*) -->
    <function-decl name='getc' filepath='/usr/include/stdio.h' line='532' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int getchar() -->
    <function-decl name='getchar' filepath='/usr/include/stdio.h' line='538' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- char* gets(char*) -->
    <function-decl name='gets' filepath='/usr/include/stdio.h' line='638' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-40'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- void perror(const char*) -->
    <function-decl name='perror' filepath='/usr/include/stdio.h' line='846' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int printf(const char* restrict, ...) -->
    <function-decl name='printf' filepath='/usr/include/stdio.h' line='362' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int putc(int, FILE*) -->
    <function-decl name='putc' filepath='/usr/include/stdio.h' line='574' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int putchar(int) -->
    <function-decl name='putchar' filepath='/usr/include/stdio.h' line='580' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int puts(const char*) -->
    <function-decl name='puts' filepath='/usr/include/stdio.h' line='695' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int remove(const char*) -->
    <function-decl name='remove' filepath='/usr/include/stdio.h' line='178' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int rename(const char*, const char*) -->
    <function-decl name='rename' filepath='/usr/include/stdio.h' line='180' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void rewind(FILE*) -->
    <function-decl name='rewind' filepath='/usr/include/stdio.h' line='759' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int scanf(const char* restrict, ...) -->
    <function-decl name='scanf' filepath='/usr/include/stdio.h' line='431' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void setbuf(FILE* restrict, char* restrict) -->
    <function-decl name='setbuf' filepath='/usr/include/stdio.h' line='332' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int setvbuf(FILE* restrict, char* restrict, int, size_t) -->
    <function-decl name='setvbuf' filepath='/usr/include/stdio.h' line='336' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int sprintf(char* restrict, const char* restrict, ...) -->
    <function-decl name='sprintf' filepath='/usr/include/stdio.h' line='364' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int sscanf(const char* restrict, const char* restrict, ...) -->
    <function-decl name='sscanf' filepath='/usr/include/stdio.h' line='433' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- FILE* tmpfile() -->
    <function-decl name='tmpfile' filepath='/usr/include/stdio.h' line='195' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- FILE* -->
      <return type-id='type-id-111'/>
    </function-decl>
    <!-- char* tmpnam(char*) -->
    <function-decl name='tmpnam' filepath='/usr/include/stdio.h' line='209' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-40'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- int ungetc(int, FILE*) -->
    <function-decl name='ungetc' filepath='/usr/include/stdio.h' line='702' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vfprintf(FILE* restrict, const char* restrict, __va_list_tag*) -->
    <function-decl name='vfprintf' filepath='/usr/include/stdio.h' line='371' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vprintf(const char* restrict, __va_list_tag*) -->
    <function-decl name='vprintf' filepath='/usr/include/stdio.h' line='377' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vsprintf(char* restrict, const char* restrict, __va_list_tag*) -->
    <function-decl name='vsprintf' filepath='/usr/include/stdio.h' line='379' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int snprintf(char* restrict, size_t, const char* restrict, ...) -->
    <function-decl name='snprintf' filepath='/usr/include/stdio.h' line='386' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vfscanf(FILE* restrict, const char* restrict, __va_list_tag*) -->
    <function-decl name='vfscanf' filepath='/usr/include/stdio.h' line='471' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vscanf(const char* restrict, __va_list_tag*) -->
    <function-decl name='vscanf' filepath='/usr/include/stdio.h' line='479' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vsnprintf(char* restrict, size_t, const char* restrict, __va_list_tag*) -->
    <function-decl name='vsnprintf' filepath='/usr/include/stdio.h' line='390' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vsscanf(const char* restrict, const char* restrict, __va_list_tag*) -->
    <function-decl name='vsscanf' filepath='/usr/include/stdio.h' line='483' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswalnum(wint_t) -->
    <function-decl name='iswalnum' filepath='/usr/include/wctype.h' line='111' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswalpha(wint_t) -->
    <function-decl name='iswalpha' filepath='/usr/include/wctype.h' line='117' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswblank(wint_t) -->
    <function-decl name='iswblank' filepath='/usr/include/wctype.h' line='162' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswcntrl(wint_t) -->
    <function-decl name='iswcntrl' filepath='/usr/include/wctype.h' line='120' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswctype(wint_t, wctype_t) -->
    <function-decl name='iswctype' filepath='/usr/include/wctype.h' line='175' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- parameter of type 'typedef wctype_t' -->
      <parameter type-id='type-id-120'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswdigit(wint_t) -->
    <function-decl name='iswdigit' filepath='/usr/include/wctype.h' line='124' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswgraph(wint_t) -->
    <function-decl name='iswgraph' filepath='/usr/include/wctype.h' line='128' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswlower(wint_t) -->
    <function-decl name='iswlower' filepath='/usr/include/wctype.h' line='133' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswprint(wint_t) -->
    <function-decl name='iswprint' filepath='/usr/include/wctype.h' line='136' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswpunct(wint_t) -->
    <function-decl name='iswpunct' filepath='/usr/include/wctype.h' line='141' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswspace(wint_t) -->
    <function-decl name='iswspace' filepath='/usr/include/wctype.h' line='146' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswupper(wint_t) -->
    <function-decl name='iswupper' filepath='/usr/include/wctype.h' line='151' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswxdigit(wint_t) -->
    <function-decl name='iswxdigit' filepath='/usr/include/wctype.h' line='156' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wint_t towctrans(wint_t, wctrans_t) -->
    <function-decl name='towctrans' filepath='/usr/include/wctype.h' line='221' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- parameter of type 'typedef wctrans_t' -->
      <parameter type-id='type-id-124'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wint_t towlower(wint_t) -->
    <function-decl name='towlower' filepath='/usr/include/wctype.h' line='194' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wint_t towupper(wint_t) -->
    <function-decl name='towupper' filepath='/usr/include/wctype.h' line='197' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wctrans_t wctrans(const char*) -->
    <function-decl name='wctrans' filepath='/usr/include/wctype.h' line='218' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- typedef wctrans_t -->
      <return type-id='type-id-124'/>
    </function-decl>
    <!-- wctype_t wctype(const char*) -->
    <function-decl name='wctype' filepath='/usr/include/wctype.h' line='171' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- typedef wctype_t -->
      <return type-id='type-id-120'/>
    </function-decl>
    <!-- clock_t clock() -->
    <function-decl name='clock' filepath='/usr/include/time.h' line='189' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- typedef clock_t -->
      <return type-id='type-id-126'/>
    </function-decl>
    <!-- double difftime(time_t, time_t) -->
    <function-decl name='difftime' filepath='/usr/include/time.h' line='195' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef time_t' -->
      <parameter type-id='type-id-128'/>
      <!-- parameter of type 'typedef time_t' -->
      <parameter type-id='type-id-128'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- time_t mktime(tm*) -->
    <function-decl name='mktime' filepath='/usr/include/time.h' line='199' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'tm*' -->
      <parameter type-id='type-id-129'/>
      <!-- typedef time_t -->
      <return type-id='type-id-128'/>
    </function-decl>
    <!-- time_t time(time_t*) -->
    <function-decl name='time' filepath='/usr/include/time.h' line='192' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'time_t*' -->
      <parameter type-id='type-id-130'/>
      <!-- typedef time_t -->
      <return type-id='type-id-128'/>
    </function-decl>
    <!-- char* asctime(const tm*) -->
    <function-decl name='asctime' filepath='/usr/include/time.h' line='261' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const tm*' -->
      <parameter type-id='type-id-102'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- char* ctime(const time_t*) -->
    <function-decl name='ctime' filepath='/usr/include/time.h' line='264' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const time_t*' -->
      <parameter type-id='type-id-132'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- tm* gmtime(const time_t*) -->
    <function-decl name='gmtime' filepath='/usr/include/time.h' line='239' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const time_t*' -->
      <parameter type-id='type-id-132'/>
      <!-- tm* -->
      <return type-id='type-id-129'/>
    </function-decl>
    <!-- tm* localtime(const time_t*) -->
    <function-decl name='localtime' filepath='/usr/include/time.h' line='243' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const time_t*' -->
      <parameter type-id='type-id-132'/>
      <!-- tm* -->
      <return type-id='type-id-129'/>
    </function-decl>
    <!-- size_t strftime(char* restrict, size_t, const char* restrict, const tm* restrict) -->
    <function-decl name='strftime' filepath='/usr/include/time.h' line='205' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'const tm* restrict' -->
      <parameter type-id='type-id-103'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- void* memchr(void*, int, size_t) -->
    <function-decl name='memchr' filepath='/usr/include/string.h' line='78' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- int memcmp(void*, void*, size_t) -->
    <function-decl name='memcmp' filepath='/usr/include/string.h' line='69' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void* memcpy(void* restrict, void* restrict, size_t) -->
    <function-decl name='memcpy' filepath='/usr/include/string.h' line='46' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void* restrict' -->
      <parameter type-id='type-id-117'/>
      <!-- parameter of type 'void* restrict' -->
      <parameter type-id='type-id-117'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- void* memmove(void*, void*, size_t) -->
    <function-decl name='memmove' filepath='/usr/include/string.h' line='50' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- void* memset(void*, int, size_t) -->
    <function-decl name='memset' filepath='/usr/include/string.h' line='66' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- char* strcat(char* restrict, const char* restrict) -->
    <function-decl name='strcat' filepath='/usr/include/string.h' line='137' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- int strcmp(const char*, const char*) -->
    <function-decl name='strcmp' filepath='/usr/include/string.h' line='144' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int strcoll(const char*, const char*) -->
    <function-decl name='strcoll' filepath='/usr/include/string.h' line='151' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- char* strcpy(char* restrict, const char* restrict) -->
    <function-decl name='strcpy' filepath='/usr/include/string.h' line='129' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- size_t strcspn(const char*, const char*) -->
    <function-decl name='strcspn' filepath='/usr/include/string.h' line='284' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- char* strerror(int) -->
    <function-decl name='strerror' filepath='/usr/include/string.h' line='412' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- size_t strlen(const char*) -->
    <function-decl name='strlen' filepath='/usr/include/string.h' line='398' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- char* strncat(char* restrict, const char* restrict, size_t) -->
    <function-decl name='strncat' filepath='/usr/include/string.h' line='140' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- int strncmp(const char*, const char*, size_t) -->
    <function-decl name='strncmp' filepath='/usr/include/string.h' line='147' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- char* strncpy(char* restrict, const char* restrict, size_t) -->
    <function-decl name='strncpy' filepath='/usr/include/string.h' line='132' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- size_t strspn(const char*, const char*) -->
    <function-decl name='strspn' filepath='/usr/include/string.h' line='288' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- char* strtok(char* restrict, const char* restrict) -->
    <function-decl name='strtok' filepath='/usr/include/string.h' line='347' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- size_t strxfrm(char* restrict, const char* restrict, size_t) -->
    <function-decl name='strxfrm' filepath='/usr/include/string.h' line='154' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- const char* strchr(const char*, int) -->
    <function-decl name='strchr' filepath='/usr/include/string.h' line='217' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- const char* -->
      <return type-id='type-id-15'/>
    </function-decl>
    <!-- const char* strpbrk(const char*, const char*) -->
    <function-decl name='strpbrk' filepath='/usr/include/string.h' line='296' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- const char* -->
      <return type-id='type-id-15'/>
    </function-decl>
    <!-- const char* strrchr(const char*, int) -->
    <function-decl name='strrchr' filepath='/usr/include/string.h' line='244' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- const char* -->
      <return type-id='type-id-15'/>
    </function-decl>
    <!-- const char* strstr(const char*, const char*) -->
    <function-decl name='strstr' filepath='/usr/include/string.h' line='323' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- const char* -->
      <return type-id='type-id-15'/>
    </function-decl>
    <!-- boost::scoped_array<wchar_t>* -->
    <pointer-type-def type-id='type-id-462' size-in-bits='64' id='type-id-463'/>
    <!-- const boost::scoped_array<wchar_t> -->
    <qualified-type-def type-id='type-id-462' const='yes' id='type-id-468'/>
    <!-- const boost::scoped_array<wchar_t>& -->
    <reference-type-def kind='lvalue' type-id='type-id-468' size-in-bits='64' id='type-id-464'/>
    <!-- boost::scoped_array<wchar_t>& -->
    <reference-type-def kind='lvalue' type-id='type-id-462' size-in-bits='64' id='type-id-465'/>
    <!-- const boost::scoped_array<wchar_t>* -->
    <pointer-type-def type-id='type-id-468' size-in-bits='64' id='type-id-466'/>
    <!-- wchar_t& -->
    <reference-type-def kind='lvalue' type-id='type-id-65' size-in-bits='64' id='type-id-467'/>
    <!-- const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t> -->
    <qualified-type-def type-id='type-id-443' const='yes' id='type-id-469'/>
    <!-- const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>* -->
    <pointer-type-def type-id='type-id-469' size-in-bits='64' id='type-id-450'/>
    <!-- struct __anonymous_struct__ -->
    <class-decl name='__anonymous_struct__' size-in-bits='64' is-struct='yes' is-anonymous='yes' naming-typedef-id='type-id-446' visibility='default' filepath='/usr/include/wchar.h' line='82' column='1' id='type-id-447'>
      <member-type access='public'>
        <!-- union __anonymous_struct__::__anonymous_union__ -->
        <union-decl name='__anonymous_union__' size-in-bits='32' is-anonymous='yes' visibility='default' filepath='/usr/include/wchar.h' line='85' column='1' id='type-id-88'>
          <data-member access='private'>
            <!-- unsigned int __anonymous_struct__::__anonymous_union__::__wch -->
            <var-decl name='__wch' type-id='type-id-69' visibility='default' filepath='/usr/include/wchar.h' line='88' column='1'/>
          </data-member>
          <data-member access='private'>
            <!-- char __anonymous_struct__::__anonymous_union__::__wchb[4] -->
            <var-decl name='__wchb' type-id='type-id-89' visibility='default' filepath='/usr/include/wchar.h' line='92' column='1'/>
          </data-member>
        </union-decl>
      </member-type>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- int __anonymous_struct__::__count -->
        <var-decl name='__count' type-id='type-id-5' visibility='default' filepath='/usr/include/wchar.h' line='84' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- __anonymous_struct__::__anonymous_union__ __anonymous_struct__::__value -->
        <var-decl name='__value' type-id='type-id-88' visibility='default' filepath='/usr/include/wchar.h' line='93' column='1'/>
      </data-member>
    </class-decl>
    <!-- std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::state_type& -->
    <reference-type-def kind='lvalue' type-id='type-id-446' size-in-bits='64' id='type-id-451'/>
    <!-- const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type -->
    <qualified-type-def type-id='type-id-448' const='yes' id='type-id-470'/>
    <!-- const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type* -->
    <pointer-type-def type-id='type-id-470' size-in-bits='64' id='type-id-452'/>
    <!-- const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type*& -->
    <reference-type-def kind='lvalue' type-id='type-id-452' size-in-bits='64' id='type-id-453'/>
    <!-- std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type* -->
    <pointer-type-def type-id='type-id-449' size-in-bits='64' id='type-id-454'/>
    <!-- std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type*& -->
    <reference-type-def kind='lvalue' type-id='type-id-454' size-in-bits='64' id='type-id-455'/>
    <!-- const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type -->
    <qualified-type-def type-id='type-id-449' const='yes' id='type-id-471'/>
    <!-- const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type* -->
    <pointer-type-def type-id='type-id-471' size-in-bits='64' id='type-id-456'/>
    <!-- const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type*& -->
    <reference-type-def kind='lvalue' type-id='type-id-456' size-in-bits='64' id='type-id-457'/>
    <!-- std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type* -->
    <pointer-type-def type-id='type-id-448' size-in-bits='64' id='type-id-458'/>
    <!-- std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type*& -->
    <reference-type-def kind='lvalue' type-id='type-id-458' size-in-bits='64' id='type-id-459'/>
  </abi-instr>
  <abi-instr version='1.0' address-size='64' path='src/third_party/boost-1.56.0/libs/filesystem/src/portability.cpp' language='LANG_C_plus_plus'>

    <!-- namespace std -->
    <namespace-decl name='std'>


      <!-- bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const char*) -->
      <function-decl name='operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;' mangled-name='_ZSteqIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_EPKS3_' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='2538' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZSteqIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_EPKS3_'>
        <!-- parameter of type 'const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&' -->
        <parameter type-id='type-id-165' name='__lhs' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='2538' column='1'/>
        <!-- parameter of type 'const char*' -->
        <parameter type-id='type-id-15' name='__rhs' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='2539' column='1'/>
        <!-- bool -->
        <return type-id='type-id-11'/>
      </function-decl>
      <!-- bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const char*) -->
      <function-decl name='operator!=&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;' mangled-name='_ZStneIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_EPKS3_' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='2575' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZStneIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_EPKS3_'>
        <!-- parameter of type 'const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&' -->
        <parameter type-id='type-id-165' name='__lhs' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='2538' column='1'/>
        <!-- parameter of type 'const char*' -->
        <parameter type-id='type-id-15' name='__rhs' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h' line='2539' column='1'/>
        <!-- bool -->
        <return type-id='type-id-11'/>
      </function-decl>
    </namespace-decl>
    <!-- namespace __gnu_cxx -->
    <namespace-decl name='__gnu_cxx'>
      <!-- lldiv_t __gnu_cxx::div(long long int, long long int) -->
      <function-decl name='div' mangled-name='_ZN9__gnu_cxx3divExx' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/cstdlib' line='214' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'long long int' -->
        <parameter type-id='type-id-76'/>
        <!-- parameter of type 'long long int' -->
        <parameter type-id='type-id-76'/>
        <!-- typedef lldiv_t -->
        <return type-id='type-id-77'/>
      </function-decl>
    </namespace-decl>

    <!-- namespace boost -->
    <namespace-decl name='boost'>



      <!-- namespace boost::filesystem -->
      <namespace-decl name='filesystem'>
        <!-- bool boost::filesystem::native(const std::string&) -->
        <function-decl name='native' mangled-name='_ZN5boost10filesystem6nativeERKSs' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/portability.cpp' line='61' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6nativeERKSs'>
          <!-- parameter of type 'const std::string&' -->
          <parameter type-id='type-id-169' name='name' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/portability.cpp' line='61' column='1'/>
          <!-- bool -->
          <return type-id='type-id-11'/>
        </function-decl>
        <!-- bool boost::filesystem::portable_posix_name(const std::string&) -->
        <function-decl name='portable_posix_name' mangled-name='_ZN5boost10filesystem19portable_posix_nameERKSs' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/portability.cpp' line='69' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem19portable_posix_nameERKSs'>
          <!-- parameter of type 'const std::string&' -->
          <parameter type-id='type-id-169' name='name' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/portability.cpp' line='61' column='1'/>
          <!-- bool -->
          <return type-id='type-id-11'/>
        </function-decl>
        <!-- bool boost::filesystem::windows_name(const std::string&) -->
        <function-decl name='windows_name' mangled-name='_ZN5boost10filesystem12windows_nameERKSs' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/portability.cpp' line='75' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem12windows_nameERKSs'>
          <!-- parameter of type 'const std::string&' -->
          <parameter type-id='type-id-169' name='name' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/portability.cpp' line='61' column='1'/>
          <!-- bool -->
          <return type-id='type-id-11'/>
        </function-decl>
        <!-- bool boost::filesystem::portable_name(const std::string&) -->
        <function-decl name='portable_name' mangled-name='_ZN5boost10filesystem13portable_nameERKSs' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/portability.cpp' line='85' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem13portable_nameERKSs'>
          <!-- parameter of type 'const std::string&' -->
          <parameter type-id='type-id-169' name='name' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/portability.cpp' line='61' column='1'/>
          <!-- bool -->
          <return type-id='type-id-11'/>
        </function-decl>
        <!-- bool boost::filesystem::portable_directory_name(const std::string&) -->
        <function-decl name='portable_directory_name' mangled-name='_ZN5boost10filesystem23portable_directory_nameERKSs' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/portability.cpp' line='96' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem23portable_directory_nameERKSs'>
          <!-- parameter of type 'const std::string&' -->
          <parameter type-id='type-id-169' name='name' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/portability.cpp' line='61' column='1'/>
          <!-- bool -->
          <return type-id='type-id-11'/>
        </function-decl>
        <!-- bool boost::filesystem::portable_file_name(const std::string&) -->
        <function-decl name='portable_file_name' mangled-name='_ZN5boost10filesystem18portable_file_nameERKSs' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/portability.cpp' line='105' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem18portable_file_nameERKSs'>
          <!-- parameter of type 'const std::string&' -->
          <parameter type-id='type-id-169' name='name' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/portability.cpp' line='61' column='1'/>
          <!-- bool -->
          <return type-id='type-id-11'/>
        </function-decl>
      </namespace-decl>
    </namespace-decl>
    <!-- void abort() -->
    <function-decl name='abort' filepath='/usr/include/stdlib.h' line='515' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int abs(int) -->
    <function-decl name='abs' filepath='/usr/include/stdlib.h' line='774' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int atexit(void ()*) -->
    <function-decl name='atexit' filepath='/usr/include/stdlib.h' line='519' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void ()*' -->
      <parameter type-id='type-id-4'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int at_quick_exit(void ()*) -->
    <function-decl name='at_quick_exit' filepath='/usr/include/stdlib.h' line='524' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void ()*' -->
      <parameter type-id='type-id-4'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- double atof(const char*) -->
    <function-decl name='atof' filepath='/usr/include/stdlib.h' line='144' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- int atoi(const char*) -->
    <function-decl name='atoi' filepath='/usr/include/stdlib.h' line='147' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- long int atol(const char*) -->
    <function-decl name='atol' filepath='/usr/include/stdlib.h' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- void* bsearch(void*, void*, size_t, size_t, __compar_fn_t) -->
    <function-decl name='bsearch' filepath='/usr/include/stdlib.h' line='754' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef __compar_fn_t' -->
      <parameter type-id='type-id-60'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- void* calloc(size_t, size_t) -->
    <function-decl name='calloc' filepath='/usr/include/stdlib.h' line='468' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- div_t div(int, int) -->
    <function-decl name='div' filepath='/usr/include/stdlib.h' line='788' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- typedef div_t -->
      <return type-id='type-id-61'/>
    </function-decl>
    <!-- void exit(int) -->
    <function-decl name='exit' filepath='/usr/include/stdlib.h' line='543' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- void free(void*) -->
    <function-decl name='free' filepath='/usr/include/stdlib.h' line='483' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- char* getenv(const char*) -->
    <function-decl name='getenv' filepath='/usr/include/stdlib.h' line='564' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- long int labs(long int) -->
    <function-decl name='labs' filepath='/usr/include/stdlib.h' line='775' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- ldiv_t ldiv(long int, long int) -->
    <function-decl name='ldiv' filepath='/usr/include/stdlib.h' line='790' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- typedef ldiv_t -->
      <return type-id='type-id-63'/>
    </function-decl>
    <!-- void* malloc(size_t) -->
    <function-decl name='malloc' filepath='/usr/include/stdlib.h' line='466' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- int mblen(const char*, size_t) -->
    <function-decl name='mblen' filepath='/usr/include/stdlib.h' line='862' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- size_t mbstowcs(wchar_t* restrict, const char* restrict, size_t) -->
    <function-decl name='mbstowcs' filepath='/usr/include/stdlib.h' line='873' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- int mbtowc(wchar_t* restrict, const char* restrict, size_t) -->
    <function-decl name='mbtowc' filepath='/usr/include/stdlib.h' line='865' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void qsort(void*, size_t, size_t, __compar_fn_t) -->
    <function-decl name='qsort' filepath='/usr/include/stdlib.h' line='764' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef __compar_fn_t' -->
      <parameter type-id='type-id-60'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- void quick_exit(int) -->
    <function-decl name='quick_exit' filepath='/usr/include/stdlib.h' line='549' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int rand() -->
    <function-decl name='rand' filepath='/usr/include/stdlib.h' line='374' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void* realloc(void*, size_t) -->
    <function-decl name='realloc' filepath='/usr/include/stdlib.h' line='480' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- void srand(unsigned int) -->
    <function-decl name='srand' filepath='/usr/include/stdlib.h' line='376' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-69'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- double strtod(const char* restrict, char** restrict) -->
    <function-decl name='strtod' filepath='/usr/include/stdlib.h' line='164' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- long int strtol(const char* restrict, char** restrict, int) -->
    <function-decl name='strtol' filepath='/usr/include/stdlib.h' line='183' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- unsigned long int strtoul(const char* restrict, char** restrict, int) -->
    <function-decl name='strtoul' filepath='/usr/include/stdlib.h' line='187' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- unsigned long int -->
      <return type-id='type-id-56'/>
    </function-decl>
    <!-- int system(const char*) -->
    <function-decl name='system' filepath='/usr/include/stdlib.h' line='716' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- size_t wcstombs(char* restrict, const wchar_t* restrict, size_t) -->
    <function-decl name='wcstombs' filepath='/usr/include/stdlib.h' line='876' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- int wctomb(char*, wchar_t) -->
    <function-decl name='wctomb' filepath='/usr/include/stdlib.h' line='869' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-40'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void _Exit(int) -->
    <function-decl name='_Exit' filepath='/usr/include/stdlib.h' line='557' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- long long int llabs(long long int) -->
    <function-decl name='llabs' filepath='/usr/include/stdlib.h' line='779' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long long int' -->
      <parameter type-id='type-id-76'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- lldiv_t lldiv(long long int, long long int) -->
    <function-decl name='lldiv' filepath='/usr/include/stdlib.h' line='796' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long long int' -->
      <parameter type-id='type-id-76'/>
      <!-- parameter of type 'long long int' -->
      <parameter type-id='type-id-76'/>
      <!-- typedef lldiv_t -->
      <return type-id='type-id-77'/>
    </function-decl>
    <!-- long long int atoll(const char*) -->
    <function-decl name='atoll' filepath='/usr/include/stdlib.h' line='157' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long int strtoll(const char* restrict, char** restrict, int) -->
    <function-decl name='strtoll' filepath='/usr/include/stdlib.h' line='209' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long unsigned int strtoull(const char* restrict, char** restrict, int) -->
    <function-decl name='strtoull' filepath='/usr/include/stdlib.h' line='214' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long long unsigned int -->
      <return type-id='type-id-79'/>
    </function-decl>
    <!-- float strtof(const char* restrict, char** restrict) -->
    <function-decl name='strtof' filepath='/usr/include/stdlib.h' line='172' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double strtold(const char* restrict, char** restrict) -->
    <function-decl name='strtold' filepath='/usr/include/stdlib.h' line='175' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- wint_t btowc(int) -->
    <function-decl name='btowc' filepath='/usr/include/wchar.h' line='353' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wint_t fgetwc(__FILE*) -->
    <function-decl name='fgetwc' filepath='/usr/include/wchar.h' line='745' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wchar_t* fgetws(wchar_t* restrict, int, __FILE* restrict) -->
    <function-decl name='fgetws' filepath='/usr/include/wchar.h' line='774' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wint_t fputwc(wchar_t, __FILE*) -->
    <function-decl name='fputwc' filepath='/usr/include/wchar.h' line='759' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- int fputws(const wchar_t* restrict, __FILE* restrict) -->
    <function-decl name='fputws' filepath='/usr/include/wchar.h' line='781' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fwide(__FILE*, int) -->
    <function-decl name='fwide' filepath='/usr/include/wchar.h' line='587' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fwprintf(__FILE* restrict, const wchar_t* restrict, ...) -->
    <function-decl name='fwprintf' filepath='/usr/include/wchar.h' line='594' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fwscanf(__FILE* restrict, const wchar_t* restrict, ...) -->
    <function-decl name='fwscanf' filepath='/usr/include/wchar.h' line='635' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wint_t getwc(__FILE*) -->
    <function-decl name='getwc' filepath='/usr/include/wchar.h' line='746' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wint_t getwchar() -->
    <function-decl name='getwchar' filepath='/usr/include/wchar.h' line='752' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- size_t mbrlen(const char* restrict, size_t, mbstate_t* restrict) -->
    <function-decl name='mbrlen' filepath='/usr/include/wchar.h' line='376' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'mbstate_t* restrict' -->
      <parameter type-id='type-id-92'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- size_t mbrtowc(wchar_t* restrict, const char* restrict, size_t, mbstate_t* restrict) -->
    <function-decl name='mbrtowc' filepath='/usr/include/wchar.h' line='365' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'mbstate_t* restrict' -->
      <parameter type-id='type-id-92'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- int mbsinit(const mbstate_t*) -->
    <function-decl name='mbsinit' filepath='/usr/include/wchar.h' line='361' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const mbstate_t*' -->
      <parameter type-id='type-id-94'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- size_t mbsrtowcs(wchar_t* restrict, const char** restrict, size_t, mbstate_t* restrict) -->
    <function-decl name='mbsrtowcs' filepath='/usr/include/wchar.h' line='408' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const char** restrict' -->
      <parameter type-id='type-id-96'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'mbstate_t* restrict' -->
      <parameter type-id='type-id-92'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- wint_t putwc(wchar_t, __FILE*) -->
    <function-decl name='putwc' filepath='/usr/include/wchar.h' line='760' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wint_t putwchar(wchar_t) -->
    <function-decl name='putwchar' filepath='/usr/include/wchar.h' line='766' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- int swprintf(wchar_t* restrict, size_t, const wchar_t* restrict, ...) -->
    <function-decl name='swprintf' filepath='/usr/include/wchar.h' line='604' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int swscanf(const wchar_t* restrict, const wchar_t* restrict, ...) -->
    <function-decl name='swscanf' filepath='/usr/include/wchar.h' line='645' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wint_t ungetwc(wint_t, __FILE*) -->
    <function-decl name='ungetwc' filepath='/usr/include/wchar.h' line='789' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- int vfwprintf(__FILE* restrict, const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vfwprintf' filepath='/usr/include/wchar.h' line='612' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vfwscanf(__FILE* restrict, const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vfwscanf' filepath='/usr/include/wchar.h' line='689' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vswprintf(wchar_t* restrict, size_t, const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vswprintf' filepath='/usr/include/wchar.h' line='625' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vswscanf(const wchar_t* restrict, const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vswscanf' filepath='/usr/include/wchar.h' line='701' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vwprintf(const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vwprintf' filepath='/usr/include/wchar.h' line='620' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vwscanf(const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vwscanf' filepath='/usr/include/wchar.h' line='697' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- size_t wcrtomb(char* restrict, wchar_t, mbstate_t* restrict) -->
    <function-decl name='wcrtomb' filepath='/usr/include/wchar.h' line='370' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- parameter of type 'mbstate_t* restrict' -->
      <parameter type-id='type-id-92'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- wchar_t* wcscat(wchar_t* restrict, const wchar_t* restrict) -->
    <function-decl name='wcscat' filepath='/usr/include/wchar.h' line='155' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- int wcscmp(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcscmp' filepath='/usr/include/wchar.h' line='163' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int wcscoll(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcscoll' filepath='/usr/include/wchar.h' line='192' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wchar_t* wcscpy(wchar_t* restrict, const wchar_t* restrict) -->
    <function-decl name='wcscpy' filepath='/usr/include/wchar.h' line='147' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- size_t wcscspn(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcscspn' filepath='/usr/include/wchar.h' line='252' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- size_t wcsftime(wchar_t* restrict, size_t, const wchar_t* restrict, const tm* restrict) -->
    <function-decl name='wcsftime' filepath='/usr/include/wchar.h' line='855' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'const tm* restrict' -->
      <parameter type-id='type-id-103'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- size_t wcslen(const wchar_t*) -->
    <function-decl name='wcslen' filepath='/usr/include/wchar.h' line='287' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- wchar_t* wcsncat(wchar_t* restrict, const wchar_t* restrict, size_t) -->
    <function-decl name='wcsncat' filepath='/usr/include/wchar.h' line='158' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- int wcsncmp(const wchar_t*, const wchar_t*, size_t) -->
    <function-decl name='wcsncmp' filepath='/usr/include/wchar.h' line='166' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wchar_t* wcsncpy(wchar_t* restrict, const wchar_t* restrict, size_t) -->
    <function-decl name='wcsncpy' filepath='/usr/include/wchar.h' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- size_t wcsrtombs(char* restrict, const wchar_t** restrict, size_t, mbstate_t* restrict) -->
    <function-decl name='wcsrtombs' filepath='/usr/include/wchar.h' line='414' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const wchar_t** restrict' -->
      <parameter type-id='type-id-105'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'mbstate_t* restrict' -->
      <parameter type-id='type-id-92'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- size_t wcsspn(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcsspn' filepath='/usr/include/wchar.h' line='256' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- double wcstod(const wchar_t* restrict, wchar_t** restrict) -->
    <function-decl name='wcstod' filepath='/usr/include/wchar.h' line='450' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float wcstof(const wchar_t* restrict, wchar_t** restrict) -->
    <function-decl name='wcstof' filepath='/usr/include/wchar.h' line='457' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- wchar_t* wcstok(wchar_t* restrict, const wchar_t* restrict, wchar_t** restrict) -->
    <function-decl name='wcstok' filepath='/usr/include/wchar.h' line='282' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- long int wcstol(const wchar_t* restrict, wchar_t** restrict, int) -->
    <function-decl name='wcstol' filepath='/usr/include/wchar.h' line='468' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- unsigned long int wcstoul(const wchar_t* restrict, wchar_t** restrict, int) -->
    <function-decl name='wcstoul' filepath='/usr/include/wchar.h' line='473' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- unsigned long int -->
      <return type-id='type-id-56'/>
    </function-decl>
    <!-- size_t wcsxfrm(wchar_t* restrict, const wchar_t* restrict, size_t) -->
    <function-decl name='wcsxfrm' filepath='/usr/include/wchar.h' line='196' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- int wctob(wint_t) -->
    <function-decl name='wctob' filepath='/usr/include/wchar.h' line='357' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int wmemcmp(const wchar_t*, const wchar_t*, size_t) -->
    <function-decl name='wmemcmp' filepath='/usr/include/wchar.h' line='325' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wchar_t* wmemcpy(wchar_t* restrict, const wchar_t* restrict, size_t) -->
    <function-decl name='wmemcpy' filepath='/usr/include/wchar.h' line='329' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wmemmove(wchar_t*, const wchar_t*, size_t) -->
    <function-decl name='wmemmove' filepath='/usr/include/wchar.h' line='334' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t*' -->
      <parameter type-id='type-id-66'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wmemset(wchar_t*, wchar_t, size_t) -->
    <function-decl name='wmemset' filepath='/usr/include/wchar.h' line='338' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t*' -->
      <parameter type-id='type-id-66'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- int wprintf(const wchar_t* restrict, ...) -->
    <function-decl name='wprintf' filepath='/usr/include/wchar.h' line='601' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int wscanf(const wchar_t* restrict, ...) -->
    <function-decl name='wscanf' filepath='/usr/include/wchar.h' line='642' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wchar_t* wcschr(const wchar_t*, wchar_t) -->
    <function-decl name='wcschr' filepath='/usr/include/wchar.h' line='227' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wcspbrk(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcspbrk' filepath='/usr/include/wchar.h' line='266' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wcsrchr(const wchar_t*, wchar_t) -->
    <function-decl name='wcsrchr' filepath='/usr/include/wchar.h' line='237' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wcsstr(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcsstr' filepath='/usr/include/wchar.h' line='277' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wmemchr(const wchar_t*, wchar_t, size_t) -->
    <function-decl name='wmemchr' filepath='/usr/include/wchar.h' line='320' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- long double wcstold(const wchar_t* restrict, wchar_t** restrict) -->
    <function-decl name='wcstold' filepath='/usr/include/wchar.h' line='459' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- long long int wcstoll(const wchar_t* restrict, wchar_t** restrict, int) -->
    <function-decl name='wcstoll' filepath='/usr/include/wchar.h' line='483' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long unsigned int wcstoull(const wchar_t* restrict, wchar_t** restrict, int) -->
    <function-decl name='wcstoull' filepath='/usr/include/wchar.h' line='490' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long long unsigned int -->
      <return type-id='type-id-79'/>
    </function-decl>

    <!-- char* setlocale(int, const char*) -->
    <function-decl name='setlocale' filepath='/usr/include/locale.h' line='124' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- lconv* localeconv() -->
    <function-decl name='localeconv' filepath='/usr/include/locale.h' line='127' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- lconv* -->
      <return type-id='type-id-109'/>
    </function-decl>
    <!-- int isalnum(int) -->
    <function-decl name='isalnum' filepath='/usr/include/ctype.h' line='110' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isalpha(int) -->
    <function-decl name='isalpha' filepath='/usr/include/ctype.h' line='111' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iscntrl(int) -->
    <function-decl name='iscntrl' filepath='/usr/include/ctype.h' line='112' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isdigit(int) -->
    <function-decl name='isdigit' filepath='/usr/include/ctype.h' line='113' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isgraph(int) -->
    <function-decl name='isgraph' filepath='/usr/include/ctype.h' line='115' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int islower(int) -->
    <function-decl name='islower' filepath='/usr/include/ctype.h' line='114' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isprint(int) -->
    <function-decl name='isprint' filepath='/usr/include/ctype.h' line='116' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int ispunct(int) -->
    <function-decl name='ispunct' filepath='/usr/include/ctype.h' line='117' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isspace(int) -->
    <function-decl name='isspace' filepath='/usr/include/ctype.h' line='118' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isupper(int) -->
    <function-decl name='isupper' filepath='/usr/include/ctype.h' line='119' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isxdigit(int) -->
    <function-decl name='isxdigit' filepath='/usr/include/ctype.h' line='120' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int tolower(int) -->
    <function-decl name='tolower' filepath='/usr/include/ctype.h' line='124' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int toupper(int) -->
    <function-decl name='toupper' filepath='/usr/include/ctype.h' line='127' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isblank(int) -->
    <function-decl name='isblank' filepath='/usr/include/ctype.h' line='136' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void clearerr(FILE*) -->
    <function-decl name='clearerr' filepath='/usr/include/stdio.h' line='826' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int fclose(FILE*) -->
    <function-decl name='fclose' filepath='/usr/include/stdio.h' line='237' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int feof(FILE*) -->
    <function-decl name='feof' filepath='/usr/include/stdio.h' line='828' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int ferror(FILE*) -->
    <function-decl name='ferror' filepath='/usr/include/stdio.h' line='830' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fflush(FILE*) -->
    <function-decl name='fflush' filepath='/usr/include/stdio.h' line='242' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fgetc(FILE*) -->
    <function-decl name='fgetc' filepath='/usr/include/stdio.h' line='531' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fgetpos(FILE* restrict, fpos_t* restrict) -->
    <function-decl name='fgetpos' filepath='/usr/include/stdio.h' line='798' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'fpos_t* restrict' -->
      <parameter type-id='type-id-116'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- char* fgets(char* restrict, int, FILE* restrict) -->
    <function-decl name='fgets' filepath='/usr/include/stdio.h' line='622' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- FILE* fopen(const char* restrict, const char* restrict) -->
    <function-decl name='fopen' filepath='/usr/include/stdio.h' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- FILE* -->
      <return type-id='type-id-111'/>
    </function-decl>
    <!-- int fprintf(FILE* restrict, const char* restrict, ...) -->
    <function-decl name='fprintf' filepath='/usr/include/stdio.h' line='356' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fputc(int, FILE*) -->
    <function-decl name='fputc' filepath='/usr/include/stdio.h' line='573' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fputs(const char* restrict, FILE* restrict) -->
    <function-decl name='fputs' filepath='/usr/include/stdio.h' line='689' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- size_t fread(void* restrict, size_t, size_t, FILE* restrict) -->
    <function-decl name='fread' filepath='/usr/include/stdio.h' line='709' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void* restrict' -->
      <parameter type-id='type-id-117'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- FILE* freopen(const char* restrict, const char* restrict, FILE* restrict) -->
    <function-decl name='freopen' filepath='/usr/include/stdio.h' line='278' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- FILE* -->
      <return type-id='type-id-111'/>
    </function-decl>
    <!-- int fscanf(FILE* restrict, const char* restrict, ...) -->
    <function-decl name='fscanf' filepath='/usr/include/stdio.h' line='425' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fseek(FILE*, long int, int) -->
    <function-decl name='fseek' filepath='/usr/include/stdio.h' line='749' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fsetpos(FILE*, const fpos_t*) -->
    <function-decl name='fsetpos' filepath='/usr/include/stdio.h' line='803' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- parameter of type 'const fpos_t*' -->
      <parameter type-id='type-id-119'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- long int ftell(FILE*) -->
    <function-decl name='ftell' filepath='/usr/include/stdio.h' line='754' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- size_t fwrite(void* restrict, size_t, size_t, FILE* restrict) -->
    <function-decl name='fwrite' filepath='/usr/include/stdio.h' line='715' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void* restrict' -->
      <parameter type-id='type-id-117'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- int getc(FILE*) -->
    <function-decl name='getc' filepath='/usr/include/stdio.h' line='532' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int getchar() -->
    <function-decl name='getchar' filepath='/usr/include/stdio.h' line='538' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- char* gets(char*) -->
    <function-decl name='gets' filepath='/usr/include/stdio.h' line='638' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-40'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- void perror(const char*) -->
    <function-decl name='perror' filepath='/usr/include/stdio.h' line='846' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int printf(const char* restrict, ...) -->
    <function-decl name='printf' filepath='/usr/include/stdio.h' line='362' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int putc(int, FILE*) -->
    <function-decl name='putc' filepath='/usr/include/stdio.h' line='574' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int putchar(int) -->
    <function-decl name='putchar' filepath='/usr/include/stdio.h' line='580' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int puts(const char*) -->
    <function-decl name='puts' filepath='/usr/include/stdio.h' line='695' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int remove(const char*) -->
    <function-decl name='remove' filepath='/usr/include/stdio.h' line='178' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int rename(const char*, const char*) -->
    <function-decl name='rename' filepath='/usr/include/stdio.h' line='180' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void rewind(FILE*) -->
    <function-decl name='rewind' filepath='/usr/include/stdio.h' line='759' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int scanf(const char* restrict, ...) -->
    <function-decl name='scanf' filepath='/usr/include/stdio.h' line='431' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void setbuf(FILE* restrict, char* restrict) -->
    <function-decl name='setbuf' filepath='/usr/include/stdio.h' line='332' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int setvbuf(FILE* restrict, char* restrict, int, size_t) -->
    <function-decl name='setvbuf' filepath='/usr/include/stdio.h' line='336' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int sprintf(char* restrict, const char* restrict, ...) -->
    <function-decl name='sprintf' filepath='/usr/include/stdio.h' line='364' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int sscanf(const char* restrict, const char* restrict, ...) -->
    <function-decl name='sscanf' filepath='/usr/include/stdio.h' line='433' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- FILE* tmpfile() -->
    <function-decl name='tmpfile' filepath='/usr/include/stdio.h' line='195' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- FILE* -->
      <return type-id='type-id-111'/>
    </function-decl>
    <!-- char* tmpnam(char*) -->
    <function-decl name='tmpnam' filepath='/usr/include/stdio.h' line='209' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-40'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- int ungetc(int, FILE*) -->
    <function-decl name='ungetc' filepath='/usr/include/stdio.h' line='702' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vfprintf(FILE* restrict, const char* restrict, __va_list_tag*) -->
    <function-decl name='vfprintf' filepath='/usr/include/stdio.h' line='371' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vprintf(const char* restrict, __va_list_tag*) -->
    <function-decl name='vprintf' filepath='/usr/include/stdio.h' line='377' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vsprintf(char* restrict, const char* restrict, __va_list_tag*) -->
    <function-decl name='vsprintf' filepath='/usr/include/stdio.h' line='379' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int snprintf(char* restrict, size_t, const char* restrict, ...) -->
    <function-decl name='snprintf' filepath='/usr/include/stdio.h' line='386' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vfscanf(FILE* restrict, const char* restrict, __va_list_tag*) -->
    <function-decl name='vfscanf' filepath='/usr/include/stdio.h' line='471' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vscanf(const char* restrict, __va_list_tag*) -->
    <function-decl name='vscanf' filepath='/usr/include/stdio.h' line='479' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vsnprintf(char* restrict, size_t, const char* restrict, __va_list_tag*) -->
    <function-decl name='vsnprintf' filepath='/usr/include/stdio.h' line='390' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vsscanf(const char* restrict, const char* restrict, __va_list_tag*) -->
    <function-decl name='vsscanf' filepath='/usr/include/stdio.h' line='483' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswalnum(wint_t) -->
    <function-decl name='iswalnum' filepath='/usr/include/wctype.h' line='111' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswalpha(wint_t) -->
    <function-decl name='iswalpha' filepath='/usr/include/wctype.h' line='117' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswblank(wint_t) -->
    <function-decl name='iswblank' filepath='/usr/include/wctype.h' line='162' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswcntrl(wint_t) -->
    <function-decl name='iswcntrl' filepath='/usr/include/wctype.h' line='120' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswctype(wint_t, wctype_t) -->
    <function-decl name='iswctype' filepath='/usr/include/wctype.h' line='175' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- parameter of type 'typedef wctype_t' -->
      <parameter type-id='type-id-120'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswdigit(wint_t) -->
    <function-decl name='iswdigit' filepath='/usr/include/wctype.h' line='124' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswgraph(wint_t) -->
    <function-decl name='iswgraph' filepath='/usr/include/wctype.h' line='128' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswlower(wint_t) -->
    <function-decl name='iswlower' filepath='/usr/include/wctype.h' line='133' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswprint(wint_t) -->
    <function-decl name='iswprint' filepath='/usr/include/wctype.h' line='136' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswpunct(wint_t) -->
    <function-decl name='iswpunct' filepath='/usr/include/wctype.h' line='141' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswspace(wint_t) -->
    <function-decl name='iswspace' filepath='/usr/include/wctype.h' line='146' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswupper(wint_t) -->
    <function-decl name='iswupper' filepath='/usr/include/wctype.h' line='151' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswxdigit(wint_t) -->
    <function-decl name='iswxdigit' filepath='/usr/include/wctype.h' line='156' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wint_t towctrans(wint_t, wctrans_t) -->
    <function-decl name='towctrans' filepath='/usr/include/wctype.h' line='221' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- parameter of type 'typedef wctrans_t' -->
      <parameter type-id='type-id-124'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wint_t towlower(wint_t) -->
    <function-decl name='towlower' filepath='/usr/include/wctype.h' line='194' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wint_t towupper(wint_t) -->
    <function-decl name='towupper' filepath='/usr/include/wctype.h' line='197' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wctrans_t wctrans(const char*) -->
    <function-decl name='wctrans' filepath='/usr/include/wctype.h' line='218' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- typedef wctrans_t -->
      <return type-id='type-id-124'/>
    </function-decl>
    <!-- wctype_t wctype(const char*) -->
    <function-decl name='wctype' filepath='/usr/include/wctype.h' line='171' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- typedef wctype_t -->
      <return type-id='type-id-120'/>
    </function-decl>
    <!-- clock_t clock() -->
    <function-decl name='clock' filepath='/usr/include/time.h' line='189' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- typedef clock_t -->
      <return type-id='type-id-126'/>
    </function-decl>
    <!-- double difftime(time_t, time_t) -->
    <function-decl name='difftime' filepath='/usr/include/time.h' line='195' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef time_t' -->
      <parameter type-id='type-id-128'/>
      <!-- parameter of type 'typedef time_t' -->
      <parameter type-id='type-id-128'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- time_t mktime(tm*) -->
    <function-decl name='mktime' filepath='/usr/include/time.h' line='199' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'tm*' -->
      <parameter type-id='type-id-129'/>
      <!-- typedef time_t -->
      <return type-id='type-id-128'/>
    </function-decl>
    <!-- time_t time(time_t*) -->
    <function-decl name='time' filepath='/usr/include/time.h' line='192' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'time_t*' -->
      <parameter type-id='type-id-130'/>
      <!-- typedef time_t -->
      <return type-id='type-id-128'/>
    </function-decl>
    <!-- char* asctime(const tm*) -->
    <function-decl name='asctime' filepath='/usr/include/time.h' line='261' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const tm*' -->
      <parameter type-id='type-id-102'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- char* ctime(const time_t*) -->
    <function-decl name='ctime' filepath='/usr/include/time.h' line='264' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const time_t*' -->
      <parameter type-id='type-id-132'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- tm* gmtime(const time_t*) -->
    <function-decl name='gmtime' filepath='/usr/include/time.h' line='239' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const time_t*' -->
      <parameter type-id='type-id-132'/>
      <!-- tm* -->
      <return type-id='type-id-129'/>
    </function-decl>
    <!-- tm* localtime(const time_t*) -->
    <function-decl name='localtime' filepath='/usr/include/time.h' line='243' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const time_t*' -->
      <parameter type-id='type-id-132'/>
      <!-- tm* -->
      <return type-id='type-id-129'/>
    </function-decl>
    <!-- size_t strftime(char* restrict, size_t, const char* restrict, const tm* restrict) -->
    <function-decl name='strftime' filepath='/usr/include/time.h' line='205' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'const tm* restrict' -->
      <parameter type-id='type-id-103'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>

    <!-- double acos(double) -->
    <function-decl name='acos' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='54' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double asin(double) -->
    <function-decl name='asin' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='56' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double atan(double) -->
    <function-decl name='atan' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='58' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double atan2(double, double) -->
    <function-decl name='atan2' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='60' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double ceil(double) -->
    <function-decl name='ceil' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='178' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double cos(double) -->
    <function-decl name='cos' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='63' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double cosh(double) -->
    <function-decl name='cosh' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='72' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double exp(double) -->
    <function-decl name='exp' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='100' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double fabs(double) -->
    <function-decl name='fabs' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='181' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double floor(double) -->
    <function-decl name='floor' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='184' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double fmod(double, double) -->
    <function-decl name='fmod' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='187' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double frexp(double, int*) -->
    <function-decl name='frexp' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='103' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='type-id-222'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double ldexp(double, int) -->
    <function-decl name='ldexp' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='106' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double log(double) -->
    <function-decl name='log' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='109' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double log10(double) -->
    <function-decl name='log10' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='112' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double modf(double, double*) -->
    <function-decl name='modf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='115' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double*' -->
      <parameter type-id='type-id-393'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double pow(double, double) -->
    <function-decl name='pow' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='153' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double sin(double) -->
    <function-decl name='sin' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='65' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double sinh(double) -->
    <function-decl name='sinh' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='74' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double sqrt(double) -->
    <function-decl name='sqrt' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='156' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double tan(double) -->
    <function-decl name='tan' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='67' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double tanh(double) -->
    <function-decl name='tanh' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='76' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double acosh(double) -->
    <function-decl name='acosh' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='88' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float acoshf(float) -->
    <function-decl name='acoshf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='88' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double acoshl(long double) -->
    <function-decl name='acoshl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='88' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double asinh(double) -->
    <function-decl name='asinh' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='90' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float asinhf(float) -->
    <function-decl name='asinhf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='90' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double asinhl(long double) -->
    <function-decl name='asinhl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='90' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double atanh(double) -->
    <function-decl name='atanh' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='92' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float atanhf(float) -->
    <function-decl name='atanhf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='92' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double atanhl(long double) -->
    <function-decl name='atanhl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='92' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double cbrt(double) -->
    <function-decl name='cbrt' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='169' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float cbrtf(float) -->
    <function-decl name='cbrtf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='169' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double cbrtl(long double) -->
    <function-decl name='cbrtl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='169' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double copysign(double, double) -->
    <function-decl name='copysign' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='217' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float copysignf(float, float) -->
    <function-decl name='copysignf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='217' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double copysignl(long double, long double) -->
    <function-decl name='copysignl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='217' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double erf(double) -->
    <function-decl name='erf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='249' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float erff(float) -->
    <function-decl name='erff' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='249' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double erfl(long double) -->
    <function-decl name='erfl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='249' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double erfc(double) -->
    <function-decl name='erfc' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='250' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float erfcf(float) -->
    <function-decl name='erfcf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='250' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double erfcl(long double) -->
    <function-decl name='erfcl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='250' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double exp2(double) -->
    <function-decl name='exp2' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='141' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float exp2f(float) -->
    <function-decl name='exp2f' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='141' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double exp2l(long double) -->
    <function-decl name='exp2l' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='141' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double expm1(double) -->
    <function-decl name='expm1' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='128' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float expm1f(float) -->
    <function-decl name='expm1f' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='128' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double expm1l(long double) -->
    <function-decl name='expm1l' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='128' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double fdim(double, double) -->
    <function-decl name='fdim' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='337' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float fdimf(float, float) -->
    <function-decl name='fdimf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='337' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double fdiml(long double, long double) -->
    <function-decl name='fdiml' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='337' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double fma(double, double, double) -->
    <function-decl name='fma' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='356' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float fmaf(float, float, float) -->
    <function-decl name='fmaf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='356' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double fmal(long double, long double, long double) -->
    <function-decl name='fmal' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='356' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double fmax(double, double) -->
    <function-decl name='fmax' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='340' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float fmaxf(float, float) -->
    <function-decl name='fmaxf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='340' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double fmaxl(long double, long double) -->
    <function-decl name='fmaxl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='340' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double fmin(double, double) -->
    <function-decl name='fmin' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='343' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float fminf(float, float) -->
    <function-decl name='fminf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='343' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double fminl(long double, long double) -->
    <function-decl name='fminl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='343' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double hypot(double, double) -->
    <function-decl name='hypot' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='162' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float hypotf(float, float) -->
    <function-decl name='hypotf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='162' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double hypotl(long double, long double) -->
    <function-decl name='hypotl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='162' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- int ilogb(double) -->
    <function-decl name='ilogb' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='296' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int ilogbf(float) -->
    <function-decl name='ilogbf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='296' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int ilogbl(long double) -->
    <function-decl name='ilogbl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='296' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- double lgamma(double) -->
    <function-decl name='lgamma' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='251' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float lgammaf(float) -->
    <function-decl name='lgammaf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='251' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double lgammal(long double) -->
    <function-decl name='lgammal' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='251' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- long long int llrint(double) -->
    <function-decl name='llrint' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='327' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long int llrintf(float) -->
    <function-decl name='llrintf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='327' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long int llrintl(long double) -->
    <function-decl name='llrintl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='327' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long int llround(double) -->
    <function-decl name='llround' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='333' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long int llroundf(float) -->
    <function-decl name='llroundf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='333' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long int llroundl(long double) -->
    <function-decl name='llroundl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='333' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- double log1p(double) -->
    <function-decl name='log1p' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='131' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float log1pf(float) -->
    <function-decl name='log1pf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='131' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double log1pl(long double) -->
    <function-decl name='log1pl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='131' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double log2(double) -->
    <function-decl name='log2' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='144' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float log2f(float) -->
    <function-decl name='log2f' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='144' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double log2l(long double) -->
    <function-decl name='log2l' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='144' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double logb(double) -->
    <function-decl name='logb' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='134' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float logbf(float) -->
    <function-decl name='logbf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='134' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double logbl(long double) -->
    <function-decl name='logbl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='134' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- long int lrint(double) -->
    <function-decl name='lrint' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='325' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- long int lrintf(float) -->
    <function-decl name='lrintf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='325' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- long int lrintl(long double) -->
    <function-decl name='lrintl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='325' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- long int lround(double) -->
    <function-decl name='lround' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='331' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- long int lroundf(float) -->
    <function-decl name='lroundf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='331' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- long int lroundl(long double) -->
    <function-decl name='lroundl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='331' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- double nan(const char*) -->
    <function-decl name='nan' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='224' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float nanf(const char*) -->
    <function-decl name='nanf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='224' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double nanl(const char*) -->
    <function-decl name='nanl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='224' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double nearbyint(double) -->
    <function-decl name='nearbyint' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='305' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float nearbyintf(float) -->
    <function-decl name='nearbyintf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='305' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double nearbyintl(long double) -->
    <function-decl name='nearbyintl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='305' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double nextafter(double, double) -->
    <function-decl name='nextafter' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='282' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float nextafterf(float, float) -->
    <function-decl name='nextafterf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='282' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double nextafterl(long double, long double) -->
    <function-decl name='nextafterl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='282' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double nexttoward(double, long double) -->
    <function-decl name='nexttoward' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='284' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float nexttowardf(float, long double) -->
    <function-decl name='nexttowardf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='284' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double nexttowardl(long double, long double) -->
    <function-decl name='nexttowardl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='284' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double remainder(double, double) -->
    <function-decl name='remainder' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='288' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float remainderf(float, float) -->
    <function-decl name='remainderf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='288' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double remainderl(long double, long double) -->
    <function-decl name='remainderl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='288' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double remquo(double, double, int*) -->
    <function-decl name='remquo' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='318' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='type-id-222'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float remquof(float, float, int*) -->
    <function-decl name='remquof' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='318' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='type-id-222'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double remquol(long double, long double, int*) -->
    <function-decl name='remquol' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='318' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='type-id-222'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double rint(double) -->
    <function-decl name='rint' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='279' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float rintf(float) -->
    <function-decl name='rintf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='279' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double rintl(long double) -->
    <function-decl name='rintl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='279' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double round(double) -->
    <function-decl name='round' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='309' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float roundf(float) -->
    <function-decl name='roundf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='309' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double roundl(long double) -->
    <function-decl name='roundl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='309' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double scalbln(double, long int) -->
    <function-decl name='scalbln' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='301' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float scalblnf(float, long int) -->
    <function-decl name='scalblnf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='301' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double scalblnl(long double, long int) -->
    <function-decl name='scalblnl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='301' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double scalbn(double, int) -->
    <function-decl name='scalbn' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='292' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float scalbnf(float, int) -->
    <function-decl name='scalbnf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='292' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double scalbnl(long double, int) -->
    <function-decl name='scalbnl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='292' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double tgamma(double) -->
    <function-decl name='tgamma' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='258' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float tgammaf(float) -->
    <function-decl name='tgammaf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='258' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double tgammal(long double) -->
    <function-decl name='tgammal' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='258' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double trunc(double) -->
    <function-decl name='trunc' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='313' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float truncf(float) -->
    <function-decl name='truncf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='313' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double truncl(long double) -->
    <function-decl name='truncl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='313' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- void* memchr(void*, int, size_t) -->
    <function-decl name='memchr' filepath='/usr/include/string.h' line='78' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- int memcmp(void*, void*, size_t) -->
    <function-decl name='memcmp' filepath='/usr/include/string.h' line='69' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void* memcpy(void* restrict, void* restrict, size_t) -->
    <function-decl name='memcpy' filepath='/usr/include/string.h' line='46' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void* restrict' -->
      <parameter type-id='type-id-117'/>
      <!-- parameter of type 'void* restrict' -->
      <parameter type-id='type-id-117'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- void* memmove(void*, void*, size_t) -->
    <function-decl name='memmove' filepath='/usr/include/string.h' line='50' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- void* memset(void*, int, size_t) -->
    <function-decl name='memset' filepath='/usr/include/string.h' line='66' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- char* strcat(char* restrict, const char* restrict) -->
    <function-decl name='strcat' filepath='/usr/include/string.h' line='137' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- int strcmp(const char*, const char*) -->
    <function-decl name='strcmp' filepath='/usr/include/string.h' line='144' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int strcoll(const char*, const char*) -->
    <function-decl name='strcoll' filepath='/usr/include/string.h' line='151' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- char* strcpy(char* restrict, const char* restrict) -->
    <function-decl name='strcpy' filepath='/usr/include/string.h' line='129' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- size_t strcspn(const char*, const char*) -->
    <function-decl name='strcspn' filepath='/usr/include/string.h' line='284' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- char* strerror(int) -->
    <function-decl name='strerror' filepath='/usr/include/string.h' line='412' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- size_t strlen(const char*) -->
    <function-decl name='strlen' filepath='/usr/include/string.h' line='398' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- char* strncat(char* restrict, const char* restrict, size_t) -->
    <function-decl name='strncat' filepath='/usr/include/string.h' line='140' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- int strncmp(const char*, const char*, size_t) -->
    <function-decl name='strncmp' filepath='/usr/include/string.h' line='147' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- char* strncpy(char* restrict, const char* restrict, size_t) -->
    <function-decl name='strncpy' filepath='/usr/include/string.h' line='132' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- size_t strspn(const char*, const char*) -->
    <function-decl name='strspn' filepath='/usr/include/string.h' line='288' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- char* strtok(char* restrict, const char* restrict) -->
    <function-decl name='strtok' filepath='/usr/include/string.h' line='347' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- size_t strxfrm(char* restrict, const char* restrict, size_t) -->
    <function-decl name='strxfrm' filepath='/usr/include/string.h' line='154' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- const char* strchr(const char*, int) -->
    <function-decl name='strchr' filepath='/usr/include/string.h' line='217' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- const char* -->
      <return type-id='type-id-15'/>
    </function-decl>
    <!-- const char* strpbrk(const char*, const char*) -->
    <function-decl name='strpbrk' filepath='/usr/include/string.h' line='296' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- const char* -->
      <return type-id='type-id-15'/>
    </function-decl>
    <!-- const char* strrchr(const char*, int) -->
    <function-decl name='strrchr' filepath='/usr/include/string.h' line='244' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- const char* -->
      <return type-id='type-id-15'/>
    </function-decl>
    <!-- const char* strstr(const char*, const char*) -->
    <function-decl name='strstr' filepath='/usr/include/string.h' line='323' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- const char* -->
      <return type-id='type-id-15'/>
    </function-decl>
  </abi-instr>
  <abi-instr version='1.0' address-size='64' path='src/third_party/boost-1.56.0/libs/filesystem/src/unique_path.cpp' language='LANG_C_plus_plus'>
    <!-- namespace boost -->
    <namespace-decl name='boost'>
      <!-- namespace boost::filesystem -->
      <namespace-decl name='filesystem'>
        <!-- namespace boost::filesystem::detail -->
        <namespace-decl name='detail'>
          <!-- boost::filesystem::path boost::filesystem::detail::unique_path(const boost::filesystem::path&, boost::system::error_code*) -->
          <function-decl name='unique_path' mangled-name='_ZN5boost10filesystem6detail11unique_pathERKNS0_4pathEPNS_6system10error_codeE' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/unique_path.cpp' line='111' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail11unique_pathERKNS0_4pathEPNS_6system10error_codeE'>
            <!-- parameter of type 'const boost::filesystem::path&' -->
            <parameter type-id='type-id-143' name='p' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1458' column='1'/>
            <!-- parameter of type 'boost::system::error_code*' -->
            <parameter type-id='type-id-20' name='ec' filepath='src/third_party/boost-1.56.0/libs/filesystem/src/operations.cpp' line='1458' column='1'/>
            <!-- class boost::filesystem::path -->
            <return type-id='type-id-142'/>
          </function-decl>
        </namespace-decl>
        <!-- namespace boost::filesystem::path_traits -->
        <namespace-decl name='path_traits'>
          <!-- void boost::filesystem::path_traits::dispatch<std::basic_string<char> >(const std::wstring&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const boost::filesystem::path_traits::codecvt_type&) -->
          <function-decl name='dispatch&lt;std::basic_string&lt;char&gt; &gt;' mangled-name='_ZN5boost10filesystem11path_traits8dispatchISsEEvRKSbIwSt11char_traitsIwESaIwEERT_RKSt7codecvtIwc11__mbstate_tE' filepath='src/third_party/boost-1.56.0/boost/filesystem/path_traits.hpp' line='177' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem11path_traits8dispatchISsEEvRKSbIwSt11char_traitsIwESaIwEERT_RKSt7codecvtIwc11__mbstate_tE'>
            <!-- parameter of type 'const std::wstring&' -->
            <parameter type-id='type-id-472' name='c' filepath='src/third_party/boost-1.56.0/boost/filesystem/path_traits.hpp' line='177' column='1'/>
            <!-- parameter of type 'std::basic_string<char, std::char_traits<char>, std::allocator<char> >&' -->
            <parameter type-id='type-id-44' name='to' filepath='src/third_party/boost-1.56.0/boost/filesystem/path_traits.hpp' line='177' column='1'/>
            <!-- parameter of type 'const boost::filesystem::path_traits::codecvt_type&' -->
            <parameter type-id='type-id-204' name='cvt' filepath='src/third_party/boost-1.56.0/boost/filesystem/path_traits.hpp' line='177' column='1'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </namespace-decl>
      </namespace-decl>



      <!-- struct boost::enable_if_c<true, void> -->
      <class-decl name='enable_if_c&lt;true, void&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='src/third_party/boost-1.56.0/boost/core/enable_if.hpp' line='28' column='1' id='type-id-473'/>
    </namespace-decl>
    <!-- namespace std -->
    <namespace-decl name='std'>


      <!-- class std::allocator<wchar_t> -->
      <class-decl name='allocator&lt;wchar_t&gt;' visibility='default' is-declaration-only='yes' id='type-id-400'>
        <member-type access='private'>
          <!-- typedef std::size_t std::allocator<wchar_t>::size_type -->
          <typedef-decl name='size_type' type-id='type-id-138' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/allocator.h' line='95' column='1' id='type-id-337'/>
        </member-type>
      </class-decl>
      <!-- struct std::iterator_traits<const wchar_t *> -->
      <class-decl name='iterator_traits&lt;const wchar_t *&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator_base_types.h' line='186' column='1' id='type-id-474'>
        <member-type access='public'>
          <!-- typedef const wchar_t& std::iterator_traits<const wchar_t *>::reference -->
          <typedef-decl name='reference' type-id='type-id-476' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator_base_types.h' line='192' column='1' id='type-id-475'/>
        </member-type>
        <member-type access='public'>
          <!-- typedef const wchar_t* std::iterator_traits<const wchar_t *>::pointer -->
          <typedef-decl name='pointer' type-id='type-id-74' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator_base_types.h' line='191' column='1' id='type-id-477'/>
        </member-type>
        <member-type access='public'>
          <!-- typedef std::ptrdiff_t std::iterator_traits<const wchar_t *>::difference_type -->
          <typedef-decl name='difference_type' type-id='type-id-219' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator_base_types.h' line='190' column='1' id='type-id-478'/>
        </member-type>
      </class-decl>
    </namespace-decl>
    <!-- const std::wstring& -->
    <reference-type-def kind='lvalue' type-id='type-id-170' size-in-bits='64' id='type-id-472'/>
    <!-- namespace __gnu_cxx -->
    <namespace-decl name='__gnu_cxx'>
      <!-- lldiv_t __gnu_cxx::div(long long int, long long int) -->
      <function-decl name='div' mangled-name='_ZN9__gnu_cxx3divExx' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/cstdlib' line='214' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'long long int' -->
        <parameter type-id='type-id-76'/>
        <!-- parameter of type 'long long int' -->
        <parameter type-id='type-id-76'/>
        <!-- typedef lldiv_t -->
        <return type-id='type-id-77'/>
      </function-decl>
      <!-- class __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> > -->
      <class-decl name='__normal_iterator&lt;const wchar_t *, std::basic_string&lt;wchar_t&gt; &gt;' size-in-bits='64' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='709' column='1' id='type-id-479'>
        <member-type access='private'>
          <!-- typedef std::iterator_traits<const wchar_t *>::reference __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >::reference -->
          <typedef-decl name='reference' type-id='type-id-475' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='721' column='1' id='type-id-480'/>
        </member-type>
        <member-type access='private'>
          <!-- typedef std::iterator_traits<const wchar_t *>::pointer __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >::pointer -->
          <typedef-decl name='pointer' type-id='type-id-477' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='722' column='1' id='type-id-481'/>
        </member-type>
        <member-type access='private'>
          <!-- typedef std::iterator_traits<const wchar_t *>::difference_type __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >::difference_type -->
          <typedef-decl name='difference_type' type-id='type-id-478' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='720' column='1' id='type-id-482'/>
        </member-type>
        <data-member access='protected' layout-offset-in-bits='0'>
          <!-- const wchar_t* __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >::_M_current -->
          <var-decl name='_M_current' type-id='type-id-74' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='712' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >::__normal_iterator() -->
          <function-decl name='__normal_iterator' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='724' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >*' -->
            <parameter type-id='type-id-483' is-artificial='yes'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >::__normal_iterator(const wchar_t* const&) -->
          <function-decl name='__normal_iterator' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='728' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >*' -->
            <parameter type-id='type-id-483' is-artificial='yes'/>
            <!-- parameter of type 'const wchar_t* const&' -->
            <parameter type-id='type-id-484'/>
            <!-- void -->
            <return type-id='type-id-8'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >::reference __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >::operator*() -->
          <function-decl name='operator*' mangled-name='_ZNK9__gnu_cxx17__normal_iteratorIPKwSbIwSt11char_traitsIwESaIwEEEdeEv' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='741' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK9__gnu_cxx17__normal_iteratorIPKwSbIwSt11char_traitsIwESaIwEEEdeEv'>
            <!-- implicit parameter of type 'const __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >*' -->
            <parameter type-id='type-id-485' is-artificial='yes'/>
            <!-- typedef __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >::reference -->
            <return type-id='type-id-480'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >::pointer __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >::operator&#45;>() -->
          <function-decl name='operator-&gt;' mangled-name='_ZNK9__gnu_cxx17__normal_iteratorIPKwSbIwSt11char_traitsIwESaIwEEEptEv' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='745' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >*' -->
            <parameter type-id='type-id-485' is-artificial='yes'/>
            <!-- typedef __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >::pointer -->
            <return type-id='type-id-481'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >& __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >::operator++() -->
          <function-decl name='operator++' mangled-name='_ZN9__gnu_cxx17__normal_iteratorIPKwSbIwSt11char_traitsIwESaIwEEEppEv' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='749' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >*' -->
            <parameter type-id='type-id-483' is-artificial='yes'/>
            <!-- __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >& -->
            <return type-id='type-id-486'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> > __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >::operator++(int) -->
          <function-decl name='operator++' mangled-name='_ZN9__gnu_cxx17__normal_iteratorIPKwSbIwSt11char_traitsIwESaIwEEEppEi' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='756' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >*' -->
            <parameter type-id='type-id-483' is-artificial='yes'/>
            <!-- parameter of type 'int' -->
            <parameter type-id='type-id-5'/>
            <!-- class __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> > -->
            <return type-id='type-id-479'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >& __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >::operator&#45;&#45;() -->
          <function-decl name='operator--' mangled-name='_ZN9__gnu_cxx17__normal_iteratorIPKwSbIwSt11char_traitsIwESaIwEEEmmEv' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='761' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >*' -->
            <parameter type-id='type-id-483' is-artificial='yes'/>
            <!-- __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >& -->
            <return type-id='type-id-486'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> > __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >::operator&#45;&#45;(int) -->
          <function-decl name='operator--' mangled-name='_ZN9__gnu_cxx17__normal_iteratorIPKwSbIwSt11char_traitsIwESaIwEEEmmEi' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='768' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >*' -->
            <parameter type-id='type-id-483' is-artificial='yes'/>
            <!-- parameter of type 'int' -->
            <parameter type-id='type-id-5'/>
            <!-- class __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> > -->
            <return type-id='type-id-479'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >::reference __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >::operator[](__gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >::difference_type) -->
          <function-decl name='operator[]' mangled-name='_ZNK9__gnu_cxx17__normal_iteratorIPKwSbIwSt11char_traitsIwESaIwEEEixEl' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='773' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >*' -->
            <parameter type-id='type-id-485' is-artificial='yes'/>
            <!-- parameter of type 'typedef __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >::difference_type' -->
            <parameter type-id='type-id-482'/>
            <!-- typedef __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >::reference -->
            <return type-id='type-id-480'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >& __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >::operator+=(__gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >::difference_type) -->
          <function-decl name='operator+=' mangled-name='_ZN9__gnu_cxx17__normal_iteratorIPKwSbIwSt11char_traitsIwESaIwEEEpLEl' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='777' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >*' -->
            <parameter type-id='type-id-483' is-artificial='yes'/>
            <!-- parameter of type 'typedef __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >::difference_type' -->
            <parameter type-id='type-id-482'/>
            <!-- __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >& -->
            <return type-id='type-id-486'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> > __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >::operator+(__gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >::difference_type) -->
          <function-decl name='operator+' mangled-name='_ZNK9__gnu_cxx17__normal_iteratorIPKwSbIwSt11char_traitsIwESaIwEEEplEl' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='781' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >*' -->
            <parameter type-id='type-id-485' is-artificial='yes'/>
            <!-- parameter of type 'typedef __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >::difference_type' -->
            <parameter type-id='type-id-482'/>
            <!-- class __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> > -->
            <return type-id='type-id-479'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >& __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >::operator&#45;=(__gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >::difference_type) -->
          <function-decl name='operator-=' mangled-name='_ZN9__gnu_cxx17__normal_iteratorIPKwSbIwSt11char_traitsIwESaIwEEEmIEl' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='785' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >*' -->
            <parameter type-id='type-id-483' is-artificial='yes'/>
            <!-- parameter of type 'typedef __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >::difference_type' -->
            <parameter type-id='type-id-482'/>
            <!-- __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >& -->
            <return type-id='type-id-486'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> > __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >::operator&#45;(__gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >::difference_type) -->
          <function-decl name='operator-' mangled-name='_ZNK9__gnu_cxx17__normal_iteratorIPKwSbIwSt11char_traitsIwESaIwEEEmiEl' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='789' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >*' -->
            <parameter type-id='type-id-485' is-artificial='yes'/>
            <!-- parameter of type 'typedef __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >::difference_type' -->
            <parameter type-id='type-id-482'/>
            <!-- class __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> > -->
            <return type-id='type-id-479'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- const wchar_t* const& __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >::base() -->
          <function-decl name='base' mangled-name='_ZNK9__gnu_cxx17__normal_iteratorIPKwSbIwSt11char_traitsIwESaIwEEE4baseEv' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator.h' line='793' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >*' -->
            <parameter type-id='type-id-485' is-artificial='yes'/>
            <!-- const wchar_t* const& -->
            <return type-id='type-id-484'/>
          </function-decl>
        </member-function>
      </class-decl>
    </namespace-decl>

    <!-- void abort() -->
    <function-decl name='abort' filepath='/usr/include/stdlib.h' line='515' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int abs(int) -->
    <function-decl name='abs' filepath='/usr/include/stdlib.h' line='774' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int atexit(void ()*) -->
    <function-decl name='atexit' filepath='/usr/include/stdlib.h' line='519' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void ()*' -->
      <parameter type-id='type-id-4'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int at_quick_exit(void ()*) -->
    <function-decl name='at_quick_exit' filepath='/usr/include/stdlib.h' line='524' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void ()*' -->
      <parameter type-id='type-id-4'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- double atof(const char*) -->
    <function-decl name='atof' filepath='/usr/include/stdlib.h' line='144' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- int atoi(const char*) -->
    <function-decl name='atoi' filepath='/usr/include/stdlib.h' line='147' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- long int atol(const char*) -->
    <function-decl name='atol' filepath='/usr/include/stdlib.h' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- void* bsearch(void*, void*, size_t, size_t, __compar_fn_t) -->
    <function-decl name='bsearch' filepath='/usr/include/stdlib.h' line='754' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef __compar_fn_t' -->
      <parameter type-id='type-id-60'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- void* calloc(size_t, size_t) -->
    <function-decl name='calloc' filepath='/usr/include/stdlib.h' line='468' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- div_t div(int, int) -->
    <function-decl name='div' filepath='/usr/include/stdlib.h' line='788' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- typedef div_t -->
      <return type-id='type-id-61'/>
    </function-decl>
    <!-- void exit(int) -->
    <function-decl name='exit' filepath='/usr/include/stdlib.h' line='543' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- void free(void*) -->
    <function-decl name='free' filepath='/usr/include/stdlib.h' line='483' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- char* getenv(const char*) -->
    <function-decl name='getenv' filepath='/usr/include/stdlib.h' line='564' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- long int labs(long int) -->
    <function-decl name='labs' filepath='/usr/include/stdlib.h' line='775' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- ldiv_t ldiv(long int, long int) -->
    <function-decl name='ldiv' filepath='/usr/include/stdlib.h' line='790' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- typedef ldiv_t -->
      <return type-id='type-id-63'/>
    </function-decl>
    <!-- void* malloc(size_t) -->
    <function-decl name='malloc' filepath='/usr/include/stdlib.h' line='466' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- int mblen(const char*, size_t) -->
    <function-decl name='mblen' filepath='/usr/include/stdlib.h' line='862' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- size_t mbstowcs(wchar_t* restrict, const char* restrict, size_t) -->
    <function-decl name='mbstowcs' filepath='/usr/include/stdlib.h' line='873' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- int mbtowc(wchar_t* restrict, const char* restrict, size_t) -->
    <function-decl name='mbtowc' filepath='/usr/include/stdlib.h' line='865' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void qsort(void*, size_t, size_t, __compar_fn_t) -->
    <function-decl name='qsort' filepath='/usr/include/stdlib.h' line='764' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef __compar_fn_t' -->
      <parameter type-id='type-id-60'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- void quick_exit(int) -->
    <function-decl name='quick_exit' filepath='/usr/include/stdlib.h' line='549' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int rand() -->
    <function-decl name='rand' filepath='/usr/include/stdlib.h' line='374' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void* realloc(void*, size_t) -->
    <function-decl name='realloc' filepath='/usr/include/stdlib.h' line='480' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- void srand(unsigned int) -->
    <function-decl name='srand' filepath='/usr/include/stdlib.h' line='376' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-69'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- double strtod(const char* restrict, char** restrict) -->
    <function-decl name='strtod' filepath='/usr/include/stdlib.h' line='164' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- long int strtol(const char* restrict, char** restrict, int) -->
    <function-decl name='strtol' filepath='/usr/include/stdlib.h' line='183' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- unsigned long int strtoul(const char* restrict, char** restrict, int) -->
    <function-decl name='strtoul' filepath='/usr/include/stdlib.h' line='187' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- unsigned long int -->
      <return type-id='type-id-56'/>
    </function-decl>
    <!-- int system(const char*) -->
    <function-decl name='system' filepath='/usr/include/stdlib.h' line='716' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- size_t wcstombs(char* restrict, const wchar_t* restrict, size_t) -->
    <function-decl name='wcstombs' filepath='/usr/include/stdlib.h' line='876' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- int wctomb(char*, wchar_t) -->
    <function-decl name='wctomb' filepath='/usr/include/stdlib.h' line='869' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-40'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void _Exit(int) -->
    <function-decl name='_Exit' filepath='/usr/include/stdlib.h' line='557' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- long long int llabs(long long int) -->
    <function-decl name='llabs' filepath='/usr/include/stdlib.h' line='779' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long long int' -->
      <parameter type-id='type-id-76'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- lldiv_t lldiv(long long int, long long int) -->
    <function-decl name='lldiv' filepath='/usr/include/stdlib.h' line='796' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long long int' -->
      <parameter type-id='type-id-76'/>
      <!-- parameter of type 'long long int' -->
      <parameter type-id='type-id-76'/>
      <!-- typedef lldiv_t -->
      <return type-id='type-id-77'/>
    </function-decl>
    <!-- long long int atoll(const char*) -->
    <function-decl name='atoll' filepath='/usr/include/stdlib.h' line='157' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long int strtoll(const char* restrict, char** restrict, int) -->
    <function-decl name='strtoll' filepath='/usr/include/stdlib.h' line='209' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long unsigned int strtoull(const char* restrict, char** restrict, int) -->
    <function-decl name='strtoull' filepath='/usr/include/stdlib.h' line='214' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long long unsigned int -->
      <return type-id='type-id-79'/>
    </function-decl>
    <!-- float strtof(const char* restrict, char** restrict) -->
    <function-decl name='strtof' filepath='/usr/include/stdlib.h' line='172' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double strtold(const char* restrict, char** restrict) -->
    <function-decl name='strtold' filepath='/usr/include/stdlib.h' line='175' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- wint_t btowc(int) -->
    <function-decl name='btowc' filepath='/usr/include/wchar.h' line='353' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wint_t fgetwc(__FILE*) -->
    <function-decl name='fgetwc' filepath='/usr/include/wchar.h' line='745' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wchar_t* fgetws(wchar_t* restrict, int, __FILE* restrict) -->
    <function-decl name='fgetws' filepath='/usr/include/wchar.h' line='774' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wint_t fputwc(wchar_t, __FILE*) -->
    <function-decl name='fputwc' filepath='/usr/include/wchar.h' line='759' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- int fputws(const wchar_t* restrict, __FILE* restrict) -->
    <function-decl name='fputws' filepath='/usr/include/wchar.h' line='781' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fwide(__FILE*, int) -->
    <function-decl name='fwide' filepath='/usr/include/wchar.h' line='587' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fwprintf(__FILE* restrict, const wchar_t* restrict, ...) -->
    <function-decl name='fwprintf' filepath='/usr/include/wchar.h' line='594' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fwscanf(__FILE* restrict, const wchar_t* restrict, ...) -->
    <function-decl name='fwscanf' filepath='/usr/include/wchar.h' line='635' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wint_t getwc(__FILE*) -->
    <function-decl name='getwc' filepath='/usr/include/wchar.h' line='746' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wint_t getwchar() -->
    <function-decl name='getwchar' filepath='/usr/include/wchar.h' line='752' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- size_t mbrlen(const char* restrict, size_t, mbstate_t* restrict) -->
    <function-decl name='mbrlen' filepath='/usr/include/wchar.h' line='376' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'mbstate_t* restrict' -->
      <parameter type-id='type-id-92'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- size_t mbrtowc(wchar_t* restrict, const char* restrict, size_t, mbstate_t* restrict) -->
    <function-decl name='mbrtowc' filepath='/usr/include/wchar.h' line='365' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'mbstate_t* restrict' -->
      <parameter type-id='type-id-92'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- int mbsinit(const mbstate_t*) -->
    <function-decl name='mbsinit' filepath='/usr/include/wchar.h' line='361' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const mbstate_t*' -->
      <parameter type-id='type-id-94'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- size_t mbsrtowcs(wchar_t* restrict, const char** restrict, size_t, mbstate_t* restrict) -->
    <function-decl name='mbsrtowcs' filepath='/usr/include/wchar.h' line='408' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const char** restrict' -->
      <parameter type-id='type-id-96'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'mbstate_t* restrict' -->
      <parameter type-id='type-id-92'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- wint_t putwc(wchar_t, __FILE*) -->
    <function-decl name='putwc' filepath='/usr/include/wchar.h' line='760' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wint_t putwchar(wchar_t) -->
    <function-decl name='putwchar' filepath='/usr/include/wchar.h' line='766' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- int swprintf(wchar_t* restrict, size_t, const wchar_t* restrict, ...) -->
    <function-decl name='swprintf' filepath='/usr/include/wchar.h' line='604' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int swscanf(const wchar_t* restrict, const wchar_t* restrict, ...) -->
    <function-decl name='swscanf' filepath='/usr/include/wchar.h' line='645' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wint_t ungetwc(wint_t, __FILE*) -->
    <function-decl name='ungetwc' filepath='/usr/include/wchar.h' line='789' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- int vfwprintf(__FILE* restrict, const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vfwprintf' filepath='/usr/include/wchar.h' line='612' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vfwscanf(__FILE* restrict, const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vfwscanf' filepath='/usr/include/wchar.h' line='689' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vswprintf(wchar_t* restrict, size_t, const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vswprintf' filepath='/usr/include/wchar.h' line='625' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vswscanf(const wchar_t* restrict, const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vswscanf' filepath='/usr/include/wchar.h' line='701' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vwprintf(const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vwprintf' filepath='/usr/include/wchar.h' line='620' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vwscanf(const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vwscanf' filepath='/usr/include/wchar.h' line='697' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- size_t wcrtomb(char* restrict, wchar_t, mbstate_t* restrict) -->
    <function-decl name='wcrtomb' filepath='/usr/include/wchar.h' line='370' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- parameter of type 'mbstate_t* restrict' -->
      <parameter type-id='type-id-92'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- wchar_t* wcscat(wchar_t* restrict, const wchar_t* restrict) -->
    <function-decl name='wcscat' filepath='/usr/include/wchar.h' line='155' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- int wcscmp(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcscmp' filepath='/usr/include/wchar.h' line='163' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int wcscoll(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcscoll' filepath='/usr/include/wchar.h' line='192' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wchar_t* wcscpy(wchar_t* restrict, const wchar_t* restrict) -->
    <function-decl name='wcscpy' filepath='/usr/include/wchar.h' line='147' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- size_t wcscspn(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcscspn' filepath='/usr/include/wchar.h' line='252' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- size_t wcsftime(wchar_t* restrict, size_t, const wchar_t* restrict, const tm* restrict) -->
    <function-decl name='wcsftime' filepath='/usr/include/wchar.h' line='855' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'const tm* restrict' -->
      <parameter type-id='type-id-103'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- size_t wcslen(const wchar_t*) -->
    <function-decl name='wcslen' filepath='/usr/include/wchar.h' line='287' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- wchar_t* wcsncat(wchar_t* restrict, const wchar_t* restrict, size_t) -->
    <function-decl name='wcsncat' filepath='/usr/include/wchar.h' line='158' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- int wcsncmp(const wchar_t*, const wchar_t*, size_t) -->
    <function-decl name='wcsncmp' filepath='/usr/include/wchar.h' line='166' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wchar_t* wcsncpy(wchar_t* restrict, const wchar_t* restrict, size_t) -->
    <function-decl name='wcsncpy' filepath='/usr/include/wchar.h' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- size_t wcsrtombs(char* restrict, const wchar_t** restrict, size_t, mbstate_t* restrict) -->
    <function-decl name='wcsrtombs' filepath='/usr/include/wchar.h' line='414' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const wchar_t** restrict' -->
      <parameter type-id='type-id-105'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'mbstate_t* restrict' -->
      <parameter type-id='type-id-92'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- size_t wcsspn(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcsspn' filepath='/usr/include/wchar.h' line='256' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- double wcstod(const wchar_t* restrict, wchar_t** restrict) -->
    <function-decl name='wcstod' filepath='/usr/include/wchar.h' line='450' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float wcstof(const wchar_t* restrict, wchar_t** restrict) -->
    <function-decl name='wcstof' filepath='/usr/include/wchar.h' line='457' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- wchar_t* wcstok(wchar_t* restrict, const wchar_t* restrict, wchar_t** restrict) -->
    <function-decl name='wcstok' filepath='/usr/include/wchar.h' line='282' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- long int wcstol(const wchar_t* restrict, wchar_t** restrict, int) -->
    <function-decl name='wcstol' filepath='/usr/include/wchar.h' line='468' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- unsigned long int wcstoul(const wchar_t* restrict, wchar_t** restrict, int) -->
    <function-decl name='wcstoul' filepath='/usr/include/wchar.h' line='473' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- unsigned long int -->
      <return type-id='type-id-56'/>
    </function-decl>
    <!-- size_t wcsxfrm(wchar_t* restrict, const wchar_t* restrict, size_t) -->
    <function-decl name='wcsxfrm' filepath='/usr/include/wchar.h' line='196' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- int wctob(wint_t) -->
    <function-decl name='wctob' filepath='/usr/include/wchar.h' line='357' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int wmemcmp(const wchar_t*, const wchar_t*, size_t) -->
    <function-decl name='wmemcmp' filepath='/usr/include/wchar.h' line='325' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wchar_t* wmemcpy(wchar_t* restrict, const wchar_t* restrict, size_t) -->
    <function-decl name='wmemcpy' filepath='/usr/include/wchar.h' line='329' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wmemmove(wchar_t*, const wchar_t*, size_t) -->
    <function-decl name='wmemmove' filepath='/usr/include/wchar.h' line='334' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t*' -->
      <parameter type-id='type-id-66'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wmemset(wchar_t*, wchar_t, size_t) -->
    <function-decl name='wmemset' filepath='/usr/include/wchar.h' line='338' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t*' -->
      <parameter type-id='type-id-66'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- int wprintf(const wchar_t* restrict, ...) -->
    <function-decl name='wprintf' filepath='/usr/include/wchar.h' line='601' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int wscanf(const wchar_t* restrict, ...) -->
    <function-decl name='wscanf' filepath='/usr/include/wchar.h' line='642' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wchar_t* wcschr(const wchar_t*, wchar_t) -->
    <function-decl name='wcschr' filepath='/usr/include/wchar.h' line='227' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wcspbrk(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcspbrk' filepath='/usr/include/wchar.h' line='266' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wcsrchr(const wchar_t*, wchar_t) -->
    <function-decl name='wcsrchr' filepath='/usr/include/wchar.h' line='237' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wcsstr(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcsstr' filepath='/usr/include/wchar.h' line='277' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wmemchr(const wchar_t*, wchar_t, size_t) -->
    <function-decl name='wmemchr' filepath='/usr/include/wchar.h' line='320' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- long double wcstold(const wchar_t* restrict, wchar_t** restrict) -->
    <function-decl name='wcstold' filepath='/usr/include/wchar.h' line='459' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- long long int wcstoll(const wchar_t* restrict, wchar_t** restrict, int) -->
    <function-decl name='wcstoll' filepath='/usr/include/wchar.h' line='483' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long unsigned int wcstoull(const wchar_t* restrict, wchar_t** restrict, int) -->
    <function-decl name='wcstoull' filepath='/usr/include/wchar.h' line='490' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long long unsigned int -->
      <return type-id='type-id-79'/>
    </function-decl>

    <!-- char* setlocale(int, const char*) -->
    <function-decl name='setlocale' filepath='/usr/include/locale.h' line='124' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- lconv* localeconv() -->
    <function-decl name='localeconv' filepath='/usr/include/locale.h' line='127' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- lconv* -->
      <return type-id='type-id-109'/>
    </function-decl>
    <!-- int isalnum(int) -->
    <function-decl name='isalnum' filepath='/usr/include/ctype.h' line='110' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isalpha(int) -->
    <function-decl name='isalpha' filepath='/usr/include/ctype.h' line='111' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iscntrl(int) -->
    <function-decl name='iscntrl' filepath='/usr/include/ctype.h' line='112' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isdigit(int) -->
    <function-decl name='isdigit' filepath='/usr/include/ctype.h' line='113' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isgraph(int) -->
    <function-decl name='isgraph' filepath='/usr/include/ctype.h' line='115' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int islower(int) -->
    <function-decl name='islower' filepath='/usr/include/ctype.h' line='114' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isprint(int) -->
    <function-decl name='isprint' filepath='/usr/include/ctype.h' line='116' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int ispunct(int) -->
    <function-decl name='ispunct' filepath='/usr/include/ctype.h' line='117' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isspace(int) -->
    <function-decl name='isspace' filepath='/usr/include/ctype.h' line='118' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isupper(int) -->
    <function-decl name='isupper' filepath='/usr/include/ctype.h' line='119' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isxdigit(int) -->
    <function-decl name='isxdigit' filepath='/usr/include/ctype.h' line='120' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int tolower(int) -->
    <function-decl name='tolower' filepath='/usr/include/ctype.h' line='124' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int toupper(int) -->
    <function-decl name='toupper' filepath='/usr/include/ctype.h' line='127' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isblank(int) -->
    <function-decl name='isblank' filepath='/usr/include/ctype.h' line='136' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void clearerr(FILE*) -->
    <function-decl name='clearerr' filepath='/usr/include/stdio.h' line='826' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int fclose(FILE*) -->
    <function-decl name='fclose' filepath='/usr/include/stdio.h' line='237' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int feof(FILE*) -->
    <function-decl name='feof' filepath='/usr/include/stdio.h' line='828' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int ferror(FILE*) -->
    <function-decl name='ferror' filepath='/usr/include/stdio.h' line='830' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fflush(FILE*) -->
    <function-decl name='fflush' filepath='/usr/include/stdio.h' line='242' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fgetc(FILE*) -->
    <function-decl name='fgetc' filepath='/usr/include/stdio.h' line='531' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fgetpos(FILE* restrict, fpos_t* restrict) -->
    <function-decl name='fgetpos' filepath='/usr/include/stdio.h' line='798' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'fpos_t* restrict' -->
      <parameter type-id='type-id-116'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- char* fgets(char* restrict, int, FILE* restrict) -->
    <function-decl name='fgets' filepath='/usr/include/stdio.h' line='622' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- FILE* fopen(const char* restrict, const char* restrict) -->
    <function-decl name='fopen' filepath='/usr/include/stdio.h' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- FILE* -->
      <return type-id='type-id-111'/>
    </function-decl>
    <!-- int fprintf(FILE* restrict, const char* restrict, ...) -->
    <function-decl name='fprintf' filepath='/usr/include/stdio.h' line='356' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fputc(int, FILE*) -->
    <function-decl name='fputc' filepath='/usr/include/stdio.h' line='573' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fputs(const char* restrict, FILE* restrict) -->
    <function-decl name='fputs' filepath='/usr/include/stdio.h' line='689' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- size_t fread(void* restrict, size_t, size_t, FILE* restrict) -->
    <function-decl name='fread' filepath='/usr/include/stdio.h' line='709' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void* restrict' -->
      <parameter type-id='type-id-117'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- FILE* freopen(const char* restrict, const char* restrict, FILE* restrict) -->
    <function-decl name='freopen' filepath='/usr/include/stdio.h' line='278' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- FILE* -->
      <return type-id='type-id-111'/>
    </function-decl>
    <!-- int fscanf(FILE* restrict, const char* restrict, ...) -->
    <function-decl name='fscanf' filepath='/usr/include/stdio.h' line='425' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fseek(FILE*, long int, int) -->
    <function-decl name='fseek' filepath='/usr/include/stdio.h' line='749' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fsetpos(FILE*, const fpos_t*) -->
    <function-decl name='fsetpos' filepath='/usr/include/stdio.h' line='803' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- parameter of type 'const fpos_t*' -->
      <parameter type-id='type-id-119'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- long int ftell(FILE*) -->
    <function-decl name='ftell' filepath='/usr/include/stdio.h' line='754' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- size_t fwrite(void* restrict, size_t, size_t, FILE* restrict) -->
    <function-decl name='fwrite' filepath='/usr/include/stdio.h' line='715' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void* restrict' -->
      <parameter type-id='type-id-117'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- int getc(FILE*) -->
    <function-decl name='getc' filepath='/usr/include/stdio.h' line='532' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int getchar() -->
    <function-decl name='getchar' filepath='/usr/include/stdio.h' line='538' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- char* gets(char*) -->
    <function-decl name='gets' filepath='/usr/include/stdio.h' line='638' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-40'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- void perror(const char*) -->
    <function-decl name='perror' filepath='/usr/include/stdio.h' line='846' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int printf(const char* restrict, ...) -->
    <function-decl name='printf' filepath='/usr/include/stdio.h' line='362' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int putc(int, FILE*) -->
    <function-decl name='putc' filepath='/usr/include/stdio.h' line='574' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int putchar(int) -->
    <function-decl name='putchar' filepath='/usr/include/stdio.h' line='580' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int puts(const char*) -->
    <function-decl name='puts' filepath='/usr/include/stdio.h' line='695' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int remove(const char*) -->
    <function-decl name='remove' filepath='/usr/include/stdio.h' line='178' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int rename(const char*, const char*) -->
    <function-decl name='rename' filepath='/usr/include/stdio.h' line='180' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void rewind(FILE*) -->
    <function-decl name='rewind' filepath='/usr/include/stdio.h' line='759' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int scanf(const char* restrict, ...) -->
    <function-decl name='scanf' filepath='/usr/include/stdio.h' line='431' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void setbuf(FILE* restrict, char* restrict) -->
    <function-decl name='setbuf' filepath='/usr/include/stdio.h' line='332' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int setvbuf(FILE* restrict, char* restrict, int, size_t) -->
    <function-decl name='setvbuf' filepath='/usr/include/stdio.h' line='336' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int sprintf(char* restrict, const char* restrict, ...) -->
    <function-decl name='sprintf' filepath='/usr/include/stdio.h' line='364' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int sscanf(const char* restrict, const char* restrict, ...) -->
    <function-decl name='sscanf' filepath='/usr/include/stdio.h' line='433' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- FILE* tmpfile() -->
    <function-decl name='tmpfile' filepath='/usr/include/stdio.h' line='195' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- FILE* -->
      <return type-id='type-id-111'/>
    </function-decl>
    <!-- char* tmpnam(char*) -->
    <function-decl name='tmpnam' filepath='/usr/include/stdio.h' line='209' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-40'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- int ungetc(int, FILE*) -->
    <function-decl name='ungetc' filepath='/usr/include/stdio.h' line='702' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vfprintf(FILE* restrict, const char* restrict, __va_list_tag*) -->
    <function-decl name='vfprintf' filepath='/usr/include/stdio.h' line='371' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vprintf(const char* restrict, __va_list_tag*) -->
    <function-decl name='vprintf' filepath='/usr/include/stdio.h' line='377' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vsprintf(char* restrict, const char* restrict, __va_list_tag*) -->
    <function-decl name='vsprintf' filepath='/usr/include/stdio.h' line='379' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int snprintf(char* restrict, size_t, const char* restrict, ...) -->
    <function-decl name='snprintf' filepath='/usr/include/stdio.h' line='386' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vfscanf(FILE* restrict, const char* restrict, __va_list_tag*) -->
    <function-decl name='vfscanf' filepath='/usr/include/stdio.h' line='471' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vscanf(const char* restrict, __va_list_tag*) -->
    <function-decl name='vscanf' filepath='/usr/include/stdio.h' line='479' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vsnprintf(char* restrict, size_t, const char* restrict, __va_list_tag*) -->
    <function-decl name='vsnprintf' filepath='/usr/include/stdio.h' line='390' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vsscanf(const char* restrict, const char* restrict, __va_list_tag*) -->
    <function-decl name='vsscanf' filepath='/usr/include/stdio.h' line='483' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswalnum(wint_t) -->
    <function-decl name='iswalnum' filepath='/usr/include/wctype.h' line='111' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswalpha(wint_t) -->
    <function-decl name='iswalpha' filepath='/usr/include/wctype.h' line='117' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswblank(wint_t) -->
    <function-decl name='iswblank' filepath='/usr/include/wctype.h' line='162' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswcntrl(wint_t) -->
    <function-decl name='iswcntrl' filepath='/usr/include/wctype.h' line='120' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswctype(wint_t, wctype_t) -->
    <function-decl name='iswctype' filepath='/usr/include/wctype.h' line='175' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- parameter of type 'typedef wctype_t' -->
      <parameter type-id='type-id-120'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswdigit(wint_t) -->
    <function-decl name='iswdigit' filepath='/usr/include/wctype.h' line='124' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswgraph(wint_t) -->
    <function-decl name='iswgraph' filepath='/usr/include/wctype.h' line='128' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswlower(wint_t) -->
    <function-decl name='iswlower' filepath='/usr/include/wctype.h' line='133' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswprint(wint_t) -->
    <function-decl name='iswprint' filepath='/usr/include/wctype.h' line='136' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswpunct(wint_t) -->
    <function-decl name='iswpunct' filepath='/usr/include/wctype.h' line='141' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswspace(wint_t) -->
    <function-decl name='iswspace' filepath='/usr/include/wctype.h' line='146' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswupper(wint_t) -->
    <function-decl name='iswupper' filepath='/usr/include/wctype.h' line='151' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswxdigit(wint_t) -->
    <function-decl name='iswxdigit' filepath='/usr/include/wctype.h' line='156' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wint_t towctrans(wint_t, wctrans_t) -->
    <function-decl name='towctrans' filepath='/usr/include/wctype.h' line='221' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- parameter of type 'typedef wctrans_t' -->
      <parameter type-id='type-id-124'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wint_t towlower(wint_t) -->
    <function-decl name='towlower' filepath='/usr/include/wctype.h' line='194' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wint_t towupper(wint_t) -->
    <function-decl name='towupper' filepath='/usr/include/wctype.h' line='197' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wctrans_t wctrans(const char*) -->
    <function-decl name='wctrans' filepath='/usr/include/wctype.h' line='218' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- typedef wctrans_t -->
      <return type-id='type-id-124'/>
    </function-decl>
    <!-- wctype_t wctype(const char*) -->
    <function-decl name='wctype' filepath='/usr/include/wctype.h' line='171' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- typedef wctype_t -->
      <return type-id='type-id-120'/>
    </function-decl>
    <!-- clock_t clock() -->
    <function-decl name='clock' filepath='/usr/include/time.h' line='189' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- typedef clock_t -->
      <return type-id='type-id-126'/>
    </function-decl>
    <!-- double difftime(time_t, time_t) -->
    <function-decl name='difftime' filepath='/usr/include/time.h' line='195' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef time_t' -->
      <parameter type-id='type-id-128'/>
      <!-- parameter of type 'typedef time_t' -->
      <parameter type-id='type-id-128'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- time_t mktime(tm*) -->
    <function-decl name='mktime' filepath='/usr/include/time.h' line='199' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'tm*' -->
      <parameter type-id='type-id-129'/>
      <!-- typedef time_t -->
      <return type-id='type-id-128'/>
    </function-decl>
    <!-- time_t time(time_t*) -->
    <function-decl name='time' filepath='/usr/include/time.h' line='192' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'time_t*' -->
      <parameter type-id='type-id-130'/>
      <!-- typedef time_t -->
      <return type-id='type-id-128'/>
    </function-decl>
    <!-- char* asctime(const tm*) -->
    <function-decl name='asctime' filepath='/usr/include/time.h' line='261' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const tm*' -->
      <parameter type-id='type-id-102'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- char* ctime(const time_t*) -->
    <function-decl name='ctime' filepath='/usr/include/time.h' line='264' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const time_t*' -->
      <parameter type-id='type-id-132'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- tm* gmtime(const time_t*) -->
    <function-decl name='gmtime' filepath='/usr/include/time.h' line='239' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const time_t*' -->
      <parameter type-id='type-id-132'/>
      <!-- tm* -->
      <return type-id='type-id-129'/>
    </function-decl>
    <!-- tm* localtime(const time_t*) -->
    <function-decl name='localtime' filepath='/usr/include/time.h' line='243' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const time_t*' -->
      <parameter type-id='type-id-132'/>
      <!-- tm* -->
      <return type-id='type-id-129'/>
    </function-decl>
    <!-- size_t strftime(char* restrict, size_t, const char* restrict, const tm* restrict) -->
    <function-decl name='strftime' filepath='/usr/include/time.h' line='205' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'const tm* restrict' -->
      <parameter type-id='type-id-103'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>

    <!-- double acos(double) -->
    <function-decl name='acos' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='54' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double asin(double) -->
    <function-decl name='asin' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='56' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double atan(double) -->
    <function-decl name='atan' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='58' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double atan2(double, double) -->
    <function-decl name='atan2' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='60' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double ceil(double) -->
    <function-decl name='ceil' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='178' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double cos(double) -->
    <function-decl name='cos' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='63' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double cosh(double) -->
    <function-decl name='cosh' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='72' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double exp(double) -->
    <function-decl name='exp' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='100' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double fabs(double) -->
    <function-decl name='fabs' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='181' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double floor(double) -->
    <function-decl name='floor' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='184' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double fmod(double, double) -->
    <function-decl name='fmod' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='187' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double frexp(double, int*) -->
    <function-decl name='frexp' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='103' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='type-id-222'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double ldexp(double, int) -->
    <function-decl name='ldexp' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='106' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double log(double) -->
    <function-decl name='log' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='109' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double log10(double) -->
    <function-decl name='log10' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='112' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double modf(double, double*) -->
    <function-decl name='modf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='115' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double*' -->
      <parameter type-id='type-id-393'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double pow(double, double) -->
    <function-decl name='pow' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='153' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double sin(double) -->
    <function-decl name='sin' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='65' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double sinh(double) -->
    <function-decl name='sinh' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='74' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double sqrt(double) -->
    <function-decl name='sqrt' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='156' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double tan(double) -->
    <function-decl name='tan' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='67' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double tanh(double) -->
    <function-decl name='tanh' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='76' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- double acosh(double) -->
    <function-decl name='acosh' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='88' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float acoshf(float) -->
    <function-decl name='acoshf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='88' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double acoshl(long double) -->
    <function-decl name='acoshl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='88' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double asinh(double) -->
    <function-decl name='asinh' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='90' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float asinhf(float) -->
    <function-decl name='asinhf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='90' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double asinhl(long double) -->
    <function-decl name='asinhl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='90' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double atanh(double) -->
    <function-decl name='atanh' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='92' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float atanhf(float) -->
    <function-decl name='atanhf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='92' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double atanhl(long double) -->
    <function-decl name='atanhl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='92' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double cbrt(double) -->
    <function-decl name='cbrt' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='169' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float cbrtf(float) -->
    <function-decl name='cbrtf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='169' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double cbrtl(long double) -->
    <function-decl name='cbrtl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='169' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double copysign(double, double) -->
    <function-decl name='copysign' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='217' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float copysignf(float, float) -->
    <function-decl name='copysignf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='217' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double copysignl(long double, long double) -->
    <function-decl name='copysignl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='217' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double erf(double) -->
    <function-decl name='erf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='249' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float erff(float) -->
    <function-decl name='erff' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='249' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double erfl(long double) -->
    <function-decl name='erfl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='249' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double erfc(double) -->
    <function-decl name='erfc' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='250' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float erfcf(float) -->
    <function-decl name='erfcf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='250' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double erfcl(long double) -->
    <function-decl name='erfcl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='250' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double exp2(double) -->
    <function-decl name='exp2' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='141' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float exp2f(float) -->
    <function-decl name='exp2f' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='141' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double exp2l(long double) -->
    <function-decl name='exp2l' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='141' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double expm1(double) -->
    <function-decl name='expm1' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='128' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float expm1f(float) -->
    <function-decl name='expm1f' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='128' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double expm1l(long double) -->
    <function-decl name='expm1l' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='128' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double fdim(double, double) -->
    <function-decl name='fdim' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='337' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float fdimf(float, float) -->
    <function-decl name='fdimf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='337' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double fdiml(long double, long double) -->
    <function-decl name='fdiml' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='337' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double fma(double, double, double) -->
    <function-decl name='fma' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='356' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float fmaf(float, float, float) -->
    <function-decl name='fmaf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='356' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double fmal(long double, long double, long double) -->
    <function-decl name='fmal' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='356' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double fmax(double, double) -->
    <function-decl name='fmax' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='340' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float fmaxf(float, float) -->
    <function-decl name='fmaxf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='340' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double fmaxl(long double, long double) -->
    <function-decl name='fmaxl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='340' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double fmin(double, double) -->
    <function-decl name='fmin' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='343' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float fminf(float, float) -->
    <function-decl name='fminf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='343' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double fminl(long double, long double) -->
    <function-decl name='fminl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='343' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double hypot(double, double) -->
    <function-decl name='hypot' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='162' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float hypotf(float, float) -->
    <function-decl name='hypotf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='162' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double hypotl(long double, long double) -->
    <function-decl name='hypotl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='162' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- int ilogb(double) -->
    <function-decl name='ilogb' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='296' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int ilogbf(float) -->
    <function-decl name='ilogbf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='296' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int ilogbl(long double) -->
    <function-decl name='ilogbl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='296' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- double lgamma(double) -->
    <function-decl name='lgamma' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='251' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float lgammaf(float) -->
    <function-decl name='lgammaf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='251' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double lgammal(long double) -->
    <function-decl name='lgammal' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='251' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- long long int llrint(double) -->
    <function-decl name='llrint' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='327' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long int llrintf(float) -->
    <function-decl name='llrintf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='327' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long int llrintl(long double) -->
    <function-decl name='llrintl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='327' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long int llround(double) -->
    <function-decl name='llround' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='333' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long int llroundf(float) -->
    <function-decl name='llroundf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='333' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long int llroundl(long double) -->
    <function-decl name='llroundl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='333' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- double log1p(double) -->
    <function-decl name='log1p' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='131' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float log1pf(float) -->
    <function-decl name='log1pf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='131' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double log1pl(long double) -->
    <function-decl name='log1pl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='131' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double log2(double) -->
    <function-decl name='log2' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='144' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float log2f(float) -->
    <function-decl name='log2f' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='144' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double log2l(long double) -->
    <function-decl name='log2l' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='144' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double logb(double) -->
    <function-decl name='logb' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='134' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float logbf(float) -->
    <function-decl name='logbf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='134' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double logbl(long double) -->
    <function-decl name='logbl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='134' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- long int lrint(double) -->
    <function-decl name='lrint' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='325' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- long int lrintf(float) -->
    <function-decl name='lrintf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='325' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- long int lrintl(long double) -->
    <function-decl name='lrintl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='325' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- long int lround(double) -->
    <function-decl name='lround' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='331' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- long int lroundf(float) -->
    <function-decl name='lroundf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='331' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- long int lroundl(long double) -->
    <function-decl name='lroundl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='331' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- double nan(const char*) -->
    <function-decl name='nan' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='224' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float nanf(const char*) -->
    <function-decl name='nanf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='224' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double nanl(const char*) -->
    <function-decl name='nanl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='224' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double nearbyint(double) -->
    <function-decl name='nearbyint' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='305' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float nearbyintf(float) -->
    <function-decl name='nearbyintf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='305' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double nearbyintl(long double) -->
    <function-decl name='nearbyintl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='305' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double nextafter(double, double) -->
    <function-decl name='nextafter' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='282' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float nextafterf(float, float) -->
    <function-decl name='nextafterf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='282' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double nextafterl(long double, long double) -->
    <function-decl name='nextafterl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='282' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double nexttoward(double, long double) -->
    <function-decl name='nexttoward' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='284' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float nexttowardf(float, long double) -->
    <function-decl name='nexttowardf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='284' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double nexttowardl(long double, long double) -->
    <function-decl name='nexttowardl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='284' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double remainder(double, double) -->
    <function-decl name='remainder' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='288' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float remainderf(float, float) -->
    <function-decl name='remainderf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='288' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double remainderl(long double, long double) -->
    <function-decl name='remainderl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='288' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double remquo(double, double, int*) -->
    <function-decl name='remquo' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='318' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='type-id-222'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float remquof(float, float, int*) -->
    <function-decl name='remquof' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='318' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='type-id-222'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double remquol(long double, long double, int*) -->
    <function-decl name='remquol' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='318' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='type-id-222'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double rint(double) -->
    <function-decl name='rint' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='279' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float rintf(float) -->
    <function-decl name='rintf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='279' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double rintl(long double) -->
    <function-decl name='rintl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='279' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double round(double) -->
    <function-decl name='round' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='309' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float roundf(float) -->
    <function-decl name='roundf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='309' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double roundl(long double) -->
    <function-decl name='roundl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='309' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double scalbln(double, long int) -->
    <function-decl name='scalbln' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='301' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float scalblnf(float, long int) -->
    <function-decl name='scalblnf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='301' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double scalblnl(long double, long int) -->
    <function-decl name='scalblnl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='301' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double scalbn(double, int) -->
    <function-decl name='scalbn' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='292' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float scalbnf(float, int) -->
    <function-decl name='scalbnf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='292' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double scalbnl(long double, int) -->
    <function-decl name='scalbnl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='292' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double tgamma(double) -->
    <function-decl name='tgamma' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='258' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float tgammaf(float) -->
    <function-decl name='tgammaf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='258' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double tgammal(long double) -->
    <function-decl name='tgammal' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='258' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- double trunc(double) -->
    <function-decl name='trunc' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='313' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'double' -->
      <parameter type-id='type-id-53'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float truncf(float) -->
    <function-decl name='truncf' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='313' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'float' -->
      <parameter type-id='type-id-80'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double truncl(long double) -->
    <function-decl name='truncl' filepath='/usr/include/x86_64-linux-gnu/bits/mathcalls.h' line='313' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='type-id-81'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- void* memchr(void*, int, size_t) -->
    <function-decl name='memchr' filepath='/usr/include/string.h' line='78' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- int memcmp(void*, void*, size_t) -->
    <function-decl name='memcmp' filepath='/usr/include/string.h' line='69' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void* memcpy(void* restrict, void* restrict, size_t) -->
    <function-decl name='memcpy' filepath='/usr/include/string.h' line='46' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void* restrict' -->
      <parameter type-id='type-id-117'/>
      <!-- parameter of type 'void* restrict' -->
      <parameter type-id='type-id-117'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- void* memmove(void*, void*, size_t) -->
    <function-decl name='memmove' filepath='/usr/include/string.h' line='50' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- void* memset(void*, int, size_t) -->
    <function-decl name='memset' filepath='/usr/include/string.h' line='66' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- char* strcat(char* restrict, const char* restrict) -->
    <function-decl name='strcat' filepath='/usr/include/string.h' line='137' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- int strcmp(const char*, const char*) -->
    <function-decl name='strcmp' filepath='/usr/include/string.h' line='144' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int strcoll(const char*, const char*) -->
    <function-decl name='strcoll' filepath='/usr/include/string.h' line='151' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- char* strcpy(char* restrict, const char* restrict) -->
    <function-decl name='strcpy' filepath='/usr/include/string.h' line='129' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- size_t strcspn(const char*, const char*) -->
    <function-decl name='strcspn' filepath='/usr/include/string.h' line='284' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- char* strerror(int) -->
    <function-decl name='strerror' filepath='/usr/include/string.h' line='412' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- size_t strlen(const char*) -->
    <function-decl name='strlen' filepath='/usr/include/string.h' line='398' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- char* strncat(char* restrict, const char* restrict, size_t) -->
    <function-decl name='strncat' filepath='/usr/include/string.h' line='140' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- int strncmp(const char*, const char*, size_t) -->
    <function-decl name='strncmp' filepath='/usr/include/string.h' line='147' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- char* strncpy(char* restrict, const char* restrict, size_t) -->
    <function-decl name='strncpy' filepath='/usr/include/string.h' line='132' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- size_t strspn(const char*, const char*) -->
    <function-decl name='strspn' filepath='/usr/include/string.h' line='288' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- char* strtok(char* restrict, const char* restrict) -->
    <function-decl name='strtok' filepath='/usr/include/string.h' line='347' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- size_t strxfrm(char* restrict, const char* restrict, size_t) -->
    <function-decl name='strxfrm' filepath='/usr/include/string.h' line='154' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- const char* strchr(const char*, int) -->
    <function-decl name='strchr' filepath='/usr/include/string.h' line='217' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- const char* -->
      <return type-id='type-id-15'/>
    </function-decl>
    <!-- const char* strpbrk(const char*, const char*) -->
    <function-decl name='strpbrk' filepath='/usr/include/string.h' line='296' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- const char* -->
      <return type-id='type-id-15'/>
    </function-decl>
    <!-- const char* strrchr(const char*, int) -->
    <function-decl name='strrchr' filepath='/usr/include/string.h' line='244' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- const char* -->
      <return type-id='type-id-15'/>
    </function-decl>
    <!-- const char* strstr(const char*, const char*) -->
    <function-decl name='strstr' filepath='/usr/include/string.h' line='323' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- const char* -->
      <return type-id='type-id-15'/>
    </function-decl>

    <!-- __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >* -->
    <pointer-type-def type-id='type-id-479' size-in-bits='64' id='type-id-483'/>
    <!-- const wchar_t* const -->
    <qualified-type-def type-id='type-id-74' const='yes' id='type-id-487'/>
    <!-- const wchar_t* const& -->
    <reference-type-def kind='lvalue' type-id='type-id-487' size-in-bits='64' id='type-id-484'/>
    <!-- const wchar_t& -->
    <reference-type-def kind='lvalue' type-id='type-id-73' size-in-bits='64' id='type-id-476'/>
    <!-- const __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> > -->
    <qualified-type-def type-id='type-id-479' const='yes' id='type-id-488'/>
    <!-- const __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >* -->
    <pointer-type-def type-id='type-id-488' size-in-bits='64' id='type-id-485'/>
    <!-- __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >& -->
    <reference-type-def kind='lvalue' type-id='type-id-479' size-in-bits='64' id='type-id-486'/>
  </abi-instr>
  <abi-instr version='1.0' address-size='64' path='src/third_party/boost-1.56.0/libs/filesystem/src/utf8_codecvt_facet.cpp' language='LANG_C_plus_plus'>
    <!-- namespace boost -->
    <namespace-decl name='boost'>
      <!-- namespace boost::filesystem -->
      <namespace-decl name='filesystem'>
        <!-- namespace boost::filesystem::detail -->
        <namespace-decl name='detail'>
          <!-- struct boost::filesystem::detail::utf8_codecvt_facet -->
          <class-decl name='utf8_codecvt_facet' size-in-bits='192' is-struct='yes' visibility='default' filepath='src/third_party/boost-1.56.0/boost/detail/utf8_codecvt_facet.hpp' line='106' column='1' id='type-id-489'>
          <!-- class std::codecvt<wchar_t, char, __mbstate_t> -->
            <base-class access='public' layout-offset-in-bits='0' type-id='type-id-155'/>
            <member-function access='public' constructor='yes'>
              <!-- boost::filesystem::detail::utf8_codecvt_facet::utf8_codecvt_facet(std::size_t) -->
              <function-decl name='utf8_codecvt_facet' filepath='src/third_party/boost-1.56.0/boost/detail/utf8_codecvt_facet.hpp' line='110' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type 'boost::filesystem::detail::utf8_codecvt_facet*' -->
                <parameter type-id='type-id-490' is-artificial='yes'/>
                <!-- parameter of type 'typedef std::size_t' -->
                <parameter type-id='type-id-138'/>
                <!-- void -->
                <return type-id='type-id-8'/>
              </function-decl>
            </member-function>
            <member-function access='protected'>
              <!-- bool boost::filesystem::detail::utf8_codecvt_facet::invalid_continuing_octet(unsigned char) -->
              <function-decl name='invalid_continuing_octet' mangled-name='_ZNK5boost10filesystem6detail18utf8_codecvt_facet24invalid_continuing_octetEh' filepath='src/third_party/boost-1.56.0/boost/detail/utf8_codecvt_facet.hpp' line='134' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10filesystem6detail18utf8_codecvt_facet24invalid_continuing_octetEh'>
                <!-- implicit parameter of type 'const boost::filesystem::detail::utf8_codecvt_facet*' -->
                <parameter type-id='type-id-491' is-artificial='yes'/>
                <!-- parameter of type 'unsigned char' -->
                <parameter type-id='type-id-492'/>
                <!-- bool -->
                <return type-id='type-id-11'/>
              </function-decl>
            </member-function>
            <member-function access='protected'>
              <!-- bool boost::filesystem::detail::utf8_codecvt_facet::invalid_leading_octet(unsigned char) -->
              <function-decl name='invalid_leading_octet' mangled-name='_ZNK5boost10filesystem6detail18utf8_codecvt_facet21invalid_leading_octetEh' filepath='src/third_party/boost-1.56.0/boost/detail/utf8_codecvt_facet.hpp' line='138' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10filesystem6detail18utf8_codecvt_facet21invalid_leading_octetEh'>
                <!-- implicit parameter of type 'const boost::filesystem::detail::utf8_codecvt_facet*' -->
                <parameter type-id='type-id-491' is-artificial='yes'/>
                <!-- parameter of type 'unsigned char' -->
                <parameter type-id='type-id-492'/>
                <!-- bool -->
                <return type-id='type-id-11'/>
              </function-decl>
            </member-function>
            <member-function access='protected' static='yes'>
              <!-- unsigned int boost::filesystem::detail::utf8_codecvt_facet::get_cont_octet_count() -->
              <function-decl name='get_cont_octet_count' mangled-name='_ZN5boost10filesystem6detail18utf8_codecvt_facet20get_cont_octet_countEh' filepath='src/third_party/boost-1.56.0/boost/detail/utf8_codecvt_facet.hpp' line='144' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail18utf8_codecvt_facet20get_cont_octet_countEh'>
                <!-- parameter of type 'unsigned char' -->
                <parameter type-id='type-id-492'/>
                <!-- unsigned int -->
                <return type-id='type-id-69'/>
              </function-decl>
            </member-function>
            <member-function access='protected' static='yes'>
              <!-- unsigned int boost::filesystem::detail::utf8_codecvt_facet::get_octet_count() -->
              <function-decl name='get_octet_count' mangled-name='_ZN5boost10filesystem6detail18utf8_codecvt_facet15get_octet_countEh' filepath='src/third_party/boost-1.56.0/boost/detail/utf8_codecvt_facet.hpp' line='148' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN5boost10filesystem6detail18utf8_codecvt_facet15get_octet_countEh'>
                <!-- parameter of type 'unsigned char' -->
                <parameter type-id='type-id-492'/>
                <!-- unsigned int -->
                <return type-id='type-id-69'/>
              </function-decl>
            </member-function>
            <member-function access='protected'>
              <!-- int boost::filesystem::detail::utf8_codecvt_facet::get_cont_octet_out_count(wchar_t) -->
              <function-decl name='get_cont_octet_out_count' mangled-name='_ZNK5boost10filesystem6detail18utf8_codecvt_facet24get_cont_octet_out_countEw' filepath='src/third_party/boost-1.56.0/boost/detail/utf8_codecvt_facet.hpp' line='152' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10filesystem6detail18utf8_codecvt_facet24get_cont_octet_out_countEw'>
                <!-- implicit parameter of type 'const boost::filesystem::detail::utf8_codecvt_facet*' -->
                <parameter type-id='type-id-491' is-artificial='yes'/>
                <!-- parameter of type 'wchar_t' -->
                <parameter type-id='type-id-65'/>
                <!-- int -->
                <return type-id='type-id-5'/>
              </function-decl>
            </member-function>
            <member-function access='protected' vtable-offset='2'>
              <!-- std::codecvt_base::result boost::filesystem::detail::utf8_codecvt_facet::do_out(mbstate_t&, const wchar_t*, const wchar_t*, const wchar_t*&, char*, char*, char*&) -->
              <function-decl name='do_out' mangled-name='_ZNK5boost10filesystem6detail18utf8_codecvt_facet6do_outER11__mbstate_tPKwS6_RS6_PcS8_RS8_' filepath='src/third_party/boost-1.56.0/boost/detail/utf8_codecvt_facet.hpp' line='124' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10filesystem6detail18utf8_codecvt_facet6do_outER11__mbstate_tPKwS6_RS6_PcS8_RS8_'>
                <!-- implicit parameter of type 'const boost::filesystem::detail::utf8_codecvt_facet*' -->
                <parameter type-id='type-id-491' is-artificial='yes'/>
                <!-- parameter of type 'mbstate_t&' -->
                <parameter type-id='type-id-493'/>
                <!-- parameter of type 'const wchar_t*' -->
                <parameter type-id='type-id-74'/>
                <!-- parameter of type 'const wchar_t*' -->
                <parameter type-id='type-id-74'/>
                <!-- parameter of type 'const wchar_t*&' -->
                <parameter type-id='type-id-494'/>
                <!-- parameter of type 'char*' -->
                <parameter type-id='type-id-40'/>
                <!-- parameter of type 'char*' -->
                <parameter type-id='type-id-40'/>
                <!-- parameter of type 'char*&' -->
                <parameter type-id='type-id-495'/>
                <!-- enum std::codecvt_base::result -->
                <return type-id='type-id-445'/>
              </function-decl>
            </member-function>
            <member-function access='protected' vtable-offset='3'>
              <!-- std::codecvt_base::result boost::filesystem::detail::utf8_codecvt_facet::do_unshift(mbstate_t&, char*, char*, char*&) -->
              <function-decl name='do_unshift' mangled-name='_ZNK5boost10filesystem6detail18utf8_codecvt_facet10do_unshiftER11__mbstate_tPcS5_RS5_' filepath='src/third_party/boost-1.56.0/boost/detail/utf8_codecvt_facet.hpp' line='159' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10filesystem6detail18utf8_codecvt_facet10do_unshiftER11__mbstate_tPcS5_RS5_'>
                <!-- implicit parameter of type 'const boost::filesystem::detail::utf8_codecvt_facet*' -->
                <parameter type-id='type-id-491' is-artificial='yes'/>
                <!-- parameter of type 'mbstate_t&' -->
                <parameter type-id='type-id-493'/>
                <!-- parameter of type 'char*' -->
                <parameter type-id='type-id-40'/>
                <!-- parameter of type 'char*' -->
                <parameter type-id='type-id-40'/>
                <!-- parameter of type 'char*&' -->
                <parameter type-id='type-id-495'/>
                <!-- enum std::codecvt_base::result -->
                <return type-id='type-id-445'/>
              </function-decl>
            </member-function>
            <member-function access='protected' vtable-offset='4'>
              <!-- std::codecvt_base::result boost::filesystem::detail::utf8_codecvt_facet::do_in(mbstate_t&, const char*, const char*, const char*&, wchar_t*, wchar_t*, wchar_t*&) -->
              <function-decl name='do_in' mangled-name='_ZNK5boost10filesystem6detail18utf8_codecvt_facet5do_inER11__mbstate_tPKcS6_RS6_PwS8_RS8_' filepath='src/third_party/boost-1.56.0/boost/detail/utf8_codecvt_facet.hpp' line='114' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10filesystem6detail18utf8_codecvt_facet5do_inER11__mbstate_tPKcS6_RS6_PwS8_RS8_'>
                <!-- implicit parameter of type 'const boost::filesystem::detail::utf8_codecvt_facet*' -->
                <parameter type-id='type-id-491' is-artificial='yes'/>
                <!-- parameter of type 'mbstate_t&' -->
                <parameter type-id='type-id-493'/>
                <!-- parameter of type 'const char*' -->
                <parameter type-id='type-id-15'/>
                <!-- parameter of type 'const char*' -->
                <parameter type-id='type-id-15'/>
                <!-- parameter of type 'const char*&' -->
                <parameter type-id='type-id-496'/>
                <!-- parameter of type 'wchar_t*' -->
                <parameter type-id='type-id-66'/>
                <!-- parameter of type 'wchar_t*' -->
                <parameter type-id='type-id-66'/>
                <!-- parameter of type 'wchar_t*&' -->
                <parameter type-id='type-id-497'/>
                <!-- enum std::codecvt_base::result -->
                <return type-id='type-id-445'/>
              </function-decl>
            </member-function>
            <member-function access='protected' vtable-offset='5'>
              <!-- int boost::filesystem::detail::utf8_codecvt_facet::do_encoding() -->
              <function-decl name='do_encoding' mangled-name='_ZNK5boost10filesystem6detail18utf8_codecvt_facet11do_encodingEv' filepath='src/third_party/boost-1.56.0/boost/detail/utf8_codecvt_facet.hpp' line='169' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10filesystem6detail18utf8_codecvt_facet11do_encodingEv'>
                <!-- implicit parameter of type 'const boost::filesystem::detail::utf8_codecvt_facet*' -->
                <parameter type-id='type-id-491' is-artificial='yes'/>
                <!-- int -->
                <return type-id='type-id-5'/>
              </function-decl>
            </member-function>
            <member-function access='protected' vtable-offset='6'>
              <!-- bool boost::filesystem::detail::utf8_codecvt_facet::do_always_noconv() -->
              <function-decl name='do_always_noconv' mangled-name='_ZNK5boost10filesystem6detail18utf8_codecvt_facet16do_always_noconvEv' filepath='src/third_party/boost-1.56.0/boost/detail/utf8_codecvt_facet.hpp' line='154' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10filesystem6detail18utf8_codecvt_facet16do_always_noconvEv'>
                <!-- implicit parameter of type 'const boost::filesystem::detail::utf8_codecvt_facet*' -->
                <parameter type-id='type-id-491' is-artificial='yes'/>
                <!-- bool -->
                <return type-id='type-id-11'/>
              </function-decl>
            </member-function>
            <member-function access='protected' vtable-offset='7'>
              <!-- int boost::filesystem::detail::utf8_codecvt_facet::do_length(mbstate_t&, const char*, const char*, std::size_t) -->
              <function-decl name='do_length' mangled-name='_ZNK5boost10filesystem6detail18utf8_codecvt_facet9do_lengthER11__mbstate_tPKcS6_m' filepath='src/third_party/boost-1.56.0/boost/detail/utf8_codecvt_facet.hpp' line='176' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10filesystem6detail18utf8_codecvt_facet9do_lengthER11__mbstate_tPKcS6_m'>
                <!-- implicit parameter of type 'const boost::filesystem::detail::utf8_codecvt_facet*' -->
                <parameter type-id='type-id-491' is-artificial='yes'/>
                <!-- parameter of type 'mbstate_t&' -->
                <parameter type-id='type-id-493'/>
                <!-- parameter of type 'const char*' -->
                <parameter type-id='type-id-15'/>
                <!-- parameter of type 'const char*' -->
                <parameter type-id='type-id-15'/>
                <!-- parameter of type 'typedef std::size_t' -->
                <parameter type-id='type-id-138'/>
                <!-- int -->
                <return type-id='type-id-5'/>
              </function-decl>
            </member-function>
            <member-function access='protected' vtable-offset='8'>
              <!-- int boost::filesystem::detail::utf8_codecvt_facet::do_max_length() -->
              <function-decl name='do_max_length' mangled-name='_ZNK5boost10filesystem6detail18utf8_codecvt_facet13do_max_lengthEv' filepath='src/third_party/boost-1.56.0/boost/detail/utf8_codecvt_facet.hpp' line='184' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNK5boost10filesystem6detail18utf8_codecvt_facet13do_max_lengthEv'>
                <!-- implicit parameter of type 'const boost::filesystem::detail::utf8_codecvt_facet*' -->
                <parameter type-id='type-id-491' is-artificial='yes'/>
                <!-- int -->
                <return type-id='type-id-5'/>
              </function-decl>
            </member-function>
          </class-decl>
        </namespace-decl>
      </namespace-decl>
    </namespace-decl>
    <!-- namespace std -->
    <namespace-decl name='std'>


      <!-- struct std::numeric_limits<wchar_t> -->
      <class-decl name='numeric_limits&lt;wchar_t&gt;' size-in-bits='8' is-struct='yes' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/limits' line='650' column='1' id='type-id-498'>
        <data-member access='public' static='yes'>
          <!-- static const bool std::numeric_limits<wchar_t>::is_specialized -->
          <var-decl name='is_specialized' type-id='type-id-391' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/limits' line='652' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const int std::numeric_limits<wchar_t>::digits -->
          <var-decl name='digits' type-id='type-id-499' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/limits' line='665' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const int std::numeric_limits<wchar_t>::digits10 -->
          <var-decl name='digits10' type-id='type-id-499' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/limits' line='666' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const int std::numeric_limits<wchar_t>::max_digits10 -->
          <var-decl name='max_digits10' type-id='type-id-499' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/limits' line='669' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const bool std::numeric_limits<wchar_t>::is_signed -->
          <var-decl name='is_signed' type-id='type-id-391' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/limits' line='671' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const bool std::numeric_limits<wchar_t>::is_integer -->
          <var-decl name='is_integer' type-id='type-id-391' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/limits' line='672' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const bool std::numeric_limits<wchar_t>::is_exact -->
          <var-decl name='is_exact' type-id='type-id-391' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/limits' line='673' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const int std::numeric_limits<wchar_t>::radix -->
          <var-decl name='radix' type-id='type-id-499' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/limits' line='674' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const int std::numeric_limits<wchar_t>::min_exponent -->
          <var-decl name='min_exponent' type-id='type-id-499' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/limits' line='682' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const int std::numeric_limits<wchar_t>::min_exponent10 -->
          <var-decl name='min_exponent10' type-id='type-id-499' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/limits' line='683' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const int std::numeric_limits<wchar_t>::max_exponent -->
          <var-decl name='max_exponent' type-id='type-id-499' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/limits' line='684' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const int std::numeric_limits<wchar_t>::max_exponent10 -->
          <var-decl name='max_exponent10' type-id='type-id-499' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/limits' line='685' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const bool std::numeric_limits<wchar_t>::has_infinity -->
          <var-decl name='has_infinity' type-id='type-id-391' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/limits' line='687' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const bool std::numeric_limits<wchar_t>::has_quiet_NaN -->
          <var-decl name='has_quiet_NaN' type-id='type-id-391' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/limits' line='688' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const bool std::numeric_limits<wchar_t>::has_signaling_NaN -->
          <var-decl name='has_signaling_NaN' type-id='type-id-391' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/limits' line='689' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const std::float_denorm_style std::numeric_limits<wchar_t>::has_denorm -->
          <var-decl name='has_denorm' type-id='type-id-500' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/limits' line='690' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const bool std::numeric_limits<wchar_t>::has_denorm_loss -->
          <var-decl name='has_denorm_loss' type-id='type-id-391' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/limits' line='692' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const bool std::numeric_limits<wchar_t>::is_iec559 -->
          <var-decl name='is_iec559' type-id='type-id-391' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/limits' line='706' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const bool std::numeric_limits<wchar_t>::is_bounded -->
          <var-decl name='is_bounded' type-id='type-id-391' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/limits' line='707' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const bool std::numeric_limits<wchar_t>::is_modulo -->
          <var-decl name='is_modulo' type-id='type-id-391' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/limits' line='708' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const bool std::numeric_limits<wchar_t>::traps -->
          <var-decl name='traps' type-id='type-id-391' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/limits' line='710' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const bool std::numeric_limits<wchar_t>::tinyness_before -->
          <var-decl name='tinyness_before' type-id='type-id-391' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/limits' line='711' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const std::float_round_style std::numeric_limits<wchar_t>::round_style -->
          <var-decl name='round_style' type-id='type-id-501' visibility='default' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/limits' line='712' column='1'/>
        </data-member>
        <member-function access='public' static='yes'>
          <!-- wchar_t std::numeric_limits<wchar_t>::min() -->
          <function-decl name='min' mangled-name='_ZNSt14numeric_limitsIwE3minEv' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/limits' line='655' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- wchar_t -->
            <return type-id='type-id-65'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- wchar_t std::numeric_limits<wchar_t>::max() -->
          <function-decl name='max' mangled-name='_ZNSt14numeric_limitsIwE3maxEv' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/limits' line='658' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZNSt14numeric_limitsIwE3maxEv'>
            <!-- wchar_t -->
            <return type-id='type-id-65'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- wchar_t std::numeric_limits<wchar_t>::lowest() -->
          <function-decl name='lowest' mangled-name='_ZNSt14numeric_limitsIwE6lowestEv' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/limits' line='662' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- wchar_t -->
            <return type-id='type-id-65'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- wchar_t std::numeric_limits<wchar_t>::epsilon() -->
          <function-decl name='epsilon' mangled-name='_ZNSt14numeric_limitsIwE7epsilonEv' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/limits' line='677' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- wchar_t -->
            <return type-id='type-id-65'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- wchar_t std::numeric_limits<wchar_t>::round_error() -->
          <function-decl name='round_error' mangled-name='_ZNSt14numeric_limitsIwE11round_errorEv' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/limits' line='680' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- wchar_t -->
            <return type-id='type-id-65'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- wchar_t std::numeric_limits<wchar_t>::infinity() -->
          <function-decl name='infinity' mangled-name='_ZNSt14numeric_limitsIwE8infinityEv' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/limits' line='695' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- wchar_t -->
            <return type-id='type-id-65'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- wchar_t std::numeric_limits<wchar_t>::quiet_NaN() -->
          <function-decl name='quiet_NaN' mangled-name='_ZNSt14numeric_limitsIwE9quiet_NaNEv' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/limits' line='698' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- wchar_t -->
            <return type-id='type-id-65'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- wchar_t std::numeric_limits<wchar_t>::signaling_NaN() -->
          <function-decl name='signaling_NaN' mangled-name='_ZNSt14numeric_limitsIwE13signaling_NaNEv' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/limits' line='701' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- wchar_t -->
            <return type-id='type-id-65'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- wchar_t std::numeric_limits<wchar_t>::denorm_min() -->
          <function-decl name='denorm_min' mangled-name='_ZNSt14numeric_limitsIwE10denorm_minEv' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/limits' line='704' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- wchar_t -->
            <return type-id='type-id-65'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- enum std::float_denorm_style -->
      <enum-decl name='float_denorm_style' id='type-id-502'>
        <underlying-type type-id='type-id-187'/>
        <enumerator name='denorm_indeterminate' value='-1'/>
        <enumerator name='denorm_absent' value='0'/>
        <enumerator name='denorm_present' value='1'/>
      </enum-decl>
      <!-- enum std::float_round_style -->
      <enum-decl name='float_round_style' id='type-id-503'>
        <underlying-type type-id='type-id-187'/>
        <enumerator name='round_indeterminate' value='-1'/>
        <enumerator name='round_toward_zero' value='0'/>
        <enumerator name='round_to_nearest' value='1'/>
        <enumerator name='round_toward_infinity' value='2'/>
        <enumerator name='round_toward_neg_infinity' value='3'/>
      </enum-decl>
    </namespace-decl>
    <!-- boost::filesystem::detail::utf8_codecvt_facet* -->
    <pointer-type-def type-id='type-id-489' size-in-bits='64' id='type-id-490'/>
    <!-- const boost::filesystem::detail::utf8_codecvt_facet -->
    <qualified-type-def type-id='type-id-489' const='yes' id='type-id-504'/>
    <!-- const boost::filesystem::detail::utf8_codecvt_facet* -->
    <pointer-type-def type-id='type-id-504' size-in-bits='64' id='type-id-491'/>
    <!-- mbstate_t& -->
    <reference-type-def kind='lvalue' type-id='type-id-90' size-in-bits='64' id='type-id-493'/>
    <!-- const char*& -->
    <reference-type-def kind='lvalue' type-id='type-id-15' size-in-bits='64' id='type-id-496'/>
    <!-- wchar_t*& -->
    <reference-type-def kind='lvalue' type-id='type-id-66' size-in-bits='64' id='type-id-497'/>
    <!-- const wchar_t*& -->
    <reference-type-def kind='lvalue' type-id='type-id-74' size-in-bits='64' id='type-id-494'/>
    <!-- char*& -->
    <reference-type-def kind='lvalue' type-id='type-id-40' size-in-bits='64' id='type-id-495'/>
    <!-- unsigned char -->
    <type-decl name='unsigned char' size-in-bits='8' id='type-id-492'/>
    <!-- void abort() -->
    <function-decl name='abort' filepath='/usr/include/stdlib.h' line='515' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int abs(int) -->
    <function-decl name='abs' filepath='/usr/include/stdlib.h' line='774' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int atexit(void ()*) -->
    <function-decl name='atexit' filepath='/usr/include/stdlib.h' line='519' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void ()*' -->
      <parameter type-id='type-id-4'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int at_quick_exit(void ()*) -->
    <function-decl name='at_quick_exit' filepath='/usr/include/stdlib.h' line='524' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void ()*' -->
      <parameter type-id='type-id-4'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- double atof(const char*) -->
    <function-decl name='atof' filepath='/usr/include/stdlib.h' line='144' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- int atoi(const char*) -->
    <function-decl name='atoi' filepath='/usr/include/stdlib.h' line='147' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- long int atol(const char*) -->
    <function-decl name='atol' filepath='/usr/include/stdlib.h' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- void* bsearch(void*, void*, size_t, size_t, __compar_fn_t) -->
    <function-decl name='bsearch' filepath='/usr/include/stdlib.h' line='754' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef __compar_fn_t' -->
      <parameter type-id='type-id-60'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- void* calloc(size_t, size_t) -->
    <function-decl name='calloc' filepath='/usr/include/stdlib.h' line='468' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- div_t div(int, int) -->
    <function-decl name='div' filepath='/usr/include/stdlib.h' line='788' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- typedef div_t -->
      <return type-id='type-id-61'/>
    </function-decl>
    <!-- void exit(int) -->
    <function-decl name='exit' filepath='/usr/include/stdlib.h' line='543' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- void free(void*) -->
    <function-decl name='free' filepath='/usr/include/stdlib.h' line='483' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- char* getenv(const char*) -->
    <function-decl name='getenv' filepath='/usr/include/stdlib.h' line='564' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- long int labs(long int) -->
    <function-decl name='labs' filepath='/usr/include/stdlib.h' line='775' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- ldiv_t ldiv(long int, long int) -->
    <function-decl name='ldiv' filepath='/usr/include/stdlib.h' line='790' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- typedef ldiv_t -->
      <return type-id='type-id-63'/>
    </function-decl>
    <!-- void* malloc(size_t) -->
    <function-decl name='malloc' filepath='/usr/include/stdlib.h' line='466' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- int mblen(const char*, size_t) -->
    <function-decl name='mblen' filepath='/usr/include/stdlib.h' line='862' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- size_t mbstowcs(wchar_t* restrict, const char* restrict, size_t) -->
    <function-decl name='mbstowcs' filepath='/usr/include/stdlib.h' line='873' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- int mbtowc(wchar_t* restrict, const char* restrict, size_t) -->
    <function-decl name='mbtowc' filepath='/usr/include/stdlib.h' line='865' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void qsort(void*, size_t, size_t, __compar_fn_t) -->
    <function-decl name='qsort' filepath='/usr/include/stdlib.h' line='764' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef __compar_fn_t' -->
      <parameter type-id='type-id-60'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- void quick_exit(int) -->
    <function-decl name='quick_exit' filepath='/usr/include/stdlib.h' line='549' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int rand() -->
    <function-decl name='rand' filepath='/usr/include/stdlib.h' line='374' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void* realloc(void*, size_t) -->
    <function-decl name='realloc' filepath='/usr/include/stdlib.h' line='480' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- void srand(unsigned int) -->
    <function-decl name='srand' filepath='/usr/include/stdlib.h' line='376' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-69'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- double strtod(const char* restrict, char** restrict) -->
    <function-decl name='strtod' filepath='/usr/include/stdlib.h' line='164' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- long int strtol(const char* restrict, char** restrict, int) -->
    <function-decl name='strtol' filepath='/usr/include/stdlib.h' line='183' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- unsigned long int strtoul(const char* restrict, char** restrict, int) -->
    <function-decl name='strtoul' filepath='/usr/include/stdlib.h' line='187' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- unsigned long int -->
      <return type-id='type-id-56'/>
    </function-decl>
    <!-- int system(const char*) -->
    <function-decl name='system' filepath='/usr/include/stdlib.h' line='716' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- size_t wcstombs(char* restrict, const wchar_t* restrict, size_t) -->
    <function-decl name='wcstombs' filepath='/usr/include/stdlib.h' line='876' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- int wctomb(char*, wchar_t) -->
    <function-decl name='wctomb' filepath='/usr/include/stdlib.h' line='869' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-40'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- namespace __gnu_cxx -->
    <namespace-decl name='__gnu_cxx'>
      <!-- lldiv_t __gnu_cxx::div(long long int, long long int) -->
      <function-decl name='div' mangled-name='_ZN9__gnu_cxx3divExx' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/cstdlib' line='214' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'long long int' -->
        <parameter type-id='type-id-76'/>
        <!-- parameter of type 'long long int' -->
        <parameter type-id='type-id-76'/>
        <!-- typedef lldiv_t -->
        <return type-id='type-id-77'/>
      </function-decl>
    </namespace-decl>
    <!-- void _Exit(int) -->
    <function-decl name='_Exit' filepath='/usr/include/stdlib.h' line='557' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- long long int llabs(long long int) -->
    <function-decl name='llabs' filepath='/usr/include/stdlib.h' line='779' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long long int' -->
      <parameter type-id='type-id-76'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- lldiv_t lldiv(long long int, long long int) -->
    <function-decl name='lldiv' filepath='/usr/include/stdlib.h' line='796' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long long int' -->
      <parameter type-id='type-id-76'/>
      <!-- parameter of type 'long long int' -->
      <parameter type-id='type-id-76'/>
      <!-- typedef lldiv_t -->
      <return type-id='type-id-77'/>
    </function-decl>
    <!-- long long int atoll(const char*) -->
    <function-decl name='atoll' filepath='/usr/include/stdlib.h' line='157' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long int strtoll(const char* restrict, char** restrict, int) -->
    <function-decl name='strtoll' filepath='/usr/include/stdlib.h' line='209' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long unsigned int strtoull(const char* restrict, char** restrict, int) -->
    <function-decl name='strtoull' filepath='/usr/include/stdlib.h' line='214' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long long unsigned int -->
      <return type-id='type-id-79'/>
    </function-decl>
    <!-- float strtof(const char* restrict, char** restrict) -->
    <function-decl name='strtof' filepath='/usr/include/stdlib.h' line='172' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double strtold(const char* restrict, char** restrict) -->
    <function-decl name='strtold' filepath='/usr/include/stdlib.h' line='175' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- char* setlocale(int, const char*) -->
    <function-decl name='setlocale' filepath='/usr/include/locale.h' line='124' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- lconv* localeconv() -->
    <function-decl name='localeconv' filepath='/usr/include/locale.h' line='127' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- lconv* -->
      <return type-id='type-id-109'/>
    </function-decl>
    <!-- wint_t btowc(int) -->
    <function-decl name='btowc' filepath='/usr/include/wchar.h' line='353' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wint_t fgetwc(__FILE*) -->
    <function-decl name='fgetwc' filepath='/usr/include/wchar.h' line='745' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wchar_t* fgetws(wchar_t* restrict, int, __FILE* restrict) -->
    <function-decl name='fgetws' filepath='/usr/include/wchar.h' line='774' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wint_t fputwc(wchar_t, __FILE*) -->
    <function-decl name='fputwc' filepath='/usr/include/wchar.h' line='759' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- int fputws(const wchar_t* restrict, __FILE* restrict) -->
    <function-decl name='fputws' filepath='/usr/include/wchar.h' line='781' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fwide(__FILE*, int) -->
    <function-decl name='fwide' filepath='/usr/include/wchar.h' line='587' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fwprintf(__FILE* restrict, const wchar_t* restrict, ...) -->
    <function-decl name='fwprintf' filepath='/usr/include/wchar.h' line='594' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fwscanf(__FILE* restrict, const wchar_t* restrict, ...) -->
    <function-decl name='fwscanf' filepath='/usr/include/wchar.h' line='635' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wint_t getwc(__FILE*) -->
    <function-decl name='getwc' filepath='/usr/include/wchar.h' line='746' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wint_t getwchar() -->
    <function-decl name='getwchar' filepath='/usr/include/wchar.h' line='752' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- size_t mbrlen(const char* restrict, size_t, mbstate_t* restrict) -->
    <function-decl name='mbrlen' filepath='/usr/include/wchar.h' line='376' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'mbstate_t* restrict' -->
      <parameter type-id='type-id-92'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- size_t mbrtowc(wchar_t* restrict, const char* restrict, size_t, mbstate_t* restrict) -->
    <function-decl name='mbrtowc' filepath='/usr/include/wchar.h' line='365' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'mbstate_t* restrict' -->
      <parameter type-id='type-id-92'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- int mbsinit(const mbstate_t*) -->
    <function-decl name='mbsinit' filepath='/usr/include/wchar.h' line='361' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const mbstate_t*' -->
      <parameter type-id='type-id-94'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- size_t mbsrtowcs(wchar_t* restrict, const char** restrict, size_t, mbstate_t* restrict) -->
    <function-decl name='mbsrtowcs' filepath='/usr/include/wchar.h' line='408' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const char** restrict' -->
      <parameter type-id='type-id-96'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'mbstate_t* restrict' -->
      <parameter type-id='type-id-92'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- wint_t putwc(wchar_t, __FILE*) -->
    <function-decl name='putwc' filepath='/usr/include/wchar.h' line='760' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wint_t putwchar(wchar_t) -->
    <function-decl name='putwchar' filepath='/usr/include/wchar.h' line='766' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- int swprintf(wchar_t* restrict, size_t, const wchar_t* restrict, ...) -->
    <function-decl name='swprintf' filepath='/usr/include/wchar.h' line='604' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int swscanf(const wchar_t* restrict, const wchar_t* restrict, ...) -->
    <function-decl name='swscanf' filepath='/usr/include/wchar.h' line='645' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wint_t ungetwc(wint_t, __FILE*) -->
    <function-decl name='ungetwc' filepath='/usr/include/wchar.h' line='789' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- int vfwprintf(__FILE* restrict, const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vfwprintf' filepath='/usr/include/wchar.h' line='612' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vfwscanf(__FILE* restrict, const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vfwscanf' filepath='/usr/include/wchar.h' line='689' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vswprintf(wchar_t* restrict, size_t, const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vswprintf' filepath='/usr/include/wchar.h' line='625' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vswscanf(const wchar_t* restrict, const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vswscanf' filepath='/usr/include/wchar.h' line='701' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vwprintf(const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vwprintf' filepath='/usr/include/wchar.h' line='620' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vwscanf(const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vwscanf' filepath='/usr/include/wchar.h' line='697' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- size_t wcrtomb(char* restrict, wchar_t, mbstate_t* restrict) -->
    <function-decl name='wcrtomb' filepath='/usr/include/wchar.h' line='370' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- parameter of type 'mbstate_t* restrict' -->
      <parameter type-id='type-id-92'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- wchar_t* wcscat(wchar_t* restrict, const wchar_t* restrict) -->
    <function-decl name='wcscat' filepath='/usr/include/wchar.h' line='155' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- int wcscmp(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcscmp' filepath='/usr/include/wchar.h' line='163' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int wcscoll(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcscoll' filepath='/usr/include/wchar.h' line='192' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wchar_t* wcscpy(wchar_t* restrict, const wchar_t* restrict) -->
    <function-decl name='wcscpy' filepath='/usr/include/wchar.h' line='147' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- size_t wcscspn(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcscspn' filepath='/usr/include/wchar.h' line='252' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- size_t wcsftime(wchar_t* restrict, size_t, const wchar_t* restrict, const tm* restrict) -->
    <function-decl name='wcsftime' filepath='/usr/include/wchar.h' line='855' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'const tm* restrict' -->
      <parameter type-id='type-id-103'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- size_t wcslen(const wchar_t*) -->
    <function-decl name='wcslen' filepath='/usr/include/wchar.h' line='287' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- wchar_t* wcsncat(wchar_t* restrict, const wchar_t* restrict, size_t) -->
    <function-decl name='wcsncat' filepath='/usr/include/wchar.h' line='158' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- int wcsncmp(const wchar_t*, const wchar_t*, size_t) -->
    <function-decl name='wcsncmp' filepath='/usr/include/wchar.h' line='166' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wchar_t* wcsncpy(wchar_t* restrict, const wchar_t* restrict, size_t) -->
    <function-decl name='wcsncpy' filepath='/usr/include/wchar.h' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- size_t wcsrtombs(char* restrict, const wchar_t** restrict, size_t, mbstate_t* restrict) -->
    <function-decl name='wcsrtombs' filepath='/usr/include/wchar.h' line='414' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const wchar_t** restrict' -->
      <parameter type-id='type-id-105'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'mbstate_t* restrict' -->
      <parameter type-id='type-id-92'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- size_t wcsspn(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcsspn' filepath='/usr/include/wchar.h' line='256' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- double wcstod(const wchar_t* restrict, wchar_t** restrict) -->
    <function-decl name='wcstod' filepath='/usr/include/wchar.h' line='450' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float wcstof(const wchar_t* restrict, wchar_t** restrict) -->
    <function-decl name='wcstof' filepath='/usr/include/wchar.h' line='457' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- wchar_t* wcstok(wchar_t* restrict, const wchar_t* restrict, wchar_t** restrict) -->
    <function-decl name='wcstok' filepath='/usr/include/wchar.h' line='282' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- long int wcstol(const wchar_t* restrict, wchar_t** restrict, int) -->
    <function-decl name='wcstol' filepath='/usr/include/wchar.h' line='468' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- unsigned long int wcstoul(const wchar_t* restrict, wchar_t** restrict, int) -->
    <function-decl name='wcstoul' filepath='/usr/include/wchar.h' line='473' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- unsigned long int -->
      <return type-id='type-id-56'/>
    </function-decl>
    <!-- size_t wcsxfrm(wchar_t* restrict, const wchar_t* restrict, size_t) -->
    <function-decl name='wcsxfrm' filepath='/usr/include/wchar.h' line='196' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- int wctob(wint_t) -->
    <function-decl name='wctob' filepath='/usr/include/wchar.h' line='357' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int wmemcmp(const wchar_t*, const wchar_t*, size_t) -->
    <function-decl name='wmemcmp' filepath='/usr/include/wchar.h' line='325' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wchar_t* wmemcpy(wchar_t* restrict, const wchar_t* restrict, size_t) -->
    <function-decl name='wmemcpy' filepath='/usr/include/wchar.h' line='329' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wmemmove(wchar_t*, const wchar_t*, size_t) -->
    <function-decl name='wmemmove' filepath='/usr/include/wchar.h' line='334' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t*' -->
      <parameter type-id='type-id-66'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wmemset(wchar_t*, wchar_t, size_t) -->
    <function-decl name='wmemset' filepath='/usr/include/wchar.h' line='338' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t*' -->
      <parameter type-id='type-id-66'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- int wprintf(const wchar_t* restrict, ...) -->
    <function-decl name='wprintf' filepath='/usr/include/wchar.h' line='601' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int wscanf(const wchar_t* restrict, ...) -->
    <function-decl name='wscanf' filepath='/usr/include/wchar.h' line='642' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wchar_t* wcschr(const wchar_t*, wchar_t) -->
    <function-decl name='wcschr' filepath='/usr/include/wchar.h' line='227' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wcspbrk(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcspbrk' filepath='/usr/include/wchar.h' line='266' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wcsrchr(const wchar_t*, wchar_t) -->
    <function-decl name='wcsrchr' filepath='/usr/include/wchar.h' line='237' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wcsstr(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcsstr' filepath='/usr/include/wchar.h' line='277' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wmemchr(const wchar_t*, wchar_t, size_t) -->
    <function-decl name='wmemchr' filepath='/usr/include/wchar.h' line='320' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- long double wcstold(const wchar_t* restrict, wchar_t** restrict) -->
    <function-decl name='wcstold' filepath='/usr/include/wchar.h' line='459' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- long long int wcstoll(const wchar_t* restrict, wchar_t** restrict, int) -->
    <function-decl name='wcstoll' filepath='/usr/include/wchar.h' line='483' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long unsigned int wcstoull(const wchar_t* restrict, wchar_t** restrict, int) -->
    <function-decl name='wcstoull' filepath='/usr/include/wchar.h' line='490' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long long unsigned int -->
      <return type-id='type-id-79'/>
    </function-decl>
    <!-- int isalnum(int) -->
    <function-decl name='isalnum' filepath='/usr/include/ctype.h' line='110' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isalpha(int) -->
    <function-decl name='isalpha' filepath='/usr/include/ctype.h' line='111' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iscntrl(int) -->
    <function-decl name='iscntrl' filepath='/usr/include/ctype.h' line='112' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isdigit(int) -->
    <function-decl name='isdigit' filepath='/usr/include/ctype.h' line='113' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isgraph(int) -->
    <function-decl name='isgraph' filepath='/usr/include/ctype.h' line='115' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int islower(int) -->
    <function-decl name='islower' filepath='/usr/include/ctype.h' line='114' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isprint(int) -->
    <function-decl name='isprint' filepath='/usr/include/ctype.h' line='116' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int ispunct(int) -->
    <function-decl name='ispunct' filepath='/usr/include/ctype.h' line='117' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isspace(int) -->
    <function-decl name='isspace' filepath='/usr/include/ctype.h' line='118' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isupper(int) -->
    <function-decl name='isupper' filepath='/usr/include/ctype.h' line='119' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isxdigit(int) -->
    <function-decl name='isxdigit' filepath='/usr/include/ctype.h' line='120' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int tolower(int) -->
    <function-decl name='tolower' filepath='/usr/include/ctype.h' line='124' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int toupper(int) -->
    <function-decl name='toupper' filepath='/usr/include/ctype.h' line='127' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int isblank(int) -->
    <function-decl name='isblank' filepath='/usr/include/ctype.h' line='136' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>

    <!-- void clearerr(FILE*) -->
    <function-decl name='clearerr' filepath='/usr/include/stdio.h' line='826' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int fclose(FILE*) -->
    <function-decl name='fclose' filepath='/usr/include/stdio.h' line='237' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int feof(FILE*) -->
    <function-decl name='feof' filepath='/usr/include/stdio.h' line='828' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int ferror(FILE*) -->
    <function-decl name='ferror' filepath='/usr/include/stdio.h' line='830' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fflush(FILE*) -->
    <function-decl name='fflush' filepath='/usr/include/stdio.h' line='242' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fgetc(FILE*) -->
    <function-decl name='fgetc' filepath='/usr/include/stdio.h' line='531' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fgetpos(FILE* restrict, fpos_t* restrict) -->
    <function-decl name='fgetpos' filepath='/usr/include/stdio.h' line='798' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'fpos_t* restrict' -->
      <parameter type-id='type-id-116'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- char* fgets(char* restrict, int, FILE* restrict) -->
    <function-decl name='fgets' filepath='/usr/include/stdio.h' line='622' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- FILE* fopen(const char* restrict, const char* restrict) -->
    <function-decl name='fopen' filepath='/usr/include/stdio.h' line='272' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- FILE* -->
      <return type-id='type-id-111'/>
    </function-decl>
    <!-- int fprintf(FILE* restrict, const char* restrict, ...) -->
    <function-decl name='fprintf' filepath='/usr/include/stdio.h' line='356' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fputc(int, FILE*) -->
    <function-decl name='fputc' filepath='/usr/include/stdio.h' line='573' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fputs(const char* restrict, FILE* restrict) -->
    <function-decl name='fputs' filepath='/usr/include/stdio.h' line='689' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- size_t fread(void* restrict, size_t, size_t, FILE* restrict) -->
    <function-decl name='fread' filepath='/usr/include/stdio.h' line='709' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void* restrict' -->
      <parameter type-id='type-id-117'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- FILE* freopen(const char* restrict, const char* restrict, FILE* restrict) -->
    <function-decl name='freopen' filepath='/usr/include/stdio.h' line='278' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- FILE* -->
      <return type-id='type-id-111'/>
    </function-decl>
    <!-- int fscanf(FILE* restrict, const char* restrict, ...) -->
    <function-decl name='fscanf' filepath='/usr/include/stdio.h' line='425' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fseek(FILE*, long int, int) -->
    <function-decl name='fseek' filepath='/usr/include/stdio.h' line='749' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fsetpos(FILE*, const fpos_t*) -->
    <function-decl name='fsetpos' filepath='/usr/include/stdio.h' line='803' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- parameter of type 'const fpos_t*' -->
      <parameter type-id='type-id-119'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- long int ftell(FILE*) -->
    <function-decl name='ftell' filepath='/usr/include/stdio.h' line='754' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- size_t fwrite(void* restrict, size_t, size_t, FILE* restrict) -->
    <function-decl name='fwrite' filepath='/usr/include/stdio.h' line='715' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void* restrict' -->
      <parameter type-id='type-id-117'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- int getc(FILE*) -->
    <function-decl name='getc' filepath='/usr/include/stdio.h' line='532' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int getchar() -->
    <function-decl name='getchar' filepath='/usr/include/stdio.h' line='538' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- char* gets(char*) -->
    <function-decl name='gets' filepath='/usr/include/stdio.h' line='638' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-40'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- void perror(const char*) -->
    <function-decl name='perror' filepath='/usr/include/stdio.h' line='846' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int printf(const char* restrict, ...) -->
    <function-decl name='printf' filepath='/usr/include/stdio.h' line='362' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int putc(int, FILE*) -->
    <function-decl name='putc' filepath='/usr/include/stdio.h' line='574' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int putchar(int) -->
    <function-decl name='putchar' filepath='/usr/include/stdio.h' line='580' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int puts(const char*) -->
    <function-decl name='puts' filepath='/usr/include/stdio.h' line='695' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int remove(const char*) -->
    <function-decl name='remove' filepath='/usr/include/stdio.h' line='178' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int rename(const char*, const char*) -->
    <function-decl name='rename' filepath='/usr/include/stdio.h' line='180' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void rewind(FILE*) -->
    <function-decl name='rewind' filepath='/usr/include/stdio.h' line='759' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int scanf(const char* restrict, ...) -->
    <function-decl name='scanf' filepath='/usr/include/stdio.h' line='431' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void setbuf(FILE* restrict, char* restrict) -->
    <function-decl name='setbuf' filepath='/usr/include/stdio.h' line='332' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int setvbuf(FILE* restrict, char* restrict, int, size_t) -->
    <function-decl name='setvbuf' filepath='/usr/include/stdio.h' line='336' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int sprintf(char* restrict, const char* restrict, ...) -->
    <function-decl name='sprintf' filepath='/usr/include/stdio.h' line='364' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int sscanf(const char* restrict, const char* restrict, ...) -->
    <function-decl name='sscanf' filepath='/usr/include/stdio.h' line='433' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- FILE* tmpfile() -->
    <function-decl name='tmpfile' filepath='/usr/include/stdio.h' line='195' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- FILE* -->
      <return type-id='type-id-111'/>
    </function-decl>
    <!-- char* tmpnam(char*) -->
    <function-decl name='tmpnam' filepath='/usr/include/stdio.h' line='209' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-40'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- int ungetc(int, FILE*) -->
    <function-decl name='ungetc' filepath='/usr/include/stdio.h' line='702' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-111'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vfprintf(FILE* restrict, const char* restrict, __va_list_tag*) -->
    <function-decl name='vfprintf' filepath='/usr/include/stdio.h' line='371' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vprintf(const char* restrict, __va_list_tag*) -->
    <function-decl name='vprintf' filepath='/usr/include/stdio.h' line='377' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vsprintf(char* restrict, const char* restrict, __va_list_tag*) -->
    <function-decl name='vsprintf' filepath='/usr/include/stdio.h' line='379' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int snprintf(char* restrict, size_t, const char* restrict, ...) -->
    <function-decl name='snprintf' filepath='/usr/include/stdio.h' line='386' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vfscanf(FILE* restrict, const char* restrict, __va_list_tag*) -->
    <function-decl name='vfscanf' filepath='/usr/include/stdio.h' line='471' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE* restrict' -->
      <parameter type-id='type-id-112'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vscanf(const char* restrict, __va_list_tag*) -->
    <function-decl name='vscanf' filepath='/usr/include/stdio.h' line='479' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vsnprintf(char* restrict, size_t, const char* restrict, __va_list_tag*) -->
    <function-decl name='vsnprintf' filepath='/usr/include/stdio.h' line='390' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vsscanf(const char* restrict, const char* restrict, __va_list_tag*) -->
    <function-decl name='vsscanf' filepath='/usr/include/stdio.h' line='483' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswalnum(wint_t) -->
    <function-decl name='iswalnum' filepath='/usr/include/wctype.h' line='111' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswalpha(wint_t) -->
    <function-decl name='iswalpha' filepath='/usr/include/wctype.h' line='117' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswblank(wint_t) -->
    <function-decl name='iswblank' filepath='/usr/include/wctype.h' line='162' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswcntrl(wint_t) -->
    <function-decl name='iswcntrl' filepath='/usr/include/wctype.h' line='120' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswctype(wint_t, wctype_t) -->
    <function-decl name='iswctype' filepath='/usr/include/wctype.h' line='175' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- parameter of type 'typedef wctype_t' -->
      <parameter type-id='type-id-120'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswdigit(wint_t) -->
    <function-decl name='iswdigit' filepath='/usr/include/wctype.h' line='124' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswgraph(wint_t) -->
    <function-decl name='iswgraph' filepath='/usr/include/wctype.h' line='128' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswlower(wint_t) -->
    <function-decl name='iswlower' filepath='/usr/include/wctype.h' line='133' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswprint(wint_t) -->
    <function-decl name='iswprint' filepath='/usr/include/wctype.h' line='136' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswpunct(wint_t) -->
    <function-decl name='iswpunct' filepath='/usr/include/wctype.h' line='141' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswspace(wint_t) -->
    <function-decl name='iswspace' filepath='/usr/include/wctype.h' line='146' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswupper(wint_t) -->
    <function-decl name='iswupper' filepath='/usr/include/wctype.h' line='151' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int iswxdigit(wint_t) -->
    <function-decl name='iswxdigit' filepath='/usr/include/wctype.h' line='156' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wint_t towctrans(wint_t, wctrans_t) -->
    <function-decl name='towctrans' filepath='/usr/include/wctype.h' line='221' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- parameter of type 'typedef wctrans_t' -->
      <parameter type-id='type-id-124'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wint_t towlower(wint_t) -->
    <function-decl name='towlower' filepath='/usr/include/wctype.h' line='194' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wint_t towupper(wint_t) -->
    <function-decl name='towupper' filepath='/usr/include/wctype.h' line='197' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wctrans_t wctrans(const char*) -->
    <function-decl name='wctrans' filepath='/usr/include/wctype.h' line='218' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- typedef wctrans_t -->
      <return type-id='type-id-124'/>
    </function-decl>
    <!-- wctype_t wctype(const char*) -->
    <function-decl name='wctype' filepath='/usr/include/wctype.h' line='171' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- typedef wctype_t -->
      <return type-id='type-id-120'/>
    </function-decl>
    <!-- clock_t clock() -->
    <function-decl name='clock' filepath='/usr/include/time.h' line='189' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- typedef clock_t -->
      <return type-id='type-id-126'/>
    </function-decl>
    <!-- double difftime(time_t, time_t) -->
    <function-decl name='difftime' filepath='/usr/include/time.h' line='195' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef time_t' -->
      <parameter type-id='type-id-128'/>
      <!-- parameter of type 'typedef time_t' -->
      <parameter type-id='type-id-128'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- time_t mktime(tm*) -->
    <function-decl name='mktime' filepath='/usr/include/time.h' line='199' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'tm*' -->
      <parameter type-id='type-id-129'/>
      <!-- typedef time_t -->
      <return type-id='type-id-128'/>
    </function-decl>
    <!-- time_t time(time_t*) -->
    <function-decl name='time' filepath='/usr/include/time.h' line='192' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'time_t*' -->
      <parameter type-id='type-id-130'/>
      <!-- typedef time_t -->
      <return type-id='type-id-128'/>
    </function-decl>
    <!-- char* asctime(const tm*) -->
    <function-decl name='asctime' filepath='/usr/include/time.h' line='261' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const tm*' -->
      <parameter type-id='type-id-102'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- char* ctime(const time_t*) -->
    <function-decl name='ctime' filepath='/usr/include/time.h' line='264' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const time_t*' -->
      <parameter type-id='type-id-132'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- tm* gmtime(const time_t*) -->
    <function-decl name='gmtime' filepath='/usr/include/time.h' line='239' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const time_t*' -->
      <parameter type-id='type-id-132'/>
      <!-- tm* -->
      <return type-id='type-id-129'/>
    </function-decl>
    <!-- tm* localtime(const time_t*) -->
    <function-decl name='localtime' filepath='/usr/include/time.h' line='243' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const time_t*' -->
      <parameter type-id='type-id-132'/>
      <!-- tm* -->
      <return type-id='type-id-129'/>
    </function-decl>
    <!-- size_t strftime(char* restrict, size_t, const char* restrict, const tm* restrict) -->
    <function-decl name='strftime' filepath='/usr/include/time.h' line='205' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'const tm* restrict' -->
      <parameter type-id='type-id-103'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- const int -->
    <qualified-type-def type-id='type-id-5' const='yes' id='type-id-499'/>
    <!-- const std::float_denorm_style -->
    <qualified-type-def type-id='type-id-502' const='yes' id='type-id-500'/>
    <!-- const std::float_round_style -->
    <qualified-type-def type-id='type-id-503' const='yes' id='type-id-501'/>

  </abi-instr>
  <abi-instr version='1.0' address-size='64' path='src/third_party/boost-1.56.0/libs/filesystem/src/windows_file_codecvt.cpp' language='LANG_C_plus_plus'>

    <!-- void abort() -->
    <function-decl name='abort' filepath='/usr/include/stdlib.h' line='515' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int abs(int) -->
    <function-decl name='abs' filepath='/usr/include/stdlib.h' line='774' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int atexit(void ()*) -->
    <function-decl name='atexit' filepath='/usr/include/stdlib.h' line='519' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void ()*' -->
      <parameter type-id='type-id-4'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int at_quick_exit(void ()*) -->
    <function-decl name='at_quick_exit' filepath='/usr/include/stdlib.h' line='524' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void ()*' -->
      <parameter type-id='type-id-4'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- double atof(const char*) -->
    <function-decl name='atof' filepath='/usr/include/stdlib.h' line='144' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- int atoi(const char*) -->
    <function-decl name='atoi' filepath='/usr/include/stdlib.h' line='147' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- long int atol(const char*) -->
    <function-decl name='atol' filepath='/usr/include/stdlib.h' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- void* bsearch(void*, void*, size_t, size_t, __compar_fn_t) -->
    <function-decl name='bsearch' filepath='/usr/include/stdlib.h' line='754' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef __compar_fn_t' -->
      <parameter type-id='type-id-60'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- void* calloc(size_t, size_t) -->
    <function-decl name='calloc' filepath='/usr/include/stdlib.h' line='468' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- div_t div(int, int) -->
    <function-decl name='div' filepath='/usr/include/stdlib.h' line='788' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- typedef div_t -->
      <return type-id='type-id-61'/>
    </function-decl>
    <!-- void exit(int) -->
    <function-decl name='exit' filepath='/usr/include/stdlib.h' line='543' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- void free(void*) -->
    <function-decl name='free' filepath='/usr/include/stdlib.h' line='483' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- char* getenv(const char*) -->
    <function-decl name='getenv' filepath='/usr/include/stdlib.h' line='564' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- char* -->
      <return type-id='type-id-40'/>
    </function-decl>
    <!-- long int labs(long int) -->
    <function-decl name='labs' filepath='/usr/include/stdlib.h' line='775' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- ldiv_t ldiv(long int, long int) -->
    <function-decl name='ldiv' filepath='/usr/include/stdlib.h' line='790' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-54'/>
      <!-- typedef ldiv_t -->
      <return type-id='type-id-63'/>
    </function-decl>
    <!-- void* malloc(size_t) -->
    <function-decl name='malloc' filepath='/usr/include/stdlib.h' line='466' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- int mblen(const char*, size_t) -->
    <function-decl name='mblen' filepath='/usr/include/stdlib.h' line='862' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- size_t mbstowcs(wchar_t* restrict, const char* restrict, size_t) -->
    <function-decl name='mbstowcs' filepath='/usr/include/stdlib.h' line='873' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- int mbtowc(wchar_t* restrict, const char* restrict, size_t) -->
    <function-decl name='mbtowc' filepath='/usr/include/stdlib.h' line='865' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void qsort(void*, size_t, size_t, __compar_fn_t) -->
    <function-decl name='qsort' filepath='/usr/include/stdlib.h' line='764' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'typedef __compar_fn_t' -->
      <parameter type-id='type-id-60'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- void quick_exit(int) -->
    <function-decl name='quick_exit' filepath='/usr/include/stdlib.h' line='549' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- int rand() -->
    <function-decl name='rand' filepath='/usr/include/stdlib.h' line='374' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- void* realloc(void*, size_t) -->
    <function-decl name='realloc' filepath='/usr/include/stdlib.h' line='480' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-55'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- void* -->
      <return type-id='type-id-55'/>
    </function-decl>
    <!-- void srand(unsigned int) -->
    <function-decl name='srand' filepath='/usr/include/stdlib.h' line='376' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-69'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- double strtod(const char* restrict, char** restrict) -->
    <function-decl name='strtod' filepath='/usr/include/stdlib.h' line='164' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- long int strtol(const char* restrict, char** restrict, int) -->
    <function-decl name='strtol' filepath='/usr/include/stdlib.h' line='183' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- unsigned long int strtoul(const char* restrict, char** restrict, int) -->
    <function-decl name='strtoul' filepath='/usr/include/stdlib.h' line='187' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- unsigned long int -->
      <return type-id='type-id-56'/>
    </function-decl>
    <!-- int system(const char*) -->
    <function-decl name='system' filepath='/usr/include/stdlib.h' line='716' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- size_t wcstombs(char* restrict, const wchar_t* restrict, size_t) -->
    <function-decl name='wcstombs' filepath='/usr/include/stdlib.h' line='876' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- int wctomb(char*, wchar_t) -->
    <function-decl name='wctomb' filepath='/usr/include/stdlib.h' line='869' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-40'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- namespace __gnu_cxx -->
    <namespace-decl name='__gnu_cxx'>
      <!-- lldiv_t __gnu_cxx::div(long long int, long long int) -->
      <function-decl name='div' mangled-name='_ZN9__gnu_cxx3divExx' filepath='/usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/cstdlib' line='214' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'long long int' -->
        <parameter type-id='type-id-76'/>
        <!-- parameter of type 'long long int' -->
        <parameter type-id='type-id-76'/>
        <!-- typedef lldiv_t -->
        <return type-id='type-id-77'/>
      </function-decl>
    </namespace-decl>
    <!-- void _Exit(int) -->
    <function-decl name='_Exit' filepath='/usr/include/stdlib.h' line='557' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- void -->
      <return type-id='type-id-8'/>
    </function-decl>
    <!-- long long int llabs(long long int) -->
    <function-decl name='llabs' filepath='/usr/include/stdlib.h' line='779' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long long int' -->
      <parameter type-id='type-id-76'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- lldiv_t lldiv(long long int, long long int) -->
    <function-decl name='lldiv' filepath='/usr/include/stdlib.h' line='796' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'long long int' -->
      <parameter type-id='type-id-76'/>
      <!-- parameter of type 'long long int' -->
      <parameter type-id='type-id-76'/>
      <!-- typedef lldiv_t -->
      <return type-id='type-id-77'/>
    </function-decl>
    <!-- long long int atoll(const char*) -->
    <function-decl name='atoll' filepath='/usr/include/stdlib.h' line='157' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long int strtoll(const char* restrict, char** restrict, int) -->
    <function-decl name='strtoll' filepath='/usr/include/stdlib.h' line='209' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long unsigned int strtoull(const char* restrict, char** restrict, int) -->
    <function-decl name='strtoull' filepath='/usr/include/stdlib.h' line='214' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long long unsigned int -->
      <return type-id='type-id-79'/>
    </function-decl>
    <!-- float strtof(const char* restrict, char** restrict) -->
    <function-decl name='strtof' filepath='/usr/include/stdlib.h' line='172' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- long double strtold(const char* restrict, char** restrict) -->
    <function-decl name='strtold' filepath='/usr/include/stdlib.h' line='175' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'char** restrict' -->
      <parameter type-id='type-id-71'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- wint_t btowc(int) -->
    <function-decl name='btowc' filepath='/usr/include/wchar.h' line='353' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wint_t fgetwc(__FILE*) -->
    <function-decl name='fgetwc' filepath='/usr/include/wchar.h' line='745' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wchar_t* fgetws(wchar_t* restrict, int, __FILE* restrict) -->
    <function-decl name='fgetws' filepath='/usr/include/wchar.h' line='774' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wint_t fputwc(wchar_t, __FILE*) -->
    <function-decl name='fputwc' filepath='/usr/include/wchar.h' line='759' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- int fputws(const wchar_t* restrict, __FILE* restrict) -->
    <function-decl name='fputws' filepath='/usr/include/wchar.h' line='781' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fwide(__FILE*, int) -->
    <function-decl name='fwide' filepath='/usr/include/wchar.h' line='587' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fwprintf(__FILE* restrict, const wchar_t* restrict, ...) -->
    <function-decl name='fwprintf' filepath='/usr/include/wchar.h' line='594' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int fwscanf(__FILE* restrict, const wchar_t* restrict, ...) -->
    <function-decl name='fwscanf' filepath='/usr/include/wchar.h' line='635' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wint_t getwc(__FILE*) -->
    <function-decl name='getwc' filepath='/usr/include/wchar.h' line='746' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wint_t getwchar() -->
    <function-decl name='getwchar' filepath='/usr/include/wchar.h' line='752' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- size_t mbrlen(const char* restrict, size_t, mbstate_t* restrict) -->
    <function-decl name='mbrlen' filepath='/usr/include/wchar.h' line='376' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'mbstate_t* restrict' -->
      <parameter type-id='type-id-92'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- size_t mbrtowc(wchar_t* restrict, const char* restrict, size_t, mbstate_t* restrict) -->
    <function-decl name='mbrtowc' filepath='/usr/include/wchar.h' line='365' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const char* restrict' -->
      <parameter type-id='type-id-68'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'mbstate_t* restrict' -->
      <parameter type-id='type-id-92'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- int mbsinit(const mbstate_t*) -->
    <function-decl name='mbsinit' filepath='/usr/include/wchar.h' line='361' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const mbstate_t*' -->
      <parameter type-id='type-id-94'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- size_t mbsrtowcs(wchar_t* restrict, const char** restrict, size_t, mbstate_t* restrict) -->
    <function-decl name='mbsrtowcs' filepath='/usr/include/wchar.h' line='408' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const char** restrict' -->
      <parameter type-id='type-id-96'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'mbstate_t* restrict' -->
      <parameter type-id='type-id-92'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- wint_t putwc(wchar_t, __FILE*) -->
    <function-decl name='putwc' filepath='/usr/include/wchar.h' line='760' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- wint_t putwchar(wchar_t) -->
    <function-decl name='putwchar' filepath='/usr/include/wchar.h' line='766' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- int swprintf(wchar_t* restrict, size_t, const wchar_t* restrict, ...) -->
    <function-decl name='swprintf' filepath='/usr/include/wchar.h' line='604' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int swscanf(const wchar_t* restrict, const wchar_t* restrict, ...) -->
    <function-decl name='swscanf' filepath='/usr/include/wchar.h' line='645' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wint_t ungetwc(wint_t, __FILE*) -->
    <function-decl name='ungetwc' filepath='/usr/include/wchar.h' line='789' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- parameter of type '__FILE*' -->
      <parameter type-id='type-id-85'/>
      <!-- typedef wint_t -->
      <return type-id='type-id-82'/>
    </function-decl>
    <!-- int vfwprintf(__FILE* restrict, const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vfwprintf' filepath='/usr/include/wchar.h' line='612' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vfwscanf(__FILE* restrict, const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vfwscanf' filepath='/usr/include/wchar.h' line='689' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '__FILE* restrict' -->
      <parameter type-id='type-id-86'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vswprintf(wchar_t* restrict, size_t, const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vswprintf' filepath='/usr/include/wchar.h' line='625' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vswscanf(const wchar_t* restrict, const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vswscanf' filepath='/usr/include/wchar.h' line='701' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vwprintf(const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vwprintf' filepath='/usr/include/wchar.h' line='620' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int vwscanf(const wchar_t* restrict, __va_list_tag*) -->
    <function-decl name='vwscanf' filepath='/usr/include/wchar.h' line='697' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-99'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- size_t wcrtomb(char* restrict, wchar_t, mbstate_t* restrict) -->
    <function-decl name='wcrtomb' filepath='/usr/include/wchar.h' line='370' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- parameter of type 'mbstate_t* restrict' -->
      <parameter type-id='type-id-92'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- wchar_t* wcscat(wchar_t* restrict, const wchar_t* restrict) -->
    <function-decl name='wcscat' filepath='/usr/include/wchar.h' line='155' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- int wcscmp(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcscmp' filepath='/usr/include/wchar.h' line='163' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int wcscoll(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcscoll' filepath='/usr/include/wchar.h' line='192' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wchar_t* wcscpy(wchar_t* restrict, const wchar_t* restrict) -->
    <function-decl name='wcscpy' filepath='/usr/include/wchar.h' line='147' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- size_t wcscspn(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcscspn' filepath='/usr/include/wchar.h' line='252' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- size_t wcsftime(wchar_t* restrict, size_t, const wchar_t* restrict, const tm* restrict) -->
    <function-decl name='wcsftime' filepath='/usr/include/wchar.h' line='855' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'const tm* restrict' -->
      <parameter type-id='type-id-103'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- size_t wcslen(const wchar_t*) -->
    <function-decl name='wcslen' filepath='/usr/include/wchar.h' line='287' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- wchar_t* wcsncat(wchar_t* restrict, const wchar_t* restrict, size_t) -->
    <function-decl name='wcsncat' filepath='/usr/include/wchar.h' line='158' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- int wcsncmp(const wchar_t*, const wchar_t*, size_t) -->
    <function-decl name='wcsncmp' filepath='/usr/include/wchar.h' line='166' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wchar_t* wcsncpy(wchar_t* restrict, const wchar_t* restrict, size_t) -->
    <function-decl name='wcsncpy' filepath='/usr/include/wchar.h' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- size_t wcsrtombs(char* restrict, const wchar_t** restrict, size_t, mbstate_t* restrict) -->
    <function-decl name='wcsrtombs' filepath='/usr/include/wchar.h' line='414' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char* restrict' -->
      <parameter type-id='type-id-72'/>
      <!-- parameter of type 'const wchar_t** restrict' -->
      <parameter type-id='type-id-105'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- parameter of type 'mbstate_t* restrict' -->
      <parameter type-id='type-id-92'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- size_t wcsspn(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcsspn' filepath='/usr/include/wchar.h' line='256' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- double wcstod(const wchar_t* restrict, wchar_t** restrict) -->
    <function-decl name='wcstod' filepath='/usr/include/wchar.h' line='450' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- double -->
      <return type-id='type-id-53'/>
    </function-decl>
    <!-- float wcstof(const wchar_t* restrict, wchar_t** restrict) -->
    <function-decl name='wcstof' filepath='/usr/include/wchar.h' line='457' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- float -->
      <return type-id='type-id-80'/>
    </function-decl>
    <!-- wchar_t* wcstok(wchar_t* restrict, const wchar_t* restrict, wchar_t** restrict) -->
    <function-decl name='wcstok' filepath='/usr/include/wchar.h' line='282' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- long int wcstol(const wchar_t* restrict, wchar_t** restrict, int) -->
    <function-decl name='wcstol' filepath='/usr/include/wchar.h' line='468' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long int -->
      <return type-id='type-id-54'/>
    </function-decl>
    <!-- unsigned long int wcstoul(const wchar_t* restrict, wchar_t** restrict, int) -->
    <function-decl name='wcstoul' filepath='/usr/include/wchar.h' line='473' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- unsigned long int -->
      <return type-id='type-id-56'/>
    </function-decl>
    <!-- size_t wcsxfrm(wchar_t* restrict, const wchar_t* restrict, size_t) -->
    <function-decl name='wcsxfrm' filepath='/usr/include/wchar.h' line='196' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- typedef size_t -->
      <return type-id='type-id-57'/>
    </function-decl>
    <!-- int wctob(wint_t) -->
    <function-decl name='wctob' filepath='/usr/include/wchar.h' line='357' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef wint_t' -->
      <parameter type-id='type-id-82'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int wmemcmp(const wchar_t*, const wchar_t*, size_t) -->
    <function-decl name='wmemcmp' filepath='/usr/include/wchar.h' line='325' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wchar_t* wmemcpy(wchar_t* restrict, const wchar_t* restrict, size_t) -->
    <function-decl name='wmemcpy' filepath='/usr/include/wchar.h' line='329' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t* restrict' -->
      <parameter type-id='type-id-67'/>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wmemmove(wchar_t*, const wchar_t*, size_t) -->
    <function-decl name='wmemmove' filepath='/usr/include/wchar.h' line='334' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t*' -->
      <parameter type-id='type-id-66'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wmemset(wchar_t*, wchar_t, size_t) -->
    <function-decl name='wmemset' filepath='/usr/include/wchar.h' line='338' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t*' -->
      <parameter type-id='type-id-66'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- int wprintf(const wchar_t* restrict, ...) -->
    <function-decl name='wprintf' filepath='/usr/include/wchar.h' line='601' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- int wscanf(const wchar_t* restrict, ...) -->
    <function-decl name='wscanf' filepath='/usr/include/wchar.h' line='642' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-5'/>
    </function-decl>
    <!-- wchar_t* wcschr(const wchar_t*, wchar_t) -->
    <function-decl name='wcschr' filepath='/usr/include/wchar.h' line='227' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wcspbrk(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcspbrk' filepath='/usr/include/wchar.h' line='266' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wcsrchr(const wchar_t*, wchar_t) -->
    <function-decl name='wcsrchr' filepath='/usr/include/wchar.h' line='237' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wcsstr(const wchar_t*, const wchar_t*) -->
    <function-decl name='wcsstr' filepath='/usr/include/wchar.h' line='277' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- wchar_t* wmemchr(const wchar_t*, wchar_t, size_t) -->
    <function-decl name='wmemchr' filepath='/usr/include/wchar.h' line='320' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-74'/>
      <!-- parameter of type 'wchar_t' -->
      <parameter type-id='type-id-65'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-57'/>
      <!-- wchar_t* -->
      <return type-id='type-id-66'/>
    </function-decl>
    <!-- long double wcstold(const wchar_t* restrict, wchar_t** restrict) -->
    <function-decl name='wcstold' filepath='/usr/include/wchar.h' line='459' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- long double -->
      <return type-id='type-id-81'/>
    </function-decl>
    <!-- long long int wcstoll(const wchar_t* restrict, wchar_t** restrict, int) -->
    <function-decl name='wcstoll' filepath='/usr/include/wchar.h' line='483' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long long int -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- long long unsigned int wcstoull(const wchar_t* restrict, wchar_t** restrict, int) -->
    <function-decl name='wcstoull' filepath='/usr/include/wchar.h' line='490' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t* restrict' -->
      <parameter type-id='type-id-75'/>
      <!-- parameter of type 'wchar_t** restrict' -->
      <parameter type-id='type-id-107'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-5'/>
      <!-- long long unsigned int -->
      <return type-id='type-id-79'/>
    </function-decl>
  </abi-instr>
</abi-corpus>
